Program {
    declarations: [
        Function(
            FunctionDeclaration {
                identifier: "main",
                params: [],
                ret: Int,
                body: Some(
                    Block {
                        items: [
                            Declaration(
                                Variable(
                                    VariableDeclaration {
                                        ty: Int,
                                        name: "x",
                                        init: Some(
                                            Constant(
                                                Int(
                                                    10,
                                                ),
                                            ),
                                        ),
                                        storage: None,
                                        span: SourceSpan {
                                            offset: SourceOffset(
                                                21,
                                            ),
                                            length: 11,
                                        },
                                    },
                                ),
                            ),
                            Statement(
                                Expression(
                                    Ternary(
                                        CompoundAssignment(
                                            Var(
                                                "x",
                                            ),
                                            Subtract,
                                            Constant(
                                                Int(
                                                    1,
                                                ),
                                            ),
                                        ),
                                        CompoundAssignment(
                                            Var(
                                                "x",
                                            ),
                                            Divide,
                                            Constant(
                                                Int(
                                                    2,
                                                ),
                                            ),
                                        ),
                                        Constant(
                                            Int(
                                                0,
                                            ),
                                        ),
                                    ),
                                ),
                            ),
                            Statement(
                                Return(
                                    Binary(
                                        Equals,
                                        Var(
                                            "x",
                                        ),
                                        Constant(
                                            Int(
                                                4,
                                            ),
                                        ),
                                    ),
                                ),
                            ),
                        ],
                        span: SourceSpan {
                            offset: SourceOffset(
                                15,
                            ),
                            length: 67,
                        },
                    },
                ),
                storage: None,
                span: SourceSpan {
                    offset: SourceOffset(
                        0,
                    ),
                    length: 82,
                },
            },
        ),
    ],
}