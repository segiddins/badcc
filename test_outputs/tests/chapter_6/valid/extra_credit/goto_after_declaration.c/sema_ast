Program {
    declarations: [
        FunctionDeclaration {
            identifier: "main",
            params: [],
            ret: Int,
            body: [
                VariableDeclaration {
                    name: "x.1",
                    ty: Int,
                    init: Constant {
                        constant: 1,
                    },
                },
                Goto(
                    "post_declaration",
                ),
                VariableDeclaration {
                    name: "i.2",
                    ty: Int,
                    init: Assignment {
                        lhs: Var {
                            name: "x.1",
                        },
                        rhs: Constant {
                            constant: 0,
                        },
                    },
                },
                Labeled(
                    "post_declaration",
                    Expression(
                        Assignment {
                            lhs: Var {
                                name: "i.2",
                            },
                            rhs: Constant {
                                constant: 5,
                            },
                        },
                    ),
                ),
                Return(
                    Binary {
                        op: And,
                        lhs: Binary {
                            op: Equals,
                            lhs: Var {
                                name: "x.1",
                            },
                            rhs: Constant {
                                constant: 1,
                            },
                        },
                        rhs: Binary {
                            op: Equals,
                            lhs: Var {
                                name: "i.2",
                            },
                            rhs: Constant {
                                constant: 5,
                            },
                        },
                    },
                ),
            ],
        },
    ],
}