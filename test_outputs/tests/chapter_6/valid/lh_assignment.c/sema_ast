Program {
    declarations: [
        FunctionDeclaration {
            identifier: "main",
            params: [],
            ret: Int,
            body: [
                VariableDeclaration {
                    name: "x.1",
                    ty: Int,
                    init: Constant(
                        10,
                    ),
                },
                VariableDeclaration {
                    name: "y.2",
                    ty: Int,
                    init: Constant(
                        0,
                    ),
                },
                Expression(
                    Assignment(
                        Var(
                            "y.2",
                        ),
                        Ternary(
                            Assignment(
                                Var(
                                    "x.1",
                                ),
                                Constant(
                                    5,
                                ),
                            ),
                            Var(
                                "x.1",
                            ),
                            Constant(
                                2,
                            ),
                        ),
                    ),
                ),
                Return(
                    Binary(
                        And,
                        Binary(
                            Equals,
                            Var(
                                "x.1",
                            ),
                            Constant(
                                5,
                            ),
                        ),
                        Binary(
                            Equals,
                            Var(
                                "y.2",
                            ),
                            Constant(
                                5,
                            ),
                        ),
                    ),
                ),
            ],
        },
    ],
}