Program {
    declarations: [
        FunctionDeclaration {
            identifier: "main",
            params: [],
            ret: Int,
            body: [
                VariableDeclaration {
                    name: "a",
                    ty: Int,
                    init: Constant(2),
                },
                VariableDeclaration {
                    name: "b",
                    ty: Int,
                    init: Binary {
                        op: Add,
                        lhs: Constant(3),
                        rhs: Unary {
                            op: PostfixIncrement,
                            expr: Var("a"),
                        },
                    },
                },
                VariableDeclaration {
                    name: "c",
                    ty: Int,
                    init: Binary {
                        op: Add,
                        lhs: Constant(4),
                        rhs: Unary {
                            op: PrefixIncrement,
                            expr: Var("b"),
                        },
                    },
                },
                Return(
                    Binary {
                        op: And,
                        lhs: Binary {
                            op: And,
                            lhs: Binary {
                                op: Equals,
                                lhs: Var("a"),
                                rhs: Constant(3),
                            },
                            rhs: Binary {
                                op: Equals,
                                lhs: Var("b"),
                                rhs: Constant(6),
                            },
                        },
                        rhs: Binary {
                            op: Equals,
                            lhs: Var("c"),
                            rhs: Constant(10),
                        },
                    },
                ),
            ],
        },
    ],
}