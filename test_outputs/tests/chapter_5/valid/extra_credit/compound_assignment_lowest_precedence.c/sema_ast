Program {
    declarations: [
        FunctionDeclaration {
            identifier: "main",
            params: [],
            ret: Int,
            body: [
                VariableDeclaration {
                    name: "a.1",
                    ty: Int,
                    init: Constant(10),
                },
                VariableDeclaration {
                    name: "b.2",
                    ty: Int,
                    init: Constant(12),
                },
                Expression(
                    Assignment {
                        lhs: Var("a.1"),
                        rhs: Binary {
                            op: Add,
                            lhs: Var("a.1"),
                            rhs: Binary {
                                op: Or,
                                lhs: Constant(0),
                                rhs: Var("b.2"),
                            },
                        },
                    },
                ),
                Expression(
                    Assignment {
                        lhs: Var("b.2"),
                        rhs: Binary {
                            op: Multiply,
                            lhs: Var("b.2"),
                            rhs: Binary {
                                op: And,
                                lhs: Var("a.1"),
                                rhs: Constant(0),
                            },
                        },
                    },
                ),
                VariableDeclaration {
                    name: "c.3",
                    ty: Int,
                    init: Constant(14),
                },
                Expression(
                    Assignment {
                        lhs: Var("c.3"),
                        rhs: Binary {
                            op: Subtract,
                            lhs: Var("c.3"),
                            rhs: Binary {
                                op: Or,
                                lhs: Var("a.1"),
                                rhs: Var("b.2"),
                            },
                        },
                    },
                ),
                VariableDeclaration {
                    name: "d.4",
                    ty: Int,
                    init: Constant(16),
                },
                Expression(
                    Assignment {
                        lhs: Var("d.4"),
                        rhs: Binary {
                            op: Divide,
                            lhs: Var("d.4"),
                            rhs: Binary {
                                op: Or,
                                lhs: Var("c.3"),
                                rhs: Var("d.4"),
                            },
                        },
                    },
                ),
                Return(
                    Binary {
                        op: And,
                        lhs: Binary {
                            op: And,
                            lhs: Binary {
                                op: And,
                                lhs: Binary {
                                    op: Equals,
                                    lhs: Var("a.1"),
                                    rhs: Constant(11),
                                },
                                rhs: Binary {
                                    op: Equals,
                                    lhs: Var("b.2"),
                                    rhs: Constant(0),
                                },
                            },
                            rhs: Binary {
                                op: Equals,
                                lhs: Var("c.3"),
                                rhs: Constant(13),
                            },
                        },
                        rhs: Binary {
                            op: Equals,
                            lhs: Var("d.4"),
                            rhs: Constant(16),
                        },
                    },
                ),
            ],
        },
    ],
}