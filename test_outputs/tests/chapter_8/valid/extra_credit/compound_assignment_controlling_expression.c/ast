Program {
    declarations: [
        FunctionDeclaration {
            identifier: "main",
            params: [],
            ret: Int,
            body: [
                VariableDeclaration {
                    name: "i",
                    ty: Int,
                    init: Constant {
                        constant: 100,
                    },
                },
                VariableDeclaration {
                    name: "sum",
                    ty: Int,
                    init: Constant {
                        constant: 0,
                    },
                },
                DoWhile(
                    Expression(
                        CompoundAssignment {
                            op: Add,
                            lhs: Var {
                                name: "sum",
                            },
                            rhs: Constant {
                                constant: 2,
                            },
                        },
                    ),
                    CompoundAssignment {
                        op: Subtract,
                        lhs: Var {
                            name: "i",
                        },
                        rhs: Constant {
                            constant: 1,
                        },
                    },
                    None,
                ),
                Return(
                    Binary {
                        op: And,
                        lhs: Binary {
                            op: Equals,
                            lhs: Var {
                                name: "i",
                            },
                            rhs: Constant {
                                constant: 0,
                            },
                        },
                        rhs: Binary {
                            op: Equals,
                            lhs: Var {
                                name: "sum",
                            },
                            rhs: Constant {
                                constant: 200,
                            },
                        },
                    },
                ),
            ],
        },
    ],
}