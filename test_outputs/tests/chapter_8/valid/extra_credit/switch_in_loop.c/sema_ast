Program {
    declarations: [
        FunctionDeclaration {
            identifier: "main",
            params: [],
            ret: Int,
            body: [
                VariableDeclaration {
                    name: "acc.1",
                    ty: Int,
                    init: Constant(0),
                },
                VariableDeclaration {
                    name: "ctr.2",
                    ty: Int,
                    init: Constant(0),
                },
                For {
                    init: VariableDeclaration {
                        name: "i.3",
                        ty: Int,
                        init: Constant(0),
                    },
                    condition: Binary {
                        op: LessThan,
                        lhs: Var("i.3"),
                        rhs: Constant(10),
                    },
                    post: Assignment {
                        lhs: Var("i.3"),
                        rhs: Binary {
                            op: Add,
                            lhs: Var("i.3"),
                            rhs: Constant(1),
                        },
                    },
                    body: Compound(
                        [
                            Switch(
                                Var("i.3"),
                                Compound(
                                    [
                                        Case {
                                            expression: Constant(0),
                                            statement: Expression(
                                                Assignment {
                                                    lhs: Var("acc.1"),
                                                    rhs: Constant(2),
                                                },
                                            ),
                                            label: "switch.1",
                                        },
                                        Break {
                                            label: "switch.1",
                                        },
                                        Case {
                                            expression: Constant(1),
                                            statement: Expression(
                                                Assignment {
                                                    lhs: Var("acc.1"),
                                                    rhs: Binary {
                                                        op: Multiply,
                                                        lhs: Var("acc.1"),
                                                        rhs: Constant(3),
                                                    },
                                                },
                                            ),
                                            label: "switch.1",
                                        },
                                        Break {
                                            label: "switch.1",
                                        },
                                        Case {
                                            expression: Constant(2),
                                            statement: Expression(
                                                Assignment {
                                                    lhs: Var("acc.1"),
                                                    rhs: Binary {
                                                        op: Multiply,
                                                        lhs: Var("acc.1"),
                                                        rhs: Constant(4),
                                                    },
                                                },
                                            ),
                                            label: "switch.1",
                                        },
                                        Break {
                                            label: "switch.1",
                                        },
                                        Default {
                                            statement: Expression(
                                                Assignment {
                                                    lhs: Var("acc.1"),
                                                    rhs: Binary {
                                                        op: Add,
                                                        lhs: Var("acc.1"),
                                                        rhs: Constant(1),
                                                    },
                                                },
                                            ),
                                            label: "switch.1",
                                        },
                                    ],
                                ),
                                Some(
                                    "switch.1",
                                ),
                            ),
                            Expression(
                                Assignment {
                                    lhs: Var("ctr.2"),
                                    rhs: Binary {
                                        op: Add,
                                        lhs: Var("ctr.2"),
                                        rhs: Constant(1),
                                    },
                                },
                            ),
                        ],
                    ),
                    label: "loop.0",
                },
                Return(
                    Binary {
                        op: And,
                        lhs: Binary {
                            op: Equals,
                            lhs: Var("ctr.2"),
                            rhs: Constant(10),
                        },
                        rhs: Binary {
                            op: Equals,
                            lhs: Var("acc.1"),
                            rhs: Constant(31),
                        },
                    },
                ),
            ],
        },
    ],
}