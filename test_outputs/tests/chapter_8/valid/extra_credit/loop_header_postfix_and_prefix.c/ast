Program {
    declarations: [
        FunctionDeclaration {
            identifier: "main",
            params: [],
            ret: Int,
            body: [
                VariableDeclaration {
                    name: "i",
                    ty: Int,
                    init: Constant {
                        constant: 100,
                    },
                },
                VariableDeclaration {
                    name: "count",
                    ty: Int,
                    init: Constant {
                        constant: 0,
                    },
                },
                While(
                    Unary {
                        op: PostfixDecrement,
                        expr: Var {
                            name: "i",
                        },
                    },
                    Expression(
                        Unary {
                            op: PostfixIncrement,
                            expr: Var {
                                name: "count",
                            },
                        },
                    ),
                    None,
                ),
                If(
                    Binary {
                        op: NotEqual,
                        lhs: Var {
                            name: "count",
                        },
                        rhs: Constant {
                            constant: 100,
                        },
                    },
                    Return(
                        Constant {
                            constant: 0,
                        },
                    ),
                    None,
                ),
                Expression(
                    Assignment {
                        lhs: Var {
                            name: "i",
                        },
                        rhs: Constant {
                            constant: 100,
                        },
                    },
                ),
                Expression(
                    Assignment {
                        lhs: Var {
                            name: "count",
                        },
                        rhs: Constant {
                            constant: 0,
                        },
                    },
                ),
                While(
                    Unary {
                        op: PrefixDecrement,
                        expr: Var {
                            name: "i",
                        },
                    },
                    Expression(
                        Unary {
                            op: PostfixIncrement,
                            expr: Var {
                                name: "count",
                            },
                        },
                    ),
                    None,
                ),
                If(
                    Binary {
                        op: NotEqual,
                        lhs: Var {
                            name: "count",
                        },
                        rhs: Constant {
                            constant: 99,
                        },
                    },
                    Return(
                        Constant {
                            constant: 0,
                        },
                    ),
                    None,
                ),
                Return(
                    Constant {
                        constant: 1,
                    },
                ),
            ],
        },
    ],
}