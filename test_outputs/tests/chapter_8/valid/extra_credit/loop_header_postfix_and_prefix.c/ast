Program {
    declarations: [
        FunctionDeclaration {
            identifier: "main",
            params: [],
            ret: Int,
            body: [
                VariableDeclaration {
                    name: "i",
                    ty: Int,
                    init: Constant(100),
                },
                VariableDeclaration {
                    name: "count",
                    ty: Int,
                    init: Constant(0),
                },
                While(
                    Unary {
                        op: PostfixDecrement,
                        expr: Var("i"),
                    },
                    Expression(
                        Unary {
                            op: PostfixIncrement,
                            expr: Var("count"),
                        },
                    ),
                    None,
                ),
                If(
                    Binary {
                        op: NotEqual,
                        lhs: Var("count"),
                        rhs: Constant(100),
                    },
                    Return(
                        Constant(0),
                    ),
                    None,
                ),
                Expression(
                    Assignment {
                        lhs: Var("i"),
                        rhs: Constant(100),
                    },
                ),
                Expression(
                    Assignment {
                        lhs: Var("count"),
                        rhs: Constant(0),
                    },
                ),
                While(
                    Unary {
                        op: PrefixDecrement,
                        expr: Var("i"),
                    },
                    Expression(
                        Unary {
                            op: PostfixIncrement,
                            expr: Var("count"),
                        },
                    ),
                    None,
                ),
                If(
                    Binary {
                        op: NotEqual,
                        lhs: Var("count"),
                        rhs: Constant(99),
                    },
                    Return(
                        Constant(0),
                    ),
                    None,
                ),
                Return(
                    Constant(1),
                ),
            ],
        },
    ],
}