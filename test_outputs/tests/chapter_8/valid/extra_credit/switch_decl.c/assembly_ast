Program {
    function_definition: Function {
        name: "main",
        instructions: [
            AllocateStack(
                32,
            ),
            Move {
                source: Immediate(
                    3,
                ),
                destination: Psuedo(
                    0,
                ),
            },
            Move {
                source: Immediate(
                    0,
                ),
                destination: Psuedo(
                    1,
                ),
            },
            Jmp(
                "switch.0.cases",
            ),
            Move {
                source: Immediate(
                    5,
                ),
                destination: Psuedo(
                    1,
                ),
            },
            Move {
                source: Psuedo(
                    1,
                ),
                destination: Register(
                    R10,
                ),
            },
            Move {
                source: Register(
                    R10,
                ),
                destination: Psuedo(
                    3,
                ),
            },
            Label(
                "switch.0.3",
            ),
            Move {
                source: Immediate(
                    4,
                ),
                destination: Psuedo(
                    3,
                ),
            },
            Move {
                source: Psuedo(
                    1,
                ),
                destination: Register(
                    R10,
                ),
            },
            Move {
                source: Register(
                    R10,
                ),
                destination: Psuedo(
                    4,
                ),
            },
            Move {
                source: Psuedo(
                    3,
                ),
                destination: Register(
                    R10,
                ),
            },
            Binary(
                Add,
                Register(
                    R10,
                ),
                Psuedo(
                    4,
                ),
            ),
            Move {
                source: Psuedo(
                    4,
                ),
                destination: Register(
                    R10,
                ),
            },
            Move {
                source: Register(
                    R10,
                ),
                destination: Psuedo(
                    1,
                ),
            },
            Jmp(
                "switch.0",
            ),
            Label(
                "switch.0.cases",
            ),
            Move {
                source: Immediate(
                    3,
                ),
                destination: Register(
                    R11,
                ),
            },
            Cmp(
                Psuedo(
                    0,
                ),
                Register(
                    R11,
                ),
            ),
            Move {
                source: Immediate(
                    0,
                ),
                destination: Psuedo(
                    2,
                ),
            },
            SetCC(
                E,
                Psuedo(
                    2,
                ),
            ),
            Cmp(
                Immediate(
                    0,
                ),
                Psuedo(
                    2,
                ),
            ),
            JmpCC(
                NE,
                "switch.0.3",
            ),
            Label(
                "switch.0",
            ),
            Cmp(
                Immediate(
                    3,
                ),
                Psuedo(
                    0,
                ),
            ),
            Move {
                source: Immediate(
                    0,
                ),
                destination: Psuedo(
                    6,
                ),
            },
            SetCC(
                E,
                Psuedo(
                    6,
                ),
            ),
            Cmp(
                Immediate(
                    0,
                ),
                Psuedo(
                    6,
                ),
            ),
            JmpCC(
                E,
                "main.0.false",
            ),
            Cmp(
                Immediate(
                    4,
                ),
                Psuedo(
                    1,
                ),
            ),
            Move {
                source: Immediate(
                    0,
                ),
                destination: Psuedo(
                    7,
                ),
            },
            SetCC(
                E,
                Psuedo(
                    7,
                ),
            ),
            Cmp(
                Immediate(
                    0,
                ),
                Psuedo(
                    7,
                ),
            ),
            JmpCC(
                E,
                "main.0.false",
            ),
            Move {
                source: Immediate(
                    1,
                ),
                destination: Psuedo(
                    5,
                ),
            },
            Jmp(
                "main.0.end",
            ),
            Label(
                "main.0.false",
            ),
            Move {
                source: Immediate(
                    0,
                ),
                destination: Psuedo(
                    5,
                ),
            },
            Label(
                "main.0.end",
            ),
            Move {
                source: Psuedo(
                    5,
                ),
                destination: Register(
                    AX,
                ),
            },
            Ret,
            Move {
                source: Immediate(
                    0,
                ),
                destination: Register(
                    AX,
                ),
            },
            Ret,
        ],
    },
}