Program {
    declarations: [
        FunctionDeclaration {
            identifier: "main",
            params: [],
            ret: Int,
            body: [
                VariableDeclaration {
                    name: "a",
                    ty: Int,
                    init: Constant(4),
                },
                VariableDeclaration {
                    name: "b",
                    ty: Int,
                    init: Constant(0),
                },
                Switch(
                    Constant(2),
                    Compound(
                        [
                            Case {
                                expression: Constant(2),
                                statement: Compound(
                                    [
                                        VariableDeclaration {
                                            name: "a",
                                            ty: Int,
                                            init: Constant(8),
                                        },
                                        Expression(
                                            Assignment {
                                                lhs: Var("b"),
                                                rhs: Var("a"),
                                            },
                                        ),
                                    ],
                                ),
                            },
                        ],
                    ),
                    None,
                ),
                Return(
                    Binary {
                        op: And,
                        lhs: Binary {
                            op: Equals,
                            lhs: Var("a"),
                            rhs: Constant(4),
                        },
                        rhs: Binary {
                            op: Equals,
                            lhs: Var("b"),
                            rhs: Constant(8),
                        },
                    },
                ),
            ],
        },
    ],
}