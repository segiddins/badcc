Program {
    declarations: [
        FunctionDeclaration {
            identifier: "main",
            params: [],
            ret: Int,
            body: [
                VariableDeclaration {
                    name: "cond.1",
                    ty: Int,
                    init: Constant(
                        10,
                    ),
                },
                Switch(
                    Var(
                        "cond.1",
                    ),
                    Compound(
                        [
                            Case(
                                Constant(
                                    1,
                                ),
                                Return(
                                    Constant(
                                        0,
                                    ),
                                ),
                                Some(
                                    "switch.0",
                                ),
                            ),
                            Case(
                                Constant(
                                    10,
                                ),
                                For {
                                    init: VariableDeclaration {
                                        name: "i.2",
                                        ty: Int,
                                        init: Constant(
                                            0,
                                        ),
                                    },
                                    condition: Some(
                                        Binary(
                                            LessThan,
                                            Var(
                                                "i.2",
                                            ),
                                            Constant(
                                                5,
                                            ),
                                        ),
                                    ),
                                    post: Some(
                                        Assignment(
                                            Var(
                                                "i.2",
                                            ),
                                            Binary(
                                                Add,
                                                Var(
                                                    "i.2",
                                                ),
                                                Constant(
                                                    1,
                                                ),
                                            ),
                                        ),
                                    ),
                                    body: Compound(
                                        [
                                            Expression(
                                                Assignment(
                                                    Var(
                                                        "cond.1",
                                                    ),
                                                    Binary(
                                                        Subtract,
                                                        Var(
                                                            "cond.1",
                                                        ),
                                                        Constant(
                                                            1,
                                                        ),
                                                    ),
                                                ),
                                            ),
                                            If(
                                                Binary(
                                                    Equals,
                                                    Var(
                                                        "cond.1",
                                                    ),
                                                    Constant(
                                                        8,
                                                    ),
                                                ),
                                                Break(
                                                    Some(
                                                        "loop.1",
                                                    ),
                                                ),
                                                None,
                                            ),
                                        ],
                                    ),
                                    label: Some(
                                        "loop.1",
                                    ),
                                },
                                Some(
                                    "switch.0",
                                ),
                            ),
                            Return(
                                Constant(
                                    123,
                                ),
                            ),
                            Default(
                                Return(
                                    Constant(
                                        2,
                                    ),
                                ),
                                Some(
                                    "switch.0",
                                ),
                            ),
                        ],
                    ),
                    Some(
                        "switch.0",
                    ),
                ),
                Return(
                    Constant(
                        3,
                    ),
                ),
            ],
        },
    ],
}