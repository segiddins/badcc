Program {
    declarations: [
        FunctionDeclaration {
            identifier: "main",
            params: [],
            ret: Int,
            body: [
                VariableDeclaration {
                    name: "sum.1",
                    ty: Int,
                    init: Constant(0),
                },
                Goto("do_label"),
                Return(
                    Constant(0),
                ),
                Labeled(
                    "do_label",
                    DoWhile(
                        Compound(
                            [
                                Expression(
                                    Assignment {
                                        lhs: Var("sum.1"),
                                        rhs: Constant(1),
                                    },
                                ),
                                Goto("while_label"),
                            ],
                        ),
                        Constant(1),
                        Some(
                            "loop.0",
                        ),
                    ),
                ),
                Labeled(
                    "while_label",
                    While(
                        Constant(1),
                        Compound(
                            [
                                Expression(
                                    Assignment {
                                        lhs: Var("sum.1"),
                                        rhs: Binary {
                                            op: Add,
                                            lhs: Var("sum.1"),
                                            rhs: Constant(1),
                                        },
                                    },
                                ),
                                Goto("break_label"),
                                Return(
                                    Constant(0),
                                ),
                                Labeled(
                                    "break_label",
                                    Break {
                                        label: "loop.1",
                                    },
                                ),
                            ],
                        ),
                        Some(
                            "loop.1",
                        ),
                    ),
                ),
                Null,
                Goto("for_label"),
                Return(
                    Constant(0),
                ),
                Labeled(
                    "for_label",
                    For {
                        init: VariableDeclaration {
                            name: "i.2",
                            ty: Int,
                            init: Constant(0),
                        },
                        condition: Binary {
                            op: LessThan,
                            lhs: Var("i.2"),
                            rhs: Constant(10),
                        },
                        post: Assignment {
                            lhs: Var("i.2"),
                            rhs: Binary {
                                op: Add,
                                lhs: Var("i.2"),
                                rhs: Constant(1),
                            },
                        },
                        body: Compound(
                            [
                                Expression(
                                    Assignment {
                                        lhs: Var("sum.1"),
                                        rhs: Binary {
                                            op: Add,
                                            lhs: Var("sum.1"),
                                            rhs: Constant(1),
                                        },
                                    },
                                ),
                                Goto("continue_label"),
                                Return(
                                    Constant(0),
                                ),
                                Labeled(
                                    "continue_label",
                                    Continue {
                                        label: "loop.2",
                                    },
                                ),
                                Return(
                                    Constant(0),
                                ),
                            ],
                        ),
                        label: "loop.2",
                    },
                ),
                Return(
                    Var("sum.1"),
                ),
            ],
        },
    ],
}