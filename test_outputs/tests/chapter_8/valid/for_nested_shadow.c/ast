Program {
    function: Function {
        name: "main",
        body: Block {
            items: [
                Declaration(
                    VariableDeclaration {
                        name: "i",
                        init: Some(
                            Constant(
                                0,
                            ),
                        ),
                    },
                ),
                Declaration(
                    VariableDeclaration {
                        name: "j",
                        init: Some(
                            Constant(
                                0,
                            ),
                        ),
                    },
                ),
                Declaration(
                    VariableDeclaration {
                        name: "k",
                        init: Some(
                            Constant(
                                1,
                            ),
                        ),
                    },
                ),
                Statement(
                    For {
                        init: Decl(
                            VariableDeclaration {
                                name: "i",
                                init: Some(
                                    Constant(
                                        100,
                                    ),
                                ),
                            },
                        ),
                        condition: Some(
                            Binary(
                                GreaterThan,
                                Var(
                                    "i",
                                ),
                                Constant(
                                    0,
                                ),
                            ),
                        ),
                        post: Some(
                            Assignment(
                                Var(
                                    "i",
                                ),
                                Binary(
                                    Subtract,
                                    Var(
                                        "i",
                                    ),
                                    Constant(
                                        1,
                                    ),
                                ),
                            ),
                        ),
                        body: Compound(
                            Block {
                                items: [
                                    Declaration(
                                        VariableDeclaration {
                                            name: "i",
                                            init: Some(
                                                Constant(
                                                    1,
                                                ),
                                            ),
                                        },
                                    ),
                                    Declaration(
                                        VariableDeclaration {
                                            name: "j",
                                            init: Some(
                                                Binary(
                                                    Add,
                                                    Var(
                                                        "i",
                                                    ),
                                                    Var(
                                                        "k",
                                                    ),
                                                ),
                                            ),
                                        },
                                    ),
                                    Statement(
                                        Expression(
                                            Assignment(
                                                Var(
                                                    "k",
                                                ),
                                                Var(
                                                    "j",
                                                ),
                                            ),
                                        ),
                                    ),
                                ],
                            },
                        ),
                        label: None,
                    },
                ),
                Statement(
                    Return(
                        Binary(
                            And,
                            Binary(
                                And,
                                Binary(
                                    Equals,
                                    Var(
                                        "k",
                                    ),
                                    Constant(
                                        101,
                                    ),
                                ),
                                Binary(
                                    Equals,
                                    Var(
                                        "i",
                                    ),
                                    Constant(
                                        0,
                                    ),
                                ),
                            ),
                            Binary(
                                Equals,
                                Var(
                                    "j",
                                ),
                                Constant(
                                    0,
                                ),
                            ),
                        ),
                    ),
                ),
            ],
        },
    },
}