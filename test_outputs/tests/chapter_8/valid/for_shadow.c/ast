Program {
    declarations: [
        FunctionDeclaration {
            identifier: "main",
            params: [],
            ret: Int,
            body: [
                VariableDeclaration {
                    name: "shadow",
                    ty: Int,
                    init: Constant(1),
                },
                VariableDeclaration {
                    name: "acc",
                    ty: Int,
                    init: Constant(0),
                },
                For {
                    init: VariableDeclaration {
                        name: "shadow",
                        ty: Int,
                        init: Constant(0),
                    },
                    condition: Binary {
                        op: LessThan,
                        lhs: Var("shadow"),
                        rhs: Constant(10),
                    },
                    post: Assignment {
                        lhs: Var("shadow"),
                        rhs: Binary {
                            op: Add,
                            lhs: Var("shadow"),
                            rhs: Constant(1),
                        },
                    },
                    body: Compound(
                        [
                            Expression(
                                Assignment {
                                    lhs: Var("acc"),
                                    rhs: Binary {
                                        op: Add,
                                        lhs: Var("acc"),
                                        rhs: Var("shadow"),
                                    },
                                },
                            ),
                        ],
                    ),
                },
                Return(
                    Binary {
                        op: And,
                        lhs: Binary {
                            op: Equals,
                            lhs: Var("acc"),
                            rhs: Constant(45),
                        },
                        rhs: Binary {
                            op: Equals,
                            lhs: Var("shadow"),
                            rhs: Constant(1),
                        },
                    },
                ),
            ],
        },
    ],
}