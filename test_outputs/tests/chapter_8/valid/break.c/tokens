[
    Token {
        kind: Int,
        location: SourceSpan {
            offset: SourceOffset(
                0,
            ),
            length: 3,
        },
    },
    Token {
        kind: Identifier,
        location: SourceSpan {
            offset: SourceOffset(
                4,
            ),
            length: 4,
        },
    },
    Token {
        kind: LParen,
        location: SourceSpan {
            offset: SourceOffset(
                8,
            ),
            length: 1,
        },
    },
    Token {
        kind: Void,
        location: SourceSpan {
            offset: SourceOffset(
                9,
            ),
            length: 4,
        },
    },
    Token {
        kind: RParen,
        location: SourceSpan {
            offset: SourceOffset(
                13,
            ),
            length: 1,
        },
    },
    Token {
        kind: LBrace,
        location: SourceSpan {
            offset: SourceOffset(
                15,
            ),
            length: 1,
        },
    },
    Token {
        kind: Int,
        location: SourceSpan {
            offset: SourceOffset(
                21,
            ),
            length: 3,
        },
    },
    Token {
        kind: Identifier,
        location: SourceSpan {
            offset: SourceOffset(
                25,
            ),
            length: 1,
        },
    },
    Token {
        kind: Equals,
        location: SourceSpan {
            offset: SourceOffset(
                27,
            ),
            length: 1,
        },
    },
    Token {
        kind: Constant,
        location: SourceSpan {
            offset: SourceOffset(
                29,
            ),
            length: 2,
        },
    },
    Token {
        kind: Semicolon,
        location: SourceSpan {
            offset: SourceOffset(
                31,
            ),
            length: 1,
        },
    },
    Token {
        kind: Int,
        location: SourceSpan {
            offset: SourceOffset(
                37,
            ),
            length: 3,
        },
    },
    Token {
        kind: Identifier,
        location: SourceSpan {
            offset: SourceOffset(
                41,
            ),
            length: 1,
        },
    },
    Token {
        kind: Equals,
        location: SourceSpan {
            offset: SourceOffset(
                43,
            ),
            length: 1,
        },
    },
    Token {
        kind: Constant,
        location: SourceSpan {
            offset: SourceOffset(
                45,
            ),
            length: 2,
        },
    },
    Token {
        kind: Semicolon,
        location: SourceSpan {
            offset: SourceOffset(
                47,
            ),
            length: 1,
        },
    },
    Token {
        kind: For,
        location: SourceSpan {
            offset: SourceOffset(
                53,
            ),
            length: 3,
        },
    },
    Token {
        kind: LParen,
        location: SourceSpan {
            offset: SourceOffset(
                57,
            ),
            length: 1,
        },
    },
    Token {
        kind: Identifier,
        location: SourceSpan {
            offset: SourceOffset(
                58,
            ),
            length: 1,
        },
    },
    Token {
        kind: Equals,
        location: SourceSpan {
            offset: SourceOffset(
                60,
            ),
            length: 1,
        },
    },
    Token {
        kind: Hypen,
        location: SourceSpan {
            offset: SourceOffset(
                62,
            ),
            length: 1,
        },
    },
    Token {
        kind: Constant,
        location: SourceSpan {
            offset: SourceOffset(
                63,
            ),
            length: 2,
        },
    },
    Token {
        kind: Semicolon,
        location: SourceSpan {
            offset: SourceOffset(
                65,
            ),
            length: 1,
        },
    },
    Token {
        kind: Identifier,
        location: SourceSpan {
            offset: SourceOffset(
                67,
            ),
            length: 1,
        },
    },
    Token {
        kind: Less,
        location: SourceSpan {
            offset: SourceOffset(
                69,
            ),
            length: 1,
        },
    },
    Token {
        kind: Constant,
        location: SourceSpan {
            offset: SourceOffset(
                71,
            ),
            length: 1,
        },
    },
    Token {
        kind: Semicolon,
        location: SourceSpan {
            offset: SourceOffset(
                72,
            ),
            length: 1,
        },
    },
    Token {
        kind: Identifier,
        location: SourceSpan {
            offset: SourceOffset(
                74,
            ),
            length: 1,
        },
    },
    Token {
        kind: Equals,
        location: SourceSpan {
            offset: SourceOffset(
                76,
            ),
            length: 1,
        },
    },
    Token {
        kind: Identifier,
        location: SourceSpan {
            offset: SourceOffset(
                78,
            ),
            length: 1,
        },
    },
    Token {
        kind: Plus,
        location: SourceSpan {
            offset: SourceOffset(
                80,
            ),
            length: 1,
        },
    },
    Token {
        kind: Constant,
        location: SourceSpan {
            offset: SourceOffset(
                82,
            ),
            length: 1,
        },
    },
    Token {
        kind: RParen,
        location: SourceSpan {
            offset: SourceOffset(
                83,
            ),
            length: 1,
        },
    },
    Token {
        kind: LBrace,
        location: SourceSpan {
            offset: SourceOffset(
                85,
            ),
            length: 1,
        },
    },
    Token {
        kind: Identifier,
        location: SourceSpan {
            offset: SourceOffset(
                95,
            ),
            length: 1,
        },
    },
    Token {
        kind: Equals,
        location: SourceSpan {
            offset: SourceOffset(
                97,
            ),
            length: 1,
        },
    },
    Token {
        kind: Identifier,
        location: SourceSpan {
            offset: SourceOffset(
                99,
            ),
            length: 1,
        },
    },
    Token {
        kind: Hypen,
        location: SourceSpan {
            offset: SourceOffset(
                101,
            ),
            length: 1,
        },
    },
    Token {
        kind: Constant,
        location: SourceSpan {
            offset: SourceOffset(
                103,
            ),
            length: 1,
        },
    },
    Token {
        kind: Semicolon,
        location: SourceSpan {
            offset: SourceOffset(
                104,
            ),
            length: 1,
        },
    },
    Token {
        kind: If,
        location: SourceSpan {
            offset: SourceOffset(
                114,
            ),
            length: 2,
        },
    },
    Token {
        kind: LParen,
        location: SourceSpan {
            offset: SourceOffset(
                117,
            ),
            length: 1,
        },
    },
    Token {
        kind: Identifier,
        location: SourceSpan {
            offset: SourceOffset(
                118,
            ),
            length: 1,
        },
    },
    Token {
        kind: LessEqual,
        location: SourceSpan {
            offset: SourceOffset(
                120,
            ),
            length: 2,
        },
    },
    Token {
        kind: Constant,
        location: SourceSpan {
            offset: SourceOffset(
                123,
            ),
            length: 1,
        },
    },
    Token {
        kind: RParen,
        location: SourceSpan {
            offset: SourceOffset(
                124,
            ),
            length: 1,
        },
    },
    Token {
        kind: Break,
        location: SourceSpan {
            offset: SourceOffset(
                138,
            ),
            length: 5,
        },
    },
    Token {
        kind: Semicolon,
        location: SourceSpan {
            offset: SourceOffset(
                143,
            ),
            length: 1,
        },
    },
    Token {
        kind: RBrace,
        location: SourceSpan {
            offset: SourceOffset(
                149,
            ),
            length: 1,
        },
    },
    Token {
        kind: Return,
        location: SourceSpan {
            offset: SourceOffset(
                155,
            ),
            length: 6,
        },
    },
    Token {
        kind: Identifier,
        location: SourceSpan {
            offset: SourceOffset(
                162,
            ),
            length: 1,
        },
    },
    Token {
        kind: DoubleEquals,
        location: SourceSpan {
            offset: SourceOffset(
                164,
            ),
            length: 2,
        },
    },
    Token {
        kind: Constant,
        location: SourceSpan {
            offset: SourceOffset(
                167,
            ),
            length: 1,
        },
    },
    Token {
        kind: DoubleAnd,
        location: SourceSpan {
            offset: SourceOffset(
                169,
            ),
            length: 2,
        },
    },
    Token {
        kind: Identifier,
        location: SourceSpan {
            offset: SourceOffset(
                172,
            ),
            length: 1,
        },
    },
    Token {
        kind: DoubleEquals,
        location: SourceSpan {
            offset: SourceOffset(
                174,
            ),
            length: 2,
        },
    },
    Token {
        kind: Hypen,
        location: SourceSpan {
            offset: SourceOffset(
                177,
            ),
            length: 1,
        },
    },
    Token {
        kind: Constant,
        location: SourceSpan {
            offset: SourceOffset(
                178,
            ),
            length: 2,
        },
    },
    Token {
        kind: Semicolon,
        location: SourceSpan {
            offset: SourceOffset(
                180,
            ),
            length: 1,
        },
    },
    Token {
        kind: RBrace,
        location: SourceSpan {
            offset: SourceOffset(
                182,
            ),
            length: 1,
        },
    },
]