Program {
    declarations: [
        FunctionDeclaration {
            identifier: "main",
            params: [],
            ret: Int,
            body: [
                VariableDeclaration {
                    name: "a",
                    ty: Int,
                    init: Constant(
                        0,
                    ),
                },
                For {
                    init: None,
                    condition: None,
                    post: None,
                    body: Compound(
                        [
                            Expression(
                                Assignment(
                                    Var(
                                        "a",
                                    ),
                                    Binary(
                                        Add,
                                        Var(
                                            "a",
                                        ),
                                        Constant(
                                            1,
                                        ),
                                    ),
                                ),
                            ),
                            If(
                                Binary(
                                    GreaterThan,
                                    Var(
                                        "a",
                                    ),
                                    Constant(
                                        3,
                                    ),
                                ),
                                Break(
                                    None,
                                ),
                                None,
                            ),
                        ],
                    ),
                    label: None,
                },
                Return(
                    Var(
                        "a",
                    ),
                ),
            ],
        },
    ],
}