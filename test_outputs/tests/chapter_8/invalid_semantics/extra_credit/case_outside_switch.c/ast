Program {
    declarations: [
        FunctionDeclaration {
            identifier: "main",
            params: [],
            ret: Int,
            body: [
                For {
                    init: VariableDeclaration {
                        name: "i",
                        ty: Int,
                        init: Constant(
                            0,
                        ),
                    },
                    condition: Some(
                        Binary(
                            LessThan,
                            Var(
                                "i",
                            ),
                            Constant(
                                10,
                            ),
                        ),
                    ),
                    post: Some(
                        Assignment(
                            Var(
                                "i",
                            ),
                            Binary(
                                Add,
                                Var(
                                    "i",
                                ),
                                Constant(
                                    1,
                                ),
                            ),
                        ),
                    ),
                    body: Compound(
                        [
                            Case(
                                Constant(
                                    0,
                                ),
                                Return(
                                    Constant(
                                        1,
                                    ),
                                ),
                                None,
                            ),
                        ],
                    ),
                    label: None,
                },
                Return(
                    Constant(
                        9,
                    ),
                ),
            ],
        },
    ],
}