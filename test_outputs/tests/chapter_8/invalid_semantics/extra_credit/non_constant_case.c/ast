Program {
    declarations: [
        FunctionDeclaration {
            identifier: "main",
            params: [],
            ret: Int,
            body: [
                VariableDeclaration {
                    name: "a",
                    ty: Int,
                    init: Constant {
                        constant: 3,
                    },
                },
                Switch(
                    Binary {
                        op: Add,
                        lhs: Var {
                            name: "a",
                        },
                        rhs: Constant {
                            constant: 1,
                        },
                    },
                    Compound(
                        [
                            Case(
                                Constant {
                                    constant: 0,
                                },
                                Return(
                                    Constant {
                                        constant: 0,
                                    },
                                ),
                                None,
                            ),
                            Case(
                                Var {
                                    name: "a",
                                },
                                Return(
                                    Constant {
                                        constant: 1,
                                    },
                                ),
                                None,
                            ),
                            Case(
                                Constant {
                                    constant: 1,
                                },
                                Return(
                                    Constant {
                                        constant: 2,
                                    },
                                ),
                                None,
                            ),
                        ],
                    ),
                    None,
                ),
            ],
        },
    ],
}