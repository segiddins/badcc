Program {
    static_variables: [],
    functions: [
        Function {
            identifier: "main",
            global: true,
            params: [],
            instructions: [
                Unary {
                    op: Negate,
                    src: 1u,
                    dst: Var("main.tmp.0", UInt),
                },
                Copy {
                    src: Var("main.tmp.0", UInt),
                    dst: Var("x.1", UInt),
                },
                ZeroExtend {
                    src: Var("x.1", UInt),
                    dst: Var("main.tmp.1", Long),
                },
                Unary {
                    op: Negate,
                    src: 10l,
                    dst: Var("main.tmp.2", Long),
                },
                Binary {
                    op: Divide,
                    lhs: Var("main.tmp.1", Long),
                    rhs: Var("main.tmp.2", Long),
                    dst: Var("main.tmp.3", Long),
                },
                Truncate {
                    src: Var("main.tmp.3", Long),
                    dst: Var("main.tmp.4", UInt),
                },
                Copy {
                    src: Var("main.tmp.4", UInt),
                    dst: Var("x.1", UInt),
                },
                Binary {
                    op: Equals,
                    lhs: Var("x.1", UInt),
                    rhs: 3865470567u,
                    dst: Var("main.tmp.5", UInt),
                },
                Copy {
                    src: Var("main.tmp.5", UInt),
                    dst: Var("main.tmp.6", Int),
                },
                Return(
                    Var("main.tmp.6", Int),
                ),
                Return(
                    0,
                ),
            ],
        },
    ],
}