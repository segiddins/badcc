Program {
    static_variables: [],
    functions: [
        Function {
            identifier: "main",
            global: true,
            params: [],
            instructions: [
                Copy {
                    src: 18446460386757245432ul,
                    dst: Var("ul.1", ULong),
                },
                Unary {
                    op: Negate,
                    src: 1000,
                    dst: Var("main.tmp.0", Int),
                },
                SignExtend {
                    src: Var("main.tmp.0", Int),
                    dst: Var("main.tmp.1", ULong),
                },
                Binary {
                    op: BitwiseAnd,
                    lhs: Var("ul.1", ULong),
                    rhs: Var("main.tmp.1", ULong),
                    dst: Var("main.tmp.2", ULong),
                },
                Copy {
                    src: Var("main.tmp.2", ULong),
                    dst: Var("ul.1", ULong),
                },
                Binary {
                    op: NotEqual,
                    lhs: Var("ul.1", ULong),
                    rhs: 18446460386757244952ul,
                    dst: Var("main.tmp.3", ULong),
                },
                JumpIfZero(
                    Var("main.tmp.3", ULong),
                    "main.0.true",
                ),
                Return(
                    1,
                ),
                Jump(
                    "main.0.end",
                ),
                Label(
                    "main.0.true",
                ),
                Label(
                    "main.0.end",
                ),
                Binary {
                    op: BitwiseOr,
                    lhs: Var("ul.1", ULong),
                    rhs: 4294967040ul,
                    dst: Var("main.tmp.4", ULong),
                },
                Copy {
                    src: Var("main.tmp.4", ULong),
                    dst: Var("ul.1", ULong),
                },
                Binary {
                    op: NotEqual,
                    lhs: Var("ul.1", ULong),
                    rhs: 18446460386824683288ul,
                    dst: Var("main.tmp.5", ULong),
                },
                JumpIfZero(
                    Var("main.tmp.5", ULong),
                    "main.1.true",
                ),
                Return(
                    2,
                ),
                Jump(
                    "main.1.end",
                ),
                Label(
                    "main.1.true",
                ),
                Label(
                    "main.1.end",
                ),
                Copy {
                    src: 123456,
                    dst: Var("i.2", Int),
                },
                Copy {
                    src: 4042322160u,
                    dst: Var("ui.3", UInt),
                },
                Unary {
                    op: Negate,
                    src: 252645136,
                    dst: Var("main.tmp.6", Int),
                },
                SignExtend {
                    src: Var("main.tmp.6", Int),
                    dst: Var("main.tmp.7", Long),
                },
                Copy {
                    src: Var("main.tmp.7", Long),
                    dst: Var("l.4", Long),
                },
                ZeroExtend {
                    src: Var("ui.3", UInt),
                    dst: Var("main.tmp.8", Long),
                },
                Binary {
                    op: Xor,
                    lhs: Var("main.tmp.8", Long),
                    rhs: Var("l.4", Long),
                    dst: Var("main.tmp.9", Long),
                },
                Truncate {
                    src: Var("main.tmp.9", Long),
                    dst: Var("main.tmp.10", UInt),
                },
                Copy {
                    src: Var("main.tmp.10", UInt),
                    dst: Var("ui.3", UInt),
                },
                JumpIfZero(
                    Var("ui.3", UInt),
                    "main.2.true",
                ),
                Return(
                    3,
                ),
                Jump(
                    "main.2.end",
                ),
                Label(
                    "main.2.true",
                ),
                Label(
                    "main.2.end",
                ),
                JumpIfZero(
                    Var("ui.3", UInt),
                    "main.3.true",
                ),
                Return(
                    4,
                ),
                Jump(
                    "main.3.end",
                ),
                Label(
                    "main.3.true",
                ),
                Label(
                    "main.3.end",
                ),
                Binary {
                    op: NotEqual,
                    lhs: Var("i.2", Int),
                    rhs: 123456,
                    dst: Var("main.tmp.11", Int),
                },
                JumpIfZero(
                    Var("main.tmp.11", Int),
                    "main.4.true",
                ),
                Return(
                    5,
                ),
                Jump(
                    "main.4.end",
                ),
                Label(
                    "main.4.true",
                ),
                Label(
                    "main.4.end",
                ),
                Unary {
                    op: Negate,
                    src: 252645136,
                    dst: Var("main.tmp.12", Int),
                },
                SignExtend {
                    src: Var("main.tmp.12", Int),
                    dst: Var("main.tmp.13", Long),
                },
                Binary {
                    op: NotEqual,
                    lhs: Var("l.4", Long),
                    rhs: Var("main.tmp.13", Long),
                    dst: Var("main.tmp.14", Long),
                },
                JumpIfZero(
                    Var("main.tmp.14", Long),
                    "main.5.true",
                ),
                Return(
                    6,
                ),
                Jump(
                    "main.5.end",
                ),
                Label(
                    "main.5.true",
                ),
                Label(
                    "main.5.end",
                ),
                Return(
                    0,
                ),
                Return(
                    0,
                ),
            ],
        },
    ],
}