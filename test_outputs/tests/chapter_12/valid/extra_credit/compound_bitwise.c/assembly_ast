Program {
    definitions: [
        Function {
            name: "main",
            global: true,
            instructions: [
                AllocateStack(
                    144,
                ),
                Move {
                    source: Immediate(-283686952306184, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    source: Register(R10, Eight),
                    destination: Stack(16, Eight),
                },
                Move {
                    source: Immediate(1000, Four),
                    destination: Stack(20, Four),
                },
                Unary(
                    Neg,
                    Stack(20, Four),
                ),
                Move {
                    source: Stack(20, Four),
                    destination: Register(R11, Four),
                },
                Movesx {
                    source: Register(R11, Four),
                    destination: Register(R10, Eight),
                },
                Move {
                    source: Register(R10, Eight),
                    destination: Stack(28, Eight),
                },
                Move {
                    source: Stack(16, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    source: Register(R10, Eight),
                    destination: Stack(36, Eight),
                },
                Move {
                    source: Stack(28, Eight),
                    destination: Register(R10, Eight),
                },
                Binary(
                    And,
                    Register(R10, Eight),
                    Stack(36, Eight),
                ),
                Move {
                    source: Stack(36, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    source: Register(R10, Eight),
                    destination: Stack(16, Eight),
                },
                Move {
                    source: Immediate(-283686952306664, Eight),
                    destination: Register(R10, Eight),
                },
                Cmp(
                    Register(R10, Eight),
                    Stack(16, Eight),
                ),
                Move {
                    source: Immediate(0, Eight),
                    destination: Stack(44, Eight),
                },
                SetCC(
                    NE,
                    Stack(44, Eight),
                ),
                Cmp(
                    Immediate(0, Four),
                    Stack(44, Eight),
                ),
                JmpCC(
                    E,
                    "main.0.true",
                ),
                Move {
                    source: Immediate(1, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "main.0.end",
                ),
                Label(
                    "main.0.true",
                ),
                Label(
                    "main.0.end",
                ),
                Move {
                    source: Stack(16, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    source: Register(R10, Eight),
                    destination: Stack(52, Eight),
                },
                Move {
                    source: Immediate(4294967040, Eight),
                    destination: Register(R10, Eight),
                },
                Binary(
                    Or,
                    Register(R10, Eight),
                    Stack(52, Eight),
                ),
                Move {
                    source: Stack(52, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    source: Register(R10, Eight),
                    destination: Stack(16, Eight),
                },
                Move {
                    source: Immediate(-283686884868328, Eight),
                    destination: Register(R10, Eight),
                },
                Cmp(
                    Register(R10, Eight),
                    Stack(16, Eight),
                ),
                Move {
                    source: Immediate(0, Eight),
                    destination: Stack(60, Eight),
                },
                SetCC(
                    NE,
                    Stack(60, Eight),
                ),
                Cmp(
                    Immediate(0, Four),
                    Stack(60, Eight),
                ),
                JmpCC(
                    E,
                    "main.1.true",
                ),
                Move {
                    source: Immediate(2, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "main.1.end",
                ),
                Label(
                    "main.1.true",
                ),
                Label(
                    "main.1.end",
                ),
                Move {
                    source: Immediate(123456, Four),
                    destination: Stack(64, Four),
                },
                Move {
                    source: Immediate(4042322160, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    source: Register(R10, Four),
                    destination: Stack(68, Four),
                },
                Move {
                    source: Immediate(252645136, Four),
                    destination: Stack(72, Four),
                },
                Unary(
                    Neg,
                    Stack(72, Four),
                ),
                Move {
                    source: Stack(72, Four),
                    destination: Register(R11, Four),
                },
                Movesx {
                    source: Register(R11, Four),
                    destination: Register(R10, Eight),
                },
                Move {
                    source: Register(R10, Eight),
                    destination: Stack(80, Eight),
                },
                Move {
                    source: Stack(80, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    source: Register(R10, Eight),
                    destination: Stack(88, Eight),
                },
                Move {
                    source: Stack(68, Four),
                    destination: Register(R11, Four),
                },
                Move {
                    source: Register(R11, Eight),
                    destination: Stack(96, Eight),
                },
                Move {
                    source: Stack(96, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    source: Register(R10, Eight),
                    destination: Stack(104, Eight),
                },
                Move {
                    source: Stack(88, Eight),
                    destination: Register(R10, Eight),
                },
                Binary(
                    Xor,
                    Register(R10, Eight),
                    Stack(104, Eight),
                ),
                Move {
                    source: Stack(104, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    source: Register(R10, Four),
                    destination: Stack(108, Four),
                },
                Move {
                    source: Stack(108, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    source: Register(R10, Four),
                    destination: Stack(68, Four),
                },
                Cmp(
                    Immediate(0, Four),
                    Stack(68, Four),
                ),
                JmpCC(
                    E,
                    "main.2.true",
                ),
                Move {
                    source: Immediate(3, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "main.2.end",
                ),
                Label(
                    "main.2.true",
                ),
                Label(
                    "main.2.end",
                ),
                Cmp(
                    Immediate(0, Four),
                    Stack(68, Four),
                ),
                JmpCC(
                    E,
                    "main.3.true",
                ),
                Move {
                    source: Immediate(4, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "main.3.end",
                ),
                Label(
                    "main.3.true",
                ),
                Label(
                    "main.3.end",
                ),
                Cmp(
                    Immediate(123456, Four),
                    Stack(64, Four),
                ),
                Move {
                    source: Immediate(0, Four),
                    destination: Stack(112, Four),
                },
                SetCC(
                    NE,
                    Stack(112, Four),
                ),
                Cmp(
                    Immediate(0, Four),
                    Stack(112, Four),
                ),
                JmpCC(
                    E,
                    "main.4.true",
                ),
                Move {
                    source: Immediate(5, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "main.4.end",
                ),
                Label(
                    "main.4.true",
                ),
                Label(
                    "main.4.end",
                ),
                Move {
                    source: Immediate(252645136, Four),
                    destination: Stack(116, Four),
                },
                Unary(
                    Neg,
                    Stack(116, Four),
                ),
                Move {
                    source: Stack(116, Four),
                    destination: Register(R11, Four),
                },
                Movesx {
                    source: Register(R11, Four),
                    destination: Register(R10, Eight),
                },
                Move {
                    source: Register(R10, Eight),
                    destination: Stack(124, Eight),
                },
                Move {
                    source: Stack(124, Eight),
                    destination: Register(R10, Eight),
                },
                Cmp(
                    Register(R10, Eight),
                    Stack(88, Eight),
                ),
                Move {
                    source: Immediate(0, Eight),
                    destination: Stack(132, Eight),
                },
                SetCC(
                    NE,
                    Stack(132, Eight),
                ),
                Cmp(
                    Immediate(0, Four),
                    Stack(132, Eight),
                ),
                JmpCC(
                    E,
                    "main.5.true",
                ),
                Move {
                    source: Immediate(6, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "main.5.end",
                ),
                Label(
                    "main.5.true",
                ),
                Label(
                    "main.5.end",
                ),
                Move {
                    source: Immediate(0, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Move {
                    source: Immediate(0, Four),
                    destination: Register(AX, Four),
                },
                Ret,
            ],
        },
    ],
    static_variables: [],
}