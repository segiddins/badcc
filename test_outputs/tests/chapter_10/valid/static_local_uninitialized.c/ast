Program {
    declarations: [
        FunctionDeclaration {
            identifier: "foo",
            params: [],
            ret: Int,
            body: [
                VariableDeclaration {
                    name: "x",
                    ty: Int,
                    storage: Static,
                },
                Expression(
                    Assignment {
                        lhs: Var("x"),
                        rhs: Binary {
                            op: Add,
                            lhs: Var("x"),
                            rhs: Constant(1),
                        },
                    },
                ),
                Return(
                    Var("x"),
                ),
            ],
        },
        FunctionDeclaration {
            identifier: "main",
            params: [],
            ret: Int,
            body: [
                VariableDeclaration {
                    name: "ret",
                    ty: Int,
                },
                For {
                    init: VariableDeclaration {
                        name: "i",
                        ty: Int,
                        init: Constant(0),
                    },
                    condition: Binary {
                        op: LessThan,
                        lhs: Var("i"),
                        rhs: Constant(4),
                    },
                    post: Assignment {
                        lhs: Var("i"),
                        rhs: Binary {
                            op: Add,
                            lhs: Var("i"),
                            rhs: Constant(1),
                        },
                    },
                    body: Expression(
                        Assignment {
                            lhs: Var("ret"),
                            rhs: FunctionCall {
                                function: Var("foo"),
                            },
                        },
                    ),
                },
                Return(
                    Var("ret"),
                ),
            ],
        },
    ],
}