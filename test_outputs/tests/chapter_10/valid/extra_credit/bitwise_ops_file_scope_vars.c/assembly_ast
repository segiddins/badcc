Program {
    definitions: [
        Function {
            name: "main",
            global: true,
            instructions: [
                AllocateStack(
                    48,
                ),
                Move {
                    source: Immediate(1, Four),
                    destination: Stack(12, Four),
                },
                Unary(
                    Neg,
                    Stack(12, Four),
                ),
                Move {
                    source: Stack(12, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    source: Register(R10, Four),
                    destination: Data("y", Four),
                },
                Move {
                    source: Data("x", Four),
                    destination: Register(R10, Four),
                },
                Move {
                    source: Register(R10, Four),
                    destination: Stack(16, Four),
                },
                Move {
                    source: Stack(16, Four),
                    destination: Register(R11, Four),
                },
                Binary(
                    SignedLeftShift,
                    Immediate(1, Four),
                    Register(R11, Four),
                ),
                Move {
                    source: Register(R11, Four),
                    destination: Stack(16, Four),
                },
                Move {
                    source: Stack(16, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    source: Register(R10, Four),
                    destination: Stack(20, Four),
                },
                Binary(
                    Or,
                    Immediate(1, Four),
                    Stack(20, Four),
                ),
                Move {
                    source: Stack(20, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    source: Register(R10, Four),
                    destination: Data("x", Four),
                },
                Cmp(
                    Immediate(3, Four),
                    Data("x", Four),
                ),
                Move {
                    source: Immediate(0, Four),
                    destination: Stack(24, Four),
                },
                SetCC(
                    NE,
                    Stack(24, Four),
                ),
                Cmp(
                    Immediate(0, Four),
                    Stack(24, Four),
                ),
                JmpCC(
                    E,
                    "main.0.true",
                ),
                Move {
                    source: Immediate(1, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "main.0.end",
                ),
                Label(
                    "main.0.true",
                ),
                Label(
                    "main.0.end",
                ),
                Move {
                    source: Immediate(5, Four),
                    destination: Stack(28, Four),
                },
                Unary(
                    Neg,
                    Stack(28, Four),
                ),
                Move {
                    source: Data("y", Four),
                    destination: Register(R10, Four),
                },
                Move {
                    source: Register(R10, Four),
                    destination: Stack(32, Four),
                },
                Move {
                    source: Stack(28, Four),
                    destination: Register(R10, Four),
                },
                Binary(
                    And,
                    Register(R10, Four),
                    Stack(32, Four),
                ),
                Move {
                    source: Stack(32, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    source: Register(R10, Four),
                    destination: Stack(36, Four),
                },
                Binary(
                    Xor,
                    Immediate(12, Four),
                    Stack(36, Four),
                ),
                Move {
                    source: Stack(36, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    source: Register(R10, Four),
                    destination: Stack(40, Four),
                },
                Move {
                    source: Stack(40, Four),
                    destination: Register(R11, Four),
                },
                Binary(
                    SignedRightShift,
                    Immediate(2, Four),
                    Register(R11, Four),
                ),
                Move {
                    source: Register(R11, Four),
                    destination: Stack(40, Four),
                },
                Move {
                    source: Stack(40, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    source: Register(R10, Four),
                    destination: Data("y", Four),
                },
                Move {
                    source: Immediate(3, Four),
                    destination: Stack(44, Four),
                },
                Unary(
                    Neg,
                    Stack(44, Four),
                ),
                Move {
                    source: Stack(44, Four),
                    destination: Register(R10, Four),
                },
                Cmp(
                    Register(R10, Four),
                    Data("y", Four),
                ),
                Move {
                    source: Immediate(0, Four),
                    destination: Stack(48, Four),
                },
                SetCC(
                    NE,
                    Stack(48, Four),
                ),
                Cmp(
                    Immediate(0, Four),
                    Stack(48, Four),
                ),
                JmpCC(
                    E,
                    "main.1.true",
                ),
                Move {
                    source: Immediate(2, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "main.1.end",
                ),
                Label(
                    "main.1.true",
                ),
                Label(
                    "main.1.end",
                ),
                Move {
                    source: Immediate(0, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Move {
                    source: Immediate(0, Four),
                    destination: Register(AX, Four),
                },
                Ret,
            ],
        },
    ],
    static_variables: [
        StaticVariable {
            global: true,
            name: "x",
            value: 1,
            alignment: 4,
        },
        StaticVariable {
            global: true,
            name: "y",
            value: 0,
            alignment: 4,
        },
    ],
}