Program {
    declarations: [
        FunctionDeclaration {
            identifier: "f",
            params: [],
            ret: Int,
            body: [
                Goto("x"),
                Return(
                    Constant(0),
                ),
                Labeled(
                    "x",
                    Return(
                        Constant(1),
                    ),
                ),
            ],
        },
        FunctionDeclaration {
            identifier: "f_caller",
            params: [],
            ret: Int,
        },
        FunctionDeclaration {
            identifier: "main",
            params: [],
            ret: Int,
            body: [
                If(
                    Binary {
                        op: NotEqual,
                        lhs: FunctionCall {
                            function: Var("f"),
                        },
                        rhs: Constant(1),
                    },
                    Compound(
                        [
                            Return(
                                Constant(1),
                            ),
                        ],
                    ),
                    None,
                ),
                If(
                    Binary {
                        op: NotEqual,
                        lhs: FunctionCall {
                            function: Var("f_caller"),
                        },
                        rhs: Constant(2),
                    },
                    Compound(
                        [
                            Return(
                                Constant(2),
                            ),
                        ],
                    ),
                    None,
                ),
                Return(
                    Constant(0),
                ),
            ],
        },
    ],
}