Program {
    declarations: [
        FunctionDeclaration {
            identifier: "f",
            params: [],
            ret: Int,
            body: [
                VariableDeclaration {
                    name: "i.1",
                    ty: Int,
                    init: Constant {
                        constant: 0,
                    },
                    storage: Static,
                },
                VariableDeclaration {
                    name: "j.2",
                    ty: Int,
                    init: Constant {
                        constant: 0,
                    },
                    storage: Static,
                },
                VariableDeclaration {
                    name: "k.3",
                    ty: Int,
                    init: Constant {
                        constant: 1,
                    },
                    storage: Static,
                },
                VariableDeclaration {
                    name: "l.4",
                    ty: Int,
                    init: Constant {
                        constant: 48,
                    },
                    storage: Static,
                },
                Expression(
                    Assignment {
                        lhs: Var {
                            name: "i.1",
                        },
                        rhs: Binary {
                            op: Add,
                            lhs: Var {
                                name: "i.1",
                            },
                            rhs: Constant {
                                constant: 1,
                            },
                        },
                    },
                ),
                Expression(
                    Assignment {
                        lhs: Var {
                            name: "j.2",
                        },
                        rhs: Binary {
                            op: Subtract,
                            lhs: Var {
                                name: "j.2",
                            },
                            rhs: Var {
                                name: "i.1",
                            },
                        },
                    },
                ),
                Expression(
                    Assignment {
                        lhs: Var {
                            name: "k.3",
                        },
                        rhs: Binary {
                            op: Multiply,
                            lhs: Var {
                                name: "k.3",
                            },
                            rhs: Var {
                                name: "j.2",
                            },
                        },
                    },
                ),
                Expression(
                    Assignment {
                        lhs: Var {
                            name: "l.4",
                        },
                        rhs: Binary {
                            op: Divide,
                            lhs: Var {
                                name: "l.4",
                            },
                            rhs: Constant {
                                constant: 2,
                            },
                        },
                    },
                ),
                If(
                    Binary {
                        op: NotEqual,
                        lhs: Var {
                            name: "i.1",
                        },
                        rhs: Constant {
                            constant: 3,
                        },
                    },
                    Compound(
                        [
                            Return(
                                Constant {
                                    constant: 1,
                                },
                            ),
                        ],
                    ),
                    None,
                ),
                If(
                    Binary {
                        op: NotEqual,
                        lhs: Var {
                            name: "j.2",
                        },
                        rhs: Unary {
                            op: Minus,
                            expr: Constant {
                                constant: 6,
                            },
                        },
                    },
                    Compound(
                        [
                            Return(
                                Constant {
                                    constant: 2,
                                },
                            ),
                        ],
                    ),
                    None,
                ),
                If(
                    Binary {
                        op: NotEqual,
                        lhs: Var {
                            name: "k.3",
                        },
                        rhs: Unary {
                            op: Minus,
                            expr: Constant {
                                constant: 18,
                            },
                        },
                    },
                    Compound(
                        [
                            Return(
                                Constant {
                                    constant: 3,
                                },
                            ),
                        ],
                    ),
                    None,
                ),
                If(
                    Binary {
                        op: NotEqual,
                        lhs: Var {
                            name: "l.4",
                        },
                        rhs: Constant {
                            constant: 6,
                        },
                    },
                    Compound(
                        [
                            Return(
                                Constant {
                                    constant: 4,
                                },
                            ),
                        ],
                    ),
                    None,
                ),
                Return(
                    Constant {
                        constant: 0,
                    },
                ),
            ],
        },
        FunctionDeclaration {
            identifier: "main",
            params: [],
            ret: Int,
            body: [
                Expression(
                    FunctionCall {
                        function: Var {
                            name: "f",
                        },
                        params: [],
                    },
                ),
                Expression(
                    FunctionCall {
                        function: Var {
                            name: "f",
                        },
                        params: [],
                    },
                ),
                Return(
                    FunctionCall {
                        function: Var {
                            name: "f",
                        },
                        params: [],
                    },
                ),
            ],
        },
    ],
}