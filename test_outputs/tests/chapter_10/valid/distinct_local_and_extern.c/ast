Program {
    declarations: [
        VariableDeclaration {
            name: "a",
            ty: Int,
            init: Constant(5),
        },
        FunctionDeclaration {
            identifier: "return_a",
            params: [],
            ret: Int,
            body: [
                Return(
                    Var("a"),
                ),
            ],
        },
        FunctionDeclaration {
            identifier: "main",
            params: [],
            ret: Int,
            body: [
                VariableDeclaration {
                    name: "a",
                    ty: Int,
                    init: Constant(3),
                },
                Compound(
                    [
                        VariableDeclaration {
                            name: "a",
                            ty: Int,
                            storage: Extern,
                        },
                        If(
                            Binary {
                                op: NotEqual,
                                lhs: Var("a"),
                                rhs: Constant(5),
                            },
                            Return(
                                Constant(1),
                            ),
                            None,
                        ),
                        Expression(
                            Assignment {
                                lhs: Var("a"),
                                rhs: Constant(4),
                            },
                        ),
                    ],
                ),
                Return(
                    Binary {
                        op: Add,
                        lhs: Var("a"),
                        rhs: FunctionCall {
                            function: Var("return_a"),
                        },
                    },
                ),
            ],
        },
    ],
}