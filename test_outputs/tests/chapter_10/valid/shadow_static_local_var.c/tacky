Program {
    static_variables: [
        StaticVariable {
            identifier: "i",
            global: true,
            init: 0,
            width: Four,
        },
        StaticVariable {
            identifier: "i.4",
            global: false,
            init: 0,
            width: Four,
        },
    ],
    functions: [
        Function {
            identifier: "update_static_or_global",
            global: true,
            params: [
                Var("update_global.2", Int),
                Var("new_val.3", Int),
            ],
            instructions: [
                JumpIfZero(
                    Var("update_global.2", Int),
                    "update_static_or_global.0.true",
                ),
                Copy {
                    src: Var("new_val.3", Int),
                    dst: Var("i", Int),
                },
                Jump(
                    "update_static_or_global.0.end",
                ),
                Label(
                    "update_static_or_global.0.true",
                ),
                Copy {
                    src: Var("new_val.3", Int),
                    dst: Var("i.4", Int),
                },
                Label(
                    "update_static_or_global.0.end",
                ),
                Return(
                    Var("i.4", Int),
                ),
                Return(
                    0,
                ),
            ],
        },
        Function {
            identifier: "main",
            global: true,
            params: [],
            instructions: [
                Binary {
                    op: NotEqual,
                    lhs: Var("i", Int),
                    rhs: 0,
                    dst: Var("main.tmp.0", Int),
                },
                JumpIfZero(
                    Var("main.tmp.0", Int),
                    "main.0.true",
                ),
                Return(
                    1,
                ),
                Jump(
                    "main.0.end",
                ),
                Label(
                    "main.0.true",
                ),
                Label(
                    "main.0.end",
                ),
                Call(
                    "update_static_or_global",
                    [
                        1,
                        10,
                    ],
                    Var("main.tmp.1", Int),
                ),
                Copy {
                    src: Var("main.tmp.1", Int),
                    dst: Var("result.7", Int),
                },
                Binary {
                    op: NotEqual,
                    lhs: Var("result.7", Int),
                    rhs: 0,
                    dst: Var("main.tmp.2", Int),
                },
                JumpIfZero(
                    Var("main.tmp.2", Int),
                    "main.1.true",
                ),
                Return(
                    1,
                ),
                Jump(
                    "main.1.end",
                ),
                Label(
                    "main.1.true",
                ),
                Label(
                    "main.1.end",
                ),
                Binary {
                    op: NotEqual,
                    lhs: Var("i", Int),
                    rhs: 10,
                    dst: Var("main.tmp.3", Int),
                },
                JumpIfZero(
                    Var("main.tmp.3", Int),
                    "main.2.true",
                ),
                Return(
                    1,
                ),
                Jump(
                    "main.2.end",
                ),
                Label(
                    "main.2.true",
                ),
                Label(
                    "main.2.end",
                ),
                Call(
                    "update_static_or_global",
                    [
                        0,
                        9,
                    ],
                    Var("main.tmp.4", Int),
                ),
                Copy {
                    src: Var("main.tmp.4", Int),
                    dst: Var("result.7", Int),
                },
                Binary {
                    op: NotEqual,
                    lhs: Var("result.7", Int),
                    rhs: 9,
                    dst: Var("main.tmp.5", Int),
                },
                JumpIfZero(
                    Var("main.tmp.5", Int),
                    "main.3.true",
                ),
                Return(
                    1,
                ),
                Jump(
                    "main.3.end",
                ),
                Label(
                    "main.3.true",
                ),
                Label(
                    "main.3.end",
                ),
                Binary {
                    op: NotEqual,
                    lhs: Var("i", Int),
                    rhs: 10,
                    dst: Var("main.tmp.6", Int),
                },
                JumpIfZero(
                    Var("main.tmp.6", Int),
                    "main.4.true",
                ),
                Return(
                    1,
                ),
                Jump(
                    "main.4.end",
                ),
                Label(
                    "main.4.true",
                ),
                Label(
                    "main.4.end",
                ),
                Call(
                    "update_static_or_global",
                    [
                        1,
                        11,
                    ],
                    Var("main.tmp.7", Int),
                ),
                Copy {
                    src: Var("main.tmp.7", Int),
                    dst: Var("result.7", Int),
                },
                Binary {
                    op: NotEqual,
                    lhs: Var("result.7", Int),
                    rhs: 9,
                    dst: Var("main.tmp.8", Int),
                },
                JumpIfZero(
                    Var("main.tmp.8", Int),
                    "main.5.true",
                ),
                Return(
                    1,
                ),
                Jump(
                    "main.5.end",
                ),
                Label(
                    "main.5.true",
                ),
                Label(
                    "main.5.end",
                ),
                Binary {
                    op: NotEqual,
                    lhs: Var("i", Int),
                    rhs: 11,
                    dst: Var("main.tmp.9", Int),
                },
                JumpIfZero(
                    Var("main.tmp.9", Int),
                    "main.6.true",
                ),
                Return(
                    1,
                ),
                Jump(
                    "main.6.end",
                ),
                Label(
                    "main.6.true",
                ),
                Label(
                    "main.6.end",
                ),
                Return(
                    0,
                ),
                Return(
                    0,
                ),
            ],
        },
    ],
}