Program {
    declarations: [
        FunctionDeclaration {
            identifier: "my_fun",
            params: [],
            ret: Int,
            storage: Static,
        },
        FunctionDeclaration {
            identifier: "call_static_my_fun",
            params: [],
            ret: Int,
            body: [
                Return(
                    FunctionCall {
                        function: Var("my_fun"),
                    },
                ),
            ],
        },
        FunctionDeclaration {
            identifier: "call_static_my_fun_2",
            params: [],
            ret: Int,
            body: [
                FunctionDeclaration {
                    identifier: "my_fun",
                    params: [],
                    ret: Int,
                },
                Return(
                    FunctionCall {
                        function: Var("my_fun"),
                    },
                ),
            ],
        },
        FunctionDeclaration {
            identifier: "my_fun",
            params: [],
            ret: Int,
            storage: Extern,
        },
        FunctionDeclaration {
            identifier: "my_fun",
            params: [],
            ret: Int,
            storage: Static,
        },
        FunctionDeclaration {
            identifier: "my_fun",
            params: [],
            ret: Int,
            body: [
                VariableDeclaration {
                    name: "i.7",
                    ty: Int,
                    init: Constant(0),
                    storage: Static,
                },
                Expression(
                    Assignment {
                        lhs: Var("i.7"),
                        rhs: Binary {
                            op: Add,
                            lhs: Var("i.7"),
                            rhs: Constant(1),
                        },
                    },
                ),
                Return(
                    Var("i.7"),
                ),
            ],
        },
    ],
}