Program {
    declarations: [
        VariableDeclaration {
            name: "x",
            ty: Int,
            storage: Static,
        },
        VariableDeclaration {
            name: "x",
            ty: Int,
            storage: Static,
        },
        FunctionDeclaration {
            identifier: "read_x",
            params: [],
            ret: Int,
        },
        FunctionDeclaration {
            identifier: "update_x",
            params: [
                (
                    Int,
                    "x.4",
                    SourceSpan {
                        offset: SourceOffset(
                            63,
                        ),
                        length: 1,
                    },
                ),
            ],
            ret: Int,
        },
        FunctionDeclaration {
            identifier: "main",
            params: [],
            ret: Int,
            body: [
                If(
                    Binary {
                        op: NotEqual,
                        lhs: Var("x"),
                        rhs: Constant(0),
                    },
                    Return(
                        Constant(1),
                    ),
                    None,
                ),
                If(
                    Binary {
                        op: NotEqual,
                        lhs: FunctionCall {
                            function: Var("read_x"),
                        },
                        rhs: Constant(5),
                    },
                    Return(
                        Constant(1),
                    ),
                    None,
                ),
                VariableDeclaration {
                    name: "x",
                    ty: Int,
                    storage: Extern,
                },
                Expression(
                    FunctionCall {
                        function: Var("update_x"),
                        params: [
                            Constant(10),
                        ],
                    },
                ),
                If(
                    Binary {
                        op: NotEqual,
                        lhs: FunctionCall {
                            function: Var("read_x"),
                        },
                        rhs: Constant(10),
                    },
                    Return(
                        Constant(1),
                    ),
                    None,
                ),
                If(
                    Binary {
                        op: NotEqual,
                        lhs: Var("x"),
                        rhs: Constant(0),
                    },
                    Return(
                        Constant(1),
                    ),
                    None,
                ),
                Expression(
                    Assignment {
                        lhs: Var("x"),
                        rhs: Constant(20),
                    },
                ),
                If(
                    Binary {
                        op: NotEqual,
                        lhs: Var("x"),
                        rhs: Constant(20),
                    },
                    Return(
                        Constant(1),
                    ),
                    None,
                ),
                If(
                    Binary {
                        op: NotEqual,
                        lhs: FunctionCall {
                            function: Var("read_x"),
                        },
                        rhs: Constant(10),
                    },
                    Return(
                        Constant(1),
                    ),
                    None,
                ),
                Return(
                    Constant(0),
                ),
            ],
        },
        VariableDeclaration {
            name: "x",
            ty: Int,
            storage: Static,
        },
    ],
}