Program {
    declarations: [
        FunctionDeclaration {
            identifier: "main",
            params: [],
            ret: Int,
            body: [
                VariableDeclaration {
                    name: "l",
                    ty: Long,
                    init: Constant(
                        137438953472l,
                    ),
                },
                VariableDeclaration {
                    name: "shiftcount",
                    ty: Int,
                    init: Constant(
                        2,
                    ),
                },
                If(
                    Binary(
                        NotEqual,
                        Binary(
                            RightShift,
                            Var(
                                "l",
                            ),
                            Var(
                                "shiftcount",
                            ),
                        ),
                        Constant(
                            34359738368l,
                        ),
                    ),
                    Compound(
                        [
                            Return(
                                Constant(
                                    1,
                                ),
                            ),
                        ],
                    ),
                    None,
                ),
                If(
                    Binary(
                        NotEqual,
                        Binary(
                            LeftShift,
                            Var(
                                "l",
                            ),
                            Var(
                                "shiftcount",
                            ),
                        ),
                        Constant(
                            549755813888l,
                        ),
                    ),
                    Compound(
                        [
                            Return(
                                Constant(
                                    2,
                                ),
                            ),
                        ],
                    ),
                    None,
                ),
                If(
                    Binary(
                        NotEqual,
                        Binary(
                            LeftShift,
                            Var(
                                "l",
                            ),
                            Constant(
                                2,
                            ),
                        ),
                        Constant(
                            549755813888l,
                        ),
                    ),
                    Compound(
                        [
                            Return(
                                Constant(
                                    3,
                                ),
                            ),
                        ],
                    ),
                    None,
                ),
                If(
                    Binary(
                        NotEqual,
                        Binary(
                            LeftShift,
                            Constant(
                                40l,
                            ),
                            Constant(
                                40,
                            ),
                        ),
                        Constant(
                            43980465111040l,
                        ),
                    ),
                    Compound(
                        [
                            Return(
                                Constant(
                                    4,
                                ),
                            ),
                        ],
                    ),
                    None,
                ),
                VariableDeclaration {
                    name: "long_shiftcount",
                    ty: Long,
                    init: Constant(
                        3l,
                    ),
                },
                VariableDeclaration {
                    name: "i_neighbor1",
                    ty: Int,
                    init: Constant(
                        0,
                    ),
                },
                VariableDeclaration {
                    name: "i",
                    ty: Int,
                    init: Unary(
                        Minus,
                        Constant(
                            2147483645,
                        ),
                    ),
                },
                VariableDeclaration {
                    name: "i_neighbor2",
                    ty: Int,
                    init: Constant(
                        0,
                    ),
                },
                If(
                    Binary(
                        NotEqual,
                        Binary(
                            RightShift,
                            Var(
                                "i",
                            ),
                            Var(
                                "long_shiftcount",
                            ),
                        ),
                        Unary(
                            Minus,
                            Constant(
                                268435456,
                            ),
                        ),
                    ),
                    Compound(
                        [
                            Return(
                                Constant(
                                    5,
                                ),
                            ),
                        ],
                    ),
                    None,
                ),
                Expression(
                    Assignment(
                        Var(
                            "i",
                        ),
                        Unary(
                            Minus,
                            Constant(
                                1,
                            ),
                        ),
                    ),
                ),
                If(
                    Binary(
                        NotEqual,
                        Binary(
                            RightShift,
                            Var(
                                "i",
                            ),
                            Constant(
                                10l,
                            ),
                        ),
                        Unary(
                            Minus,
                            Constant(
                                1,
                            ),
                        ),
                    ),
                    Compound(
                        [
                            Return(
                                Constant(
                                    6,
                                ),
                            ),
                        ],
                    ),
                    None,
                ),
                If(
                    Var(
                        "i_neighbor1",
                    ),
                    Compound(
                        [
                            Return(
                                Constant(
                                    7,
                                ),
                            ),
                        ],
                    ),
                    None,
                ),
                If(
                    Var(
                        "i_neighbor2",
                    ),
                    Compound(
                        [
                            Return(
                                Constant(
                                    8,
                                ),
                            ),
                        ],
                    ),
                    None,
                ),
                Return(
                    Constant(
                        0,
                    ),
                ),
            ],
        },
    ],
}