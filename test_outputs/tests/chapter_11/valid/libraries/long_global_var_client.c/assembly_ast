Program {
    definitions: [
        Function {
            name: "main",
            global: true,
            instructions: [
                AllocateStack(
                    80,
                ),
                Call(
                    "return_l",
                ),
                Move {
                    asm_type: Quadword,
                    source: Register(AX, Eight),
                    destination: Stack(16, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Immediate(8589934592, Eight),
                    destination: Register(R10, Eight),
                },
                Cmp(
                    Quadword,
                    Register(R10, Eight),
                    Stack(16, Eight),
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(0, Eight),
                    destination: Stack(24, Eight),
                },
                SetCC(
                    NE,
                    Stack(24, Eight),
                ),
                Cmp(
                    Quadword,
                    Immediate(0, Four),
                    Stack(24, Eight),
                ),
                JmpCC(
                    E,
                    "main.0.true",
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(1, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "main.0.end",
                ),
                Label(
                    "main.0.true",
                ),
                Label(
                    "main.0.end",
                ),
                Call(
                    "return_l_as_int",
                ),
                Move {
                    asm_type: Longword,
                    source: Register(AX, Four),
                    destination: Stack(28, Four),
                },
                Cmp(
                    Longword,
                    Immediate(0, Four),
                    Stack(28, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(0, Four),
                    destination: Stack(32, Four),
                },
                SetCC(
                    NE,
                    Stack(32, Four),
                ),
                Cmp(
                    Longword,
                    Immediate(0, Four),
                    Stack(32, Four),
                ),
                JmpCC(
                    E,
                    "main.1.true",
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(2, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "main.1.end",
                ),
                Label(
                    "main.1.true",
                ),
                Label(
                    "main.1.end",
                ),
                Move {
                    asm_type: Quadword,
                    source: Data("l", Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Stack(40, Eight),
                },
                Binary(
                    Quadword,
                    Sub,
                    Immediate(10, Eight),
                    Stack(40, Eight),
                ),
                Move {
                    asm_type: Quadword,
                    source: Stack(40, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Data("l", Eight),
                },
                Call(
                    "return_l",
                ),
                Move {
                    asm_type: Quadword,
                    source: Register(AX, Eight),
                    destination: Stack(48, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Immediate(8589934582, Eight),
                    destination: Register(R10, Eight),
                },
                Cmp(
                    Quadword,
                    Register(R10, Eight),
                    Stack(48, Eight),
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(0, Eight),
                    destination: Stack(56, Eight),
                },
                SetCC(
                    NE,
                    Stack(56, Eight),
                ),
                Cmp(
                    Quadword,
                    Immediate(0, Four),
                    Stack(56, Eight),
                ),
                JmpCC(
                    E,
                    "main.2.true",
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(3, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "main.2.end",
                ),
                Label(
                    "main.2.true",
                ),
                Label(
                    "main.2.end",
                ),
                Call(
                    "return_l_as_int",
                ),
                Move {
                    asm_type: Longword,
                    source: Register(AX, Four),
                    destination: Stack(60, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Immediate(10, Four),
                    destination: Stack(64, Four),
                },
                Unary(
                    Longword,
                    Neg,
                    Stack(64, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(64, Four),
                    destination: Register(R10, Four),
                },
                Cmp(
                    Longword,
                    Register(R10, Four),
                    Stack(60, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(0, Four),
                    destination: Stack(68, Four),
                },
                SetCC(
                    NE,
                    Stack(68, Four),
                ),
                Cmp(
                    Longword,
                    Immediate(0, Four),
                    Stack(68, Four),
                ),
                JmpCC(
                    E,
                    "main.3.true",
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(4, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "main.3.end",
                ),
                Label(
                    "main.3.true",
                ),
                Label(
                    "main.3.end",
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(0, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Move {
                    asm_type: Longword,
                    source: Immediate(0, Four),
                    destination: Register(AX, Four),
                },
                Ret,
            ],
        },
    ],
    static_variables: [],
    static_constants: [],
}