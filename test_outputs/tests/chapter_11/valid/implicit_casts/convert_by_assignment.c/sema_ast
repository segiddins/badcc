Program {
    declarations: [
        FunctionDeclaration {
            identifier: "return_truncated_long",
            params: [
                (
                    Long,
                    "l.1",
                    SourceSpan {
                        offset: SourceOffset(
                            31,
                        ),
                        length: 1,
                    },
                ),
            ],
            ret: Int,
            body: [
                Return(
                    Cast {
                        to: Int,
                        expr: Var("l.1"),
                    },
                ),
            ],
        },
        FunctionDeclaration {
            identifier: "return_extended_int",
            params: [
                (
                    Int,
                    "i.3",
                    SourceSpan {
                        offset: SourceOffset(
                            81,
                        ),
                        length: 1,
                    },
                ),
            ],
            ret: Long,
            body: [
                Return(
                    Cast {
                        to: Long,
                        expr: Var("i.3"),
                    },
                ),
            ],
        },
        FunctionDeclaration {
            identifier: "truncate_on_assignment",
            params: [
                (
                    Long,
                    "l.5",
                    SourceSpan {
                        offset: SourceOffset(
                            134,
                        ),
                        length: 1,
                    },
                ),
                (
                    Int,
                    "expected.6",
                    SourceSpan {
                        offset: SourceOffset(
                            141,
                        ),
                        length: 8,
                    },
                ),
            ],
            ret: Int,
            body: [
                VariableDeclaration {
                    name: "result.7",
                    ty: Int,
                    init: Cast {
                        to: Int,
                        expr: Var("l.5"),
                    },
                },
                Return(
                    Binary {
                        op: Equals,
                        lhs: Var("result.7"),
                        rhs: Var("expected.6"),
                    },
                ),
            ],
        },
        FunctionDeclaration {
            identifier: "main",
            params: [],
            ret: Int,
            body: [
                VariableDeclaration {
                    name: "result.9",
                    ty: Long,
                    init: Cast {
                        to: Long,
                        expr: FunctionCall {
                            function: Var("return_truncated_long"),
                            params: [
                                Constant(4294967298l),
                            ],
                        },
                    },
                },
                If(
                    Binary {
                        op: NotEqual,
                        lhs: Var("result.9"),
                        rhs: Constant(2l),
                    },
                    Compound(
                        [
                            Return(
                                Constant(1),
                            ),
                        ],
                    ),
                    None,
                ),
                Expression(
                    Assignment {
                        lhs: Var("result.9"),
                        rhs: FunctionCall {
                            function: Var("return_extended_int"),
                            params: [
                                Unary {
                                    op: Minus,
                                    expr: Constant(10),
                                },
                            ],
                        },
                    },
                ),
                If(
                    Binary {
                        op: NotEqual,
                        lhs: Var("result.9"),
                        rhs: Cast {
                            to: Long,
                            expr: Unary {
                                op: Minus,
                                expr: Constant(10),
                            },
                        },
                    },
                    Compound(
                        [
                            Return(
                                Constant(2),
                            ),
                        ],
                    ),
                    None,
                ),
                VariableDeclaration {
                    name: "i.10",
                    ty: Int,
                    init: Constant(2),
                },
                If(
                    Binary {
                        op: NotEqual,
                        lhs: Var("i.10"),
                        rhs: Constant(2),
                    },
                    Compound(
                        [
                            Return(
                                Constant(3),
                            ),
                        ],
                    ),
                    None,
                ),
                If(
                    Unary {
                        op: Not,
                        expr: FunctionCall {
                            function: Var("truncate_on_assignment"),
                            params: [
                                Constant(17179869184l),
                                Constant(0),
                            ],
                        },
                    },
                    Compound(
                        [
                            Return(
                                Constant(4),
                            ),
                        ],
                    ),
                    None,
                ),
                Return(
                    Constant(0),
                ),
            ],
        },
    ],
}