Program {
    declarations: [
        VariableDeclaration {
            name: "l",
            ty: Long,
        },
        VariableDeclaration {
            name: "i",
            ty: Int,
        },
        FunctionDeclaration {
            identifier: "addition",
            params: [],
            ret: Int,
            body: [
                VariableDeclaration {
                    name: "result",
                    ty: Long,
                    init: Binary {
                        op: Add,
                        lhs: Var {
                            name: "i",
                        },
                        rhs: Var {
                            name: "l",
                        },
                    },
                },
                Return(
                    Binary {
                        op: Equals,
                        lhs: Var {
                            name: "result",
                        },
                        rhs: Constant {
                            constant: 2147483663l,
                        },
                    },
                ),
            ],
        },
        FunctionDeclaration {
            identifier: "division",
            params: [],
            ret: Int,
            body: [
                VariableDeclaration {
                    name: "int_result",
                    ty: Int,
                    init: Binary {
                        op: Divide,
                        lhs: Var {
                            name: "l",
                        },
                        rhs: Var {
                            name: "i",
                        },
                    },
                },
                Return(
                    Binary {
                        op: Equals,
                        lhs: Var {
                            name: "int_result",
                        },
                        rhs: Constant {
                            constant: 214748364,
                        },
                    },
                ),
            ],
        },
        FunctionDeclaration {
            identifier: "comparison",
            params: [],
            ret: Int,
            body: [
                Return(
                    Binary {
                        op: LessThanOrEqual,
                        lhs: Var {
                            name: "i",
                        },
                        rhs: Var {
                            name: "l",
                        },
                    },
                ),
            ],
        },
        FunctionDeclaration {
            identifier: "conditional",
            params: [],
            ret: Int,
            body: [
                VariableDeclaration {
                    name: "result",
                    ty: Long,
                    init: Ternary {
                        cond: Constant {
                            constant: 1,
                        },
                        if_true: Var {
                            name: "l",
                        },
                        if_false: Var {
                            name: "i",
                        },
                    },
                },
                Return(
                    Binary {
                        op: Equals,
                        lhs: Var {
                            name: "result",
                        },
                        rhs: Constant {
                            constant: 8589934592l,
                        },
                    },
                ),
            ],
        },
        FunctionDeclaration {
            identifier: "main",
            params: [],
            ret: Int,
            body: [
                Expression(
                    Assignment {
                        lhs: Var {
                            name: "l",
                        },
                        rhs: Constant {
                            constant: 2147483653l,
                        },
                    },
                ),
                Expression(
                    Assignment {
                        lhs: Var {
                            name: "i",
                        },
                        rhs: Constant {
                            constant: 10,
                        },
                    },
                ),
                If(
                    Unary {
                        op: Not,
                        expr: FunctionCall {
                            function: Var {
                                name: "addition",
                            },
                            params: [],
                        },
                    },
                    Compound(
                        [
                            Return(
                                Constant {
                                    constant: 1,
                                },
                            ),
                        ],
                    ),
                    None,
                ),
                Expression(
                    Assignment {
                        lhs: Var {
                            name: "l",
                        },
                        rhs: Constant {
                            constant: 2147483649l,
                        },
                    },
                ),
                If(
                    Unary {
                        op: Not,
                        expr: FunctionCall {
                            function: Var {
                                name: "division",
                            },
                            params: [],
                        },
                    },
                    Compound(
                        [
                            Return(
                                Constant {
                                    constant: 2,
                                },
                            ),
                        ],
                    ),
                    None,
                ),
                Expression(
                    Assignment {
                        lhs: Var {
                            name: "i",
                        },
                        rhs: Unary {
                            op: Minus,
                            expr: Constant {
                                constant: 100,
                            },
                        },
                    },
                ),
                Expression(
                    Assignment {
                        lhs: Var {
                            name: "l",
                        },
                        rhs: Constant {
                            constant: 2147483648l,
                        },
                    },
                ),
                If(
                    Unary {
                        op: Not,
                        expr: FunctionCall {
                            function: Var {
                                name: "comparison",
                            },
                            params: [],
                        },
                    },
                    Compound(
                        [
                            Return(
                                Constant {
                                    constant: 3,
                                },
                            ),
                        ],
                    ),
                    None,
                ),
                Expression(
                    Assignment {
                        lhs: Var {
                            name: "l",
                        },
                        rhs: Constant {
                            constant: 8589934592l,
                        },
                    },
                ),
                Expression(
                    Assignment {
                        lhs: Var {
                            name: "i",
                        },
                        rhs: Constant {
                            constant: 10,
                        },
                    },
                ),
                If(
                    Unary {
                        op: Not,
                        expr: FunctionCall {
                            function: Var {
                                name: "conditional",
                            },
                            params: [],
                        },
                    },
                    Compound(
                        [
                            Return(
                                Constant {
                                    constant: 4,
                                },
                            ),
                        ],
                    ),
                    None,
                ),
                Return(
                    Constant {
                        constant: 0,
                    },
                ),
            ],
        },
    ],
}