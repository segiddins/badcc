Program {
    declarations: [
        FunctionDeclaration {
            identifier: "target",
            params: [
                (
                    Long,
                    "a",
                ),
            ],
            ret: Int,
            body: [
                VariableDeclaration {
                    name: "b",
                    ty: Long,
                    init: Binary(
                        Subtract,
                        Binary(
                            Multiply,
                            Var(
                                "a",
                            ),
                            Constant(
                                5l,
                            ),
                        ),
                        Constant(
                            10l,
                        ),
                    ),
                },
                If(
                    Binary(
                        Equals,
                        Var(
                            "b",
                        ),
                        Constant(
                            21474836440l,
                        ),
                    ),
                    Compound(
                        [
                            Return(
                                Constant(
                                    1,
                                ),
                            ),
                        ],
                    ),
                    None,
                ),
                Return(
                    Constant(
                        0,
                    ),
                ),
            ],
        },
        FunctionDeclaration {
            identifier: "main",
            params: [],
            ret: Int,
            body: [
                Return(
                    FunctionCall(
                        Var(
                            "target",
                        ),
                        [
                            Constant(
                                4294967290l,
                            ),
                        ],
                    ),
                ),
            ],
        },
    ],
}