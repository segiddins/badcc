Program {
    definitions: [
        Function {
            name: "add_large",
            global: true,
            instructions: [
                AllocateStack(
                    32,
                ),
                Move {
                    source: Data("x", Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    source: Register(R10, Eight),
                    destination: Stack(16, Eight),
                },
                Move {
                    source: Immediate(4294967290, Eight),
                    destination: Register(R10, Eight),
                },
                Binary(
                    Add,
                    Register(R10, Eight),
                    Stack(16, Eight),
                ),
                Move {
                    source: Stack(16, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    source: Register(R10, Eight),
                    destination: Data("x", Eight),
                },
                Move {
                    source: Immediate(4294967295, Eight),
                    destination: Register(R10, Eight),
                },
                Cmp(
                    Register(R10, Eight),
                    Data("x", Eight),
                ),
                Move {
                    source: Immediate(0, Eight),
                    destination: Stack(24, Eight),
                },
                SetCC(
                    E,
                    Stack(24, Eight),
                ),
                Move {
                    source: Stack(24, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    source: Register(R10, Four),
                    destination: Stack(28, Four),
                },
                Move {
                    source: Stack(28, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Move {
                    source: Immediate(0, Four),
                    destination: Register(AX, Four),
                },
                Ret,
            ],
        },
        Function {
            name: "subtract_large",
            global: true,
            instructions: [
                AllocateStack(
                    32,
                ),
                Move {
                    source: Data("x", Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    source: Register(R10, Eight),
                    destination: Stack(16, Eight),
                },
                Move {
                    source: Immediate(4294967290, Eight),
                    destination: Register(R10, Eight),
                },
                Binary(
                    Sub,
                    Register(R10, Eight),
                    Stack(16, Eight),
                ),
                Move {
                    source: Stack(16, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    source: Register(R10, Eight),
                    destination: Data("x", Eight),
                },
                Cmp(
                    Immediate(5, Eight),
                    Data("x", Eight),
                ),
                Move {
                    source: Immediate(0, Eight),
                    destination: Stack(24, Eight),
                },
                SetCC(
                    E,
                    Stack(24, Eight),
                ),
                Move {
                    source: Stack(24, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    source: Register(R10, Four),
                    destination: Stack(28, Four),
                },
                Move {
                    source: Stack(28, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Move {
                    source: Immediate(0, Four),
                    destination: Register(AX, Four),
                },
                Ret,
            ],
        },
        Function {
            name: "multiply_by_large",
            global: true,
            instructions: [
                AllocateStack(
                    32,
                ),
                Move {
                    source: Data("x", Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    source: Register(R10, Eight),
                    destination: Stack(16, Eight),
                },
                Move {
                    source: Stack(16, Eight),
                    destination: Register(R11, Eight),
                },
                Move {
                    source: Immediate(4294967290, Eight),
                    destination: Register(R10, Eight),
                },
                Binary(
                    Mult,
                    Register(R10, Eight),
                    Register(R11, Eight),
                ),
                Move {
                    source: Register(R11, Eight),
                    destination: Stack(16, Eight),
                },
                Move {
                    source: Stack(16, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    source: Register(R10, Eight),
                    destination: Data("x", Eight),
                },
                Move {
                    source: Immediate(21474836450, Eight),
                    destination: Register(R10, Eight),
                },
                Cmp(
                    Register(R10, Eight),
                    Data("x", Eight),
                ),
                Move {
                    source: Immediate(0, Eight),
                    destination: Stack(24, Eight),
                },
                SetCC(
                    E,
                    Stack(24, Eight),
                ),
                Move {
                    source: Stack(24, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    source: Register(R10, Four),
                    destination: Stack(28, Four),
                },
                Move {
                    source: Stack(28, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Move {
                    source: Immediate(0, Four),
                    destination: Register(AX, Four),
                },
                Ret,
            ],
        },
        Function {
            name: "main",
            global: true,
            instructions: [
                AllocateStack(
                    32,
                ),
                Call(
                    "add_large",
                ),
                Move {
                    source: Register(AX, Four),
                    destination: Stack(12, Four),
                },
                Cmp(
                    Immediate(0, Four),
                    Stack(12, Four),
                ),
                Move {
                    source: Immediate(0, Four),
                    destination: Stack(16, Four),
                },
                SetCC(
                    E,
                    Stack(16, Four),
                ),
                Cmp(
                    Immediate(0, Four),
                    Stack(16, Four),
                ),
                JmpCC(
                    E,
                    "main.0.true",
                ),
                Move {
                    source: Immediate(1, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "main.0.end",
                ),
                Label(
                    "main.0.true",
                ),
                Label(
                    "main.0.end",
                ),
                Call(
                    "subtract_large",
                ),
                Move {
                    source: Register(AX, Four),
                    destination: Stack(20, Four),
                },
                Cmp(
                    Immediate(0, Four),
                    Stack(20, Four),
                ),
                Move {
                    source: Immediate(0, Four),
                    destination: Stack(24, Four),
                },
                SetCC(
                    E,
                    Stack(24, Four),
                ),
                Cmp(
                    Immediate(0, Four),
                    Stack(24, Four),
                ),
                JmpCC(
                    E,
                    "main.1.true",
                ),
                Move {
                    source: Immediate(2, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "main.1.end",
                ),
                Label(
                    "main.1.true",
                ),
                Label(
                    "main.1.end",
                ),
                Call(
                    "multiply_by_large",
                ),
                Move {
                    source: Register(AX, Four),
                    destination: Stack(28, Four),
                },
                Cmp(
                    Immediate(0, Four),
                    Stack(28, Four),
                ),
                Move {
                    source: Immediate(0, Four),
                    destination: Stack(32, Four),
                },
                SetCC(
                    E,
                    Stack(32, Four),
                ),
                Cmp(
                    Immediate(0, Four),
                    Stack(32, Four),
                ),
                JmpCC(
                    E,
                    "main.2.true",
                ),
                Move {
                    source: Immediate(3, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "main.2.end",
                ),
                Label(
                    "main.2.true",
                ),
                Label(
                    "main.2.end",
                ),
                Move {
                    source: Immediate(0, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Move {
                    source: Immediate(0, Four),
                    destination: Register(AX, Four),
                },
                Ret,
            ],
        },
    ],
    static_variables: [
        StaticVariable {
            global: true,
            name: "x",
            value: 5,
            alignment: 8,
        },
    ],
}