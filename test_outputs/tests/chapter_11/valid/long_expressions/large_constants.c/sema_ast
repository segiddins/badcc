Program {
    declarations: [
        VariableDeclaration {
            name: "x",
            ty: Long,
            init: Constant {
                constant: 5l,
            },
        },
        FunctionDeclaration {
            identifier: "add_large",
            params: [],
            ret: Int,
            body: [
                Expression(
                    Assignment {
                        lhs: Var {
                            name: "x",
                        },
                        rhs: Binary {
                            op: Add,
                            lhs: Var {
                                name: "x",
                            },
                            rhs: Constant {
                                constant: 4294967290l,
                            },
                        },
                    },
                ),
                Return(
                    Cast {
                        to: Int,
                        expr: Binary {
                            op: Equals,
                            lhs: Var {
                                name: "x",
                            },
                            rhs: Constant {
                                constant: 4294967295l,
                            },
                        },
                    },
                ),
            ],
        },
        FunctionDeclaration {
            identifier: "subtract_large",
            params: [],
            ret: Int,
            body: [
                Expression(
                    Assignment {
                        lhs: Var {
                            name: "x",
                        },
                        rhs: Binary {
                            op: Subtract,
                            lhs: Var {
                                name: "x",
                            },
                            rhs: Constant {
                                constant: 4294967290l,
                            },
                        },
                    },
                ),
                Return(
                    Cast {
                        to: Int,
                        expr: Binary {
                            op: Equals,
                            lhs: Var {
                                name: "x",
                            },
                            rhs: Constant {
                                constant: 5l,
                            },
                        },
                    },
                ),
            ],
        },
        FunctionDeclaration {
            identifier: "multiply_by_large",
            params: [],
            ret: Int,
            body: [
                Expression(
                    Assignment {
                        lhs: Var {
                            name: "x",
                        },
                        rhs: Binary {
                            op: Multiply,
                            lhs: Var {
                                name: "x",
                            },
                            rhs: Constant {
                                constant: 4294967290l,
                            },
                        },
                    },
                ),
                Return(
                    Cast {
                        to: Int,
                        expr: Binary {
                            op: Equals,
                            lhs: Var {
                                name: "x",
                            },
                            rhs: Constant {
                                constant: 21474836450l,
                            },
                        },
                    },
                ),
            ],
        },
        FunctionDeclaration {
            identifier: "main",
            params: [],
            ret: Int,
            body: [
                If(
                    Unary {
                        op: Not,
                        expr: FunctionCall {
                            function: Var {
                                name: "add_large",
                            },
                            params: [],
                        },
                    },
                    Compound(
                        [
                            Return(
                                Constant {
                                    constant: 1,
                                },
                            ),
                        ],
                    ),
                    None,
                ),
                If(
                    Unary {
                        op: Not,
                        expr: FunctionCall {
                            function: Var {
                                name: "subtract_large",
                            },
                            params: [],
                        },
                    },
                    Compound(
                        [
                            Return(
                                Constant {
                                    constant: 2,
                                },
                            ),
                        ],
                    ),
                    None,
                ),
                If(
                    Unary {
                        op: Not,
                        expr: FunctionCall {
                            function: Var {
                                name: "multiply_by_large",
                            },
                            params: [],
                        },
                    },
                    Compound(
                        [
                            Return(
                                Constant {
                                    constant: 3,
                                },
                            ),
                        ],
                    ),
                    None,
                ),
                Return(
                    Constant {
                        constant: 0,
                    },
                ),
            ],
        },
    ],
}