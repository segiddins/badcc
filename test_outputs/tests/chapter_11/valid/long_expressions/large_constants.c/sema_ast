Program {
    declarations: [
        VariableDeclaration {
            name: "x",
            ty: Long,
            init: Constant(5l),
        },
        FunctionDeclaration {
            identifier: "add_large",
            params: [],
            ret: Int,
            body: [
                Expression(
                    Assignment {
                        lhs: Var("x"),
                        rhs: Binary {
                            op: Add,
                            lhs: Var("x"),
                            rhs: Constant(4294967290l),
                        },
                    },
                ),
                Return(
                    Cast {
                        to: Int,
                        expr: Binary {
                            op: Equals,
                            lhs: Var("x"),
                            rhs: Constant(4294967295l),
                        },
                    },
                ),
            ],
        },
        FunctionDeclaration {
            identifier: "subtract_large",
            params: [],
            ret: Int,
            body: [
                Expression(
                    Assignment {
                        lhs: Var("x"),
                        rhs: Binary {
                            op: Subtract,
                            lhs: Var("x"),
                            rhs: Constant(4294967290l),
                        },
                    },
                ),
                Return(
                    Cast {
                        to: Int,
                        expr: Binary {
                            op: Equals,
                            lhs: Var("x"),
                            rhs: Constant(5l),
                        },
                    },
                ),
            ],
        },
        FunctionDeclaration {
            identifier: "multiply_by_large",
            params: [],
            ret: Int,
            body: [
                Expression(
                    Assignment {
                        lhs: Var("x"),
                        rhs: Binary {
                            op: Multiply,
                            lhs: Var("x"),
                            rhs: Constant(4294967290l),
                        },
                    },
                ),
                Return(
                    Cast {
                        to: Int,
                        expr: Binary {
                            op: Equals,
                            lhs: Var("x"),
                            rhs: Constant(21474836450l),
                        },
                    },
                ),
            ],
        },
        FunctionDeclaration {
            identifier: "main",
            params: [],
            ret: Int,
            body: [
                If(
                    Unary {
                        op: Not,
                        expr: FunctionCall {
                            function: Var("add_large"),
                        },
                    },
                    Compound(
                        [
                            Return(
                                Constant(1),
                            ),
                        ],
                    ),
                    None,
                ),
                If(
                    Unary {
                        op: Not,
                        expr: FunctionCall {
                            function: Var("subtract_large"),
                        },
                    },
                    Compound(
                        [
                            Return(
                                Constant(2),
                            ),
                        ],
                    ),
                    None,
                ),
                If(
                    Unary {
                        op: Not,
                        expr: FunctionCall {
                            function: Var("multiply_by_large"),
                        },
                    },
                    Compound(
                        [
                            Return(
                                Constant(3),
                            ),
                        ],
                    ),
                    None,
                ),
                Return(
                    Constant(0),
                ),
            ],
        },
    ],
}