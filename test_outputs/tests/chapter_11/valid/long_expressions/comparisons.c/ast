Program {
    declarations: [
        VariableDeclaration {
            name: "l",
            ty: Long,
        },
        VariableDeclaration {
            name: "l2",
            ty: Long,
        },
        FunctionDeclaration {
            identifier: "compare_constants",
            params: [],
            ret: Int,
            body: [
                Return(
                    Binary(
                        GreaterThan,
                        Constant(
                            8589934593l,
                        ),
                        Constant(
                            255l,
                        ),
                    ),
                ),
            ],
        },
        FunctionDeclaration {
            identifier: "compare_constants_2",
            params: [],
            ret: Int,
            body: [
                Return(
                    Binary(
                        LessThan,
                        Constant(
                            255l,
                        ),
                        Constant(
                            8589934593l,
                        ),
                    ),
                ),
            ],
        },
        FunctionDeclaration {
            identifier: "l_geq_2_60",
            params: [],
            ret: Int,
            body: [
                Return(
                    Binary(
                        GreaterThanOrEqual,
                        Var(
                            "l",
                        ),
                        Constant(
                            1152921504606846976l,
                        ),
                    ),
                ),
            ],
        },
        FunctionDeclaration {
            identifier: "uint_max_leq_l",
            params: [],
            ret: Int,
            body: [
                Return(
                    Binary(
                        LessThanOrEqual,
                        Constant(
                            4294967295l,
                        ),
                        Var(
                            "l",
                        ),
                    ),
                ),
            ],
        },
        FunctionDeclaration {
            identifier: "l_eq_l2",
            params: [],
            ret: Int,
            body: [
                Return(
                    Binary(
                        Equals,
                        Var(
                            "l",
                        ),
                        Var(
                            "l2",
                        ),
                    ),
                ),
            ],
        },
        FunctionDeclaration {
            identifier: "main",
            params: [],
            ret: Int,
            body: [
                If(
                    Unary(
                        Not,
                        FunctionCall(
                            Var(
                                "compare_constants",
                            ),
                            [],
                        ),
                    ),
                    Compound(
                        [
                            Return(
                                Constant(
                                    1,
                                ),
                            ),
                        ],
                    ),
                    None,
                ),
                If(
                    Unary(
                        Not,
                        FunctionCall(
                            Var(
                                "compare_constants_2",
                            ),
                            [],
                        ),
                    ),
                    Compound(
                        [
                            Return(
                                Constant(
                                    2,
                                ),
                            ),
                        ],
                    ),
                    None,
                ),
                Expression(
                    Assignment(
                        Var(
                            "l",
                        ),
                        Unary(
                            Minus,
                            Constant(
                                9223372036854775807l,
                            ),
                        ),
                    ),
                ),
                If(
                    FunctionCall(
                        Var(
                            "l_geq_2_60",
                        ),
                        [],
                    ),
                    Compound(
                        [
                            Return(
                                Constant(
                                    3,
                                ),
                            ),
                        ],
                    ),
                    None,
                ),
                If(
                    FunctionCall(
                        Var(
                            "uint_max_leq_l",
                        ),
                        [],
                    ),
                    Compound(
                        [
                            Return(
                                Constant(
                                    4,
                                ),
                            ),
                        ],
                    ),
                    None,
                ),
                Expression(
                    Assignment(
                        Var(
                            "l",
                        ),
                        Constant(
                            1152921504606846976l,
                        ),
                    ),
                ),
                If(
                    Unary(
                        Not,
                        FunctionCall(
                            Var(
                                "l_geq_2_60",
                            ),
                            [],
                        ),
                    ),
                    Compound(
                        [
                            Return(
                                Constant(
                                    5,
                                ),
                            ),
                        ],
                    ),
                    None,
                ),
                If(
                    Unary(
                        Not,
                        FunctionCall(
                            Var(
                                "uint_max_leq_l",
                            ),
                            [],
                        ),
                    ),
                    Compound(
                        [
                            Return(
                                Constant(
                                    6,
                                ),
                            ),
                        ],
                    ),
                    None,
                ),
                Expression(
                    Assignment(
                        Var(
                            "l2",
                        ),
                        Var(
                            "l",
                        ),
                    ),
                ),
                If(
                    Unary(
                        Not,
                        FunctionCall(
                            Var(
                                "l_eq_l2",
                            ),
                            [],
                        ),
                    ),
                    Compound(
                        [
                            Return(
                                Constant(
                                    7,
                                ),
                            ),
                        ],
                    ),
                    None,
                ),
                Return(
                    Constant(
                        0,
                    ),
                ),
            ],
        },
    ],
}