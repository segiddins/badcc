Program {
    declarations: [
        FunctionDeclaration {
            identifier: "check_12_ints",
            params: [
                (
                    Int,
                    "start",
                ),
                (
                    Int,
                    "a",
                ),
                (
                    Int,
                    "b",
                ),
                (
                    Int,
                    "c",
                ),
                (
                    Int,
                    "d",
                ),
                (
                    Int,
                    "e",
                ),
                (
                    Int,
                    "f",
                ),
                (
                    Int,
                    "g",
                ),
                (
                    Int,
                    "h",
                ),
                (
                    Int,
                    "i",
                ),
                (
                    Int,
                    "j",
                ),
                (
                    Int,
                    "k",
                ),
                (
                    Int,
                    "l",
                ),
            ],
            ret: Int,
        },
        VariableDeclaration {
            name: "glob",
            ty: Long,
            init: Constant(
                5l,
            ),
        },
        FunctionDeclaration {
            identifier: "main",
            params: [],
            ret: Int,
            body: [
                VariableDeclaration {
                    name: "should_spill",
                    ty: Long,
                    init: Binary(
                        Multiply,
                        Var(
                            "glob",
                        ),
                        Constant(
                            4294967307l,
                        ),
                    ),
                },
                VariableDeclaration {
                    name: "one",
                    ty: Int,
                    init: Binary(
                        Subtract,
                        Var(
                            "glob",
                        ),
                        Constant(
                            4,
                        ),
                    ),
                },
                VariableDeclaration {
                    name: "two",
                    ty: Int,
                    init: Binary(
                        Add,
                        Var(
                            "one",
                        ),
                        Var(
                            "one",
                        ),
                    ),
                },
                VariableDeclaration {
                    name: "three",
                    ty: Int,
                    init: Binary(
                        Add,
                        Constant(
                            2,
                        ),
                        Var(
                            "one",
                        ),
                    ),
                },
                VariableDeclaration {
                    name: "four",
                    ty: Int,
                    init: Binary(
                        Multiply,
                        Var(
                            "two",
                        ),
                        Var(
                            "two",
                        ),
                    ),
                },
                VariableDeclaration {
                    name: "five",
                    ty: Int,
                    init: Binary(
                        Subtract,
                        Constant(
                            6,
                        ),
                        Var(
                            "one",
                        ),
                    ),
                },
                VariableDeclaration {
                    name: "six",
                    ty: Int,
                    init: Binary(
                        Multiply,
                        Var(
                            "two",
                        ),
                        Var(
                            "three",
                        ),
                    ),
                },
                VariableDeclaration {
                    name: "seven",
                    ty: Int,
                    init: Binary(
                        Add,
                        Var(
                            "one",
                        ),
                        Constant(
                            6,
                        ),
                    ),
                },
                VariableDeclaration {
                    name: "eight",
                    ty: Int,
                    init: Binary(
                        Multiply,
                        Var(
                            "two",
                        ),
                        Constant(
                            4,
                        ),
                    ),
                },
                VariableDeclaration {
                    name: "nine",
                    ty: Int,
                    init: Binary(
                        Multiply,
                        Var(
                            "three",
                        ),
                        Var(
                            "three",
                        ),
                    ),
                },
                VariableDeclaration {
                    name: "ten",
                    ty: Int,
                    init: Binary(
                        Add,
                        Var(
                            "four",
                        ),
                        Var(
                            "six",
                        ),
                    ),
                },
                VariableDeclaration {
                    name: "eleven",
                    ty: Int,
                    init: Binary(
                        Subtract,
                        Constant(
                            16,
                        ),
                        Var(
                            "five",
                        ),
                    ),
                },
                VariableDeclaration {
                    name: "twelve",
                    ty: Int,
                    init: Binary(
                        Add,
                        Var(
                            "six",
                        ),
                        Var(
                            "six",
                        ),
                    ),
                },
                Expression(
                    FunctionCall(
                        Var(
                            "check_12_ints",
                        ),
                        [
                            Var(
                                "one",
                            ),
                            Var(
                                "two",
                            ),
                            Var(
                                "three",
                            ),
                            Var(
                                "four",
                            ),
                            Var(
                                "five",
                            ),
                            Var(
                                "six",
                            ),
                            Var(
                                "seven",
                            ),
                            Var(
                                "eight",
                            ),
                            Var(
                                "nine",
                            ),
                            Var(
                                "ten",
                            ),
                            Var(
                                "eleven",
                            ),
                            Var(
                                "twelve",
                            ),
                            Constant(
                                1,
                            ),
                        ],
                    ),
                ),
                VariableDeclaration {
                    name: "thirteen",
                    ty: Int,
                    init: Binary(
                        Add,
                        Var(
                            "glob",
                        ),
                        Constant(
                            8,
                        ),
                    ),
                },
                VariableDeclaration {
                    name: "fourteen",
                    ty: Int,
                    init: Binary(
                        Add,
                        Var(
                            "thirteen",
                        ),
                        Constant(
                            1,
                        ),
                    ),
                },
                VariableDeclaration {
                    name: "fifteen",
                    ty: Int,
                    init: Binary(
                        Subtract,
                        Constant(
                            28,
                        ),
                        Var(
                            "thirteen",
                        ),
                    ),
                },
                VariableDeclaration {
                    name: "sixteen",
                    ty: Int,
                    init: Binary(
                        Add,
                        Var(
                            "fourteen",
                        ),
                        Constant(
                            2,
                        ),
                    ),
                },
                VariableDeclaration {
                    name: "seventeen",
                    ty: Int,
                    init: Binary(
                        Add,
                        Constant(
                            4,
                        ),
                        Var(
                            "thirteen",
                        ),
                    ),
                },
                VariableDeclaration {
                    name: "eighteen",
                    ty: Int,
                    init: Binary(
                        Subtract,
                        Constant(
                            32,
                        ),
                        Var(
                            "fourteen",
                        ),
                    ),
                },
                VariableDeclaration {
                    name: "nineteen",
                    ty: Int,
                    init: Binary(
                        Subtract,
                        Constant(
                            35,
                        ),
                        Var(
                            "sixteen",
                        ),
                    ),
                },
                VariableDeclaration {
                    name: "twenty",
                    ty: Int,
                    init: Binary(
                        Add,
                        Var(
                            "fifteen",
                        ),
                        Constant(
                            5,
                        ),
                    ),
                },
                VariableDeclaration {
                    name: "twenty_one",
                    ty: Int,
                    init: Binary(
                        Subtract,
                        Binary(
                            Multiply,
                            Var(
                                "thirteen",
                            ),
                            Constant(
                                2,
                            ),
                        ),
                        Constant(
                            5,
                        ),
                    ),
                },
                VariableDeclaration {
                    name: "twenty_two",
                    ty: Int,
                    init: Binary(
                        Add,
                        Var(
                            "fifteen",
                        ),
                        Constant(
                            7,
                        ),
                    ),
                },
                VariableDeclaration {
                    name: "twenty_three",
                    ty: Int,
                    init: Binary(
                        Add,
                        Constant(
                            6,
                        ),
                        Var(
                            "seventeen",
                        ),
                    ),
                },
                VariableDeclaration {
                    name: "twenty_four",
                    ty: Int,
                    init: Binary(
                        Add,
                        Var(
                            "thirteen",
                        ),
                        Constant(
                            11,
                        ),
                    ),
                },
                Expression(
                    FunctionCall(
                        Var(
                            "check_12_ints",
                        ),
                        [
                            Var(
                                "thirteen",
                            ),
                            Var(
                                "fourteen",
                            ),
                            Var(
                                "fifteen",
                            ),
                            Var(
                                "sixteen",
                            ),
                            Var(
                                "seventeen",
                            ),
                            Var(
                                "eighteen",
                            ),
                            Var(
                                "nineteen",
                            ),
                            Var(
                                "twenty",
                            ),
                            Var(
                                "twenty_one",
                            ),
                            Var(
                                "twenty_two",
                            ),
                            Var(
                                "twenty_three",
                            ),
                            Var(
                                "twenty_four",
                            ),
                            Constant(
                                13,
                            ),
                        ],
                    ),
                ),
                If(
                    Binary(
                        NotEqual,
                        Var(
                            "should_spill",
                        ),
                        Constant(
                            21474836535l,
                        ),
                    ),
                    Compound(
                        [
                            Return(
                                Unary(
                                    Minus,
                                    Constant(
                                        1,
                                    ),
                                ),
                            ),
                        ],
                    ),
                    None,
                ),
                Return(
                    Constant(
                        0,
                    ),
                ),
            ],
        },
        FunctionDeclaration {
            identifier: "check_12_ints",
            params: [
                (
                    Int,
                    "a",
                ),
                (
                    Int,
                    "b",
                ),
                (
                    Int,
                    "c",
                ),
                (
                    Int,
                    "d",
                ),
                (
                    Int,
                    "e",
                ),
                (
                    Int,
                    "f",
                ),
                (
                    Int,
                    "g",
                ),
                (
                    Int,
                    "h",
                ),
                (
                    Int,
                    "i",
                ),
                (
                    Int,
                    "j",
                ),
                (
                    Int,
                    "k",
                ),
                (
                    Int,
                    "l",
                ),
                (
                    Int,
                    "start",
                ),
            ],
            ret: Int,
            body: [
                VariableDeclaration {
                    name: "expected",
                    ty: Int,
                    init: Constant(
                        0,
                    ),
                },
                Expression(
                    Assignment(
                        Var(
                            "expected",
                        ),
                        Binary(
                            Add,
                            Var(
                                "start",
                            ),
                            Constant(
                                0,
                            ),
                        ),
                    ),
                ),
                If(
                    Binary(
                        NotEqual,
                        Var(
                            "a",
                        ),
                        Var(
                            "expected",
                        ),
                    ),
                    Compound(
                        [
                            Return(
                                Var(
                                    "expected",
                                ),
                            ),
                        ],
                    ),
                    None,
                ),
                Expression(
                    Assignment(
                        Var(
                            "expected",
                        ),
                        Binary(
                            Add,
                            Var(
                                "start",
                            ),
                            Constant(
                                1,
                            ),
                        ),
                    ),
                ),
                If(
                    Binary(
                        NotEqual,
                        Var(
                            "b",
                        ),
                        Var(
                            "expected",
                        ),
                    ),
                    Compound(
                        [
                            Return(
                                Var(
                                    "expected",
                                ),
                            ),
                        ],
                    ),
                    None,
                ),
                Expression(
                    Assignment(
                        Var(
                            "expected",
                        ),
                        Binary(
                            Add,
                            Var(
                                "start",
                            ),
                            Constant(
                                2,
                            ),
                        ),
                    ),
                ),
                If(
                    Binary(
                        NotEqual,
                        Var(
                            "c",
                        ),
                        Var(
                            "expected",
                        ),
                    ),
                    Compound(
                        [
                            Return(
                                Var(
                                    "expected",
                                ),
                            ),
                        ],
                    ),
                    None,
                ),
                Expression(
                    Assignment(
                        Var(
                            "expected",
                        ),
                        Binary(
                            Add,
                            Var(
                                "start",
                            ),
                            Constant(
                                3,
                            ),
                        ),
                    ),
                ),
                If(
                    Binary(
                        NotEqual,
                        Var(
                            "d",
                        ),
                        Var(
                            "expected",
                        ),
                    ),
                    Compound(
                        [
                            Return(
                                Var(
                                    "expected",
                                ),
                            ),
                        ],
                    ),
                    None,
                ),
                Expression(
                    Assignment(
                        Var(
                            "expected",
                        ),
                        Binary(
                            Add,
                            Var(
                                "start",
                            ),
                            Constant(
                                4,
                            ),
                        ),
                    ),
                ),
                If(
                    Binary(
                        NotEqual,
                        Var(
                            "e",
                        ),
                        Var(
                            "expected",
                        ),
                    ),
                    Compound(
                        [
                            Return(
                                Var(
                                    "expected",
                                ),
                            ),
                        ],
                    ),
                    None,
                ),
                Expression(
                    Assignment(
                        Var(
                            "expected",
                        ),
                        Binary(
                            Add,
                            Var(
                                "start",
                            ),
                            Constant(
                                5,
                            ),
                        ),
                    ),
                ),
                If(
                    Binary(
                        NotEqual,
                        Var(
                            "f",
                        ),
                        Var(
                            "expected",
                        ),
                    ),
                    Compound(
                        [
                            Return(
                                Var(
                                    "expected",
                                ),
                            ),
                        ],
                    ),
                    None,
                ),
                Expression(
                    Assignment(
                        Var(
                            "expected",
                        ),
                        Binary(
                            Add,
                            Var(
                                "start",
                            ),
                            Constant(
                                6,
                            ),
                        ),
                    ),
                ),
                If(
                    Binary(
                        NotEqual,
                        Var(
                            "g",
                        ),
                        Var(
                            "expected",
                        ),
                    ),
                    Compound(
                        [
                            Return(
                                Var(
                                    "expected",
                                ),
                            ),
                        ],
                    ),
                    None,
                ),
                Expression(
                    Assignment(
                        Var(
                            "expected",
                        ),
                        Binary(
                            Add,
                            Var(
                                "start",
                            ),
                            Constant(
                                7,
                            ),
                        ),
                    ),
                ),
                If(
                    Binary(
                        NotEqual,
                        Var(
                            "h",
                        ),
                        Var(
                            "expected",
                        ),
                    ),
                    Compound(
                        [
                            Return(
                                Var(
                                    "expected",
                                ),
                            ),
                        ],
                    ),
                    None,
                ),
                Expression(
                    Assignment(
                        Var(
                            "expected",
                        ),
                        Binary(
                            Add,
                            Var(
                                "start",
                            ),
                            Constant(
                                8,
                            ),
                        ),
                    ),
                ),
                If(
                    Binary(
                        NotEqual,
                        Var(
                            "i",
                        ),
                        Var(
                            "expected",
                        ),
                    ),
                    Compound(
                        [
                            Return(
                                Var(
                                    "expected",
                                ),
                            ),
                        ],
                    ),
                    None,
                ),
                Expression(
                    Assignment(
                        Var(
                            "expected",
                        ),
                        Binary(
                            Add,
                            Var(
                                "start",
                            ),
                            Constant(
                                9,
                            ),
                        ),
                    ),
                ),
                If(
                    Binary(
                        NotEqual,
                        Var(
                            "j",
                        ),
                        Var(
                            "expected",
                        ),
                    ),
                    Compound(
                        [
                            Return(
                                Var(
                                    "expected",
                                ),
                            ),
                        ],
                    ),
                    None,
                ),
                Expression(
                    Assignment(
                        Var(
                            "expected",
                        ),
                        Binary(
                            Add,
                            Var(
                                "start",
                            ),
                            Constant(
                                10,
                            ),
                        ),
                    ),
                ),
                If(
                    Binary(
                        NotEqual,
                        Var(
                            "k",
                        ),
                        Var(
                            "expected",
                        ),
                    ),
                    Compound(
                        [
                            Return(
                                Var(
                                    "expected",
                                ),
                            ),
                        ],
                    ),
                    None,
                ),
                Expression(
                    Assignment(
                        Var(
                            "expected",
                        ),
                        Binary(
                            Add,
                            Var(
                                "start",
                            ),
                            Constant(
                                11,
                            ),
                        ),
                    ),
                ),
                If(
                    Binary(
                        NotEqual,
                        Var(
                            "l",
                        ),
                        Var(
                            "expected",
                        ),
                    ),
                    Compound(
                        [
                            Return(
                                Var(
                                    "expected",
                                ),
                            ),
                        ],
                    ),
                    None,
                ),
                Return(
                    Constant(
                        0,
                    ),
                ),
            ],
        },
    ],
}