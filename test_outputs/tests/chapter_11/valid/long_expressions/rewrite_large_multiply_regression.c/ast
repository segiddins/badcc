Program {
    declarations: [
        FunctionDeclaration {
            identifier: "check_12_ints",
            params: [
                (
                    Int,
                    "start",
                    SourceSpan {
                        offset: SourceOffset(
                            22,
                        ),
                        length: 5,
                    },
                ),
                (
                    Int,
                    "a",
                    SourceSpan {
                        offset: SourceOffset(
                            33,
                        ),
                        length: 1,
                    },
                ),
                (
                    Int,
                    "b",
                    SourceSpan {
                        offset: SourceOffset(
                            40,
                        ),
                        length: 1,
                    },
                ),
                (
                    Int,
                    "c",
                    SourceSpan {
                        offset: SourceOffset(
                            47,
                        ),
                        length: 1,
                    },
                ),
                (
                    Int,
                    "d",
                    SourceSpan {
                        offset: SourceOffset(
                            54,
                        ),
                        length: 1,
                    },
                ),
                (
                    Int,
                    "e",
                    SourceSpan {
                        offset: SourceOffset(
                            61,
                        ),
                        length: 1,
                    },
                ),
                (
                    Int,
                    "f",
                    SourceSpan {
                        offset: SourceOffset(
                            68,
                        ),
                        length: 1,
                    },
                ),
                (
                    Int,
                    "g",
                    SourceSpan {
                        offset: SourceOffset(
                            75,
                        ),
                        length: 1,
                    },
                ),
                (
                    Int,
                    "h",
                    SourceSpan {
                        offset: SourceOffset(
                            100,
                        ),
                        length: 1,
                    },
                ),
                (
                    Int,
                    "i",
                    SourceSpan {
                        offset: SourceOffset(
                            107,
                        ),
                        length: 1,
                    },
                ),
                (
                    Int,
                    "j",
                    SourceSpan {
                        offset: SourceOffset(
                            114,
                        ),
                        length: 1,
                    },
                ),
                (
                    Int,
                    "k",
                    SourceSpan {
                        offset: SourceOffset(
                            121,
                        ),
                        length: 1,
                    },
                ),
                (
                    Int,
                    "l",
                    SourceSpan {
                        offset: SourceOffset(
                            128,
                        ),
                        length: 1,
                    },
                ),
            ],
            ret: Int,
        },
        VariableDeclaration {
            name: "glob",
            ty: Long,
            init: Constant {
                constant: 5l,
            },
        },
        FunctionDeclaration {
            identifier: "main",
            params: [],
            ret: Int,
            body: [
                VariableDeclaration {
                    name: "should_spill",
                    ty: Long,
                    init: Binary {
                        op: Multiply,
                        lhs: Var {
                            name: "glob",
                        },
                        rhs: Constant {
                            constant: 4294967307l,
                        },
                    },
                },
                VariableDeclaration {
                    name: "one",
                    ty: Int,
                    init: Binary {
                        op: Subtract,
                        lhs: Var {
                            name: "glob",
                        },
                        rhs: Constant {
                            constant: 4,
                        },
                    },
                },
                VariableDeclaration {
                    name: "two",
                    ty: Int,
                    init: Binary {
                        op: Add,
                        lhs: Var {
                            name: "one",
                        },
                        rhs: Var {
                            name: "one",
                        },
                    },
                },
                VariableDeclaration {
                    name: "three",
                    ty: Int,
                    init: Binary {
                        op: Add,
                        lhs: Constant {
                            constant: 2,
                        },
                        rhs: Var {
                            name: "one",
                        },
                    },
                },
                VariableDeclaration {
                    name: "four",
                    ty: Int,
                    init: Binary {
                        op: Multiply,
                        lhs: Var {
                            name: "two",
                        },
                        rhs: Var {
                            name: "two",
                        },
                    },
                },
                VariableDeclaration {
                    name: "five",
                    ty: Int,
                    init: Binary {
                        op: Subtract,
                        lhs: Constant {
                            constant: 6,
                        },
                        rhs: Var {
                            name: "one",
                        },
                    },
                },
                VariableDeclaration {
                    name: "six",
                    ty: Int,
                    init: Binary {
                        op: Multiply,
                        lhs: Var {
                            name: "two",
                        },
                        rhs: Var {
                            name: "three",
                        },
                    },
                },
                VariableDeclaration {
                    name: "seven",
                    ty: Int,
                    init: Binary {
                        op: Add,
                        lhs: Var {
                            name: "one",
                        },
                        rhs: Constant {
                            constant: 6,
                        },
                    },
                },
                VariableDeclaration {
                    name: "eight",
                    ty: Int,
                    init: Binary {
                        op: Multiply,
                        lhs: Var {
                            name: "two",
                        },
                        rhs: Constant {
                            constant: 4,
                        },
                    },
                },
                VariableDeclaration {
                    name: "nine",
                    ty: Int,
                    init: Binary {
                        op: Multiply,
                        lhs: Var {
                            name: "three",
                        },
                        rhs: Var {
                            name: "three",
                        },
                    },
                },
                VariableDeclaration {
                    name: "ten",
                    ty: Int,
                    init: Binary {
                        op: Add,
                        lhs: Var {
                            name: "four",
                        },
                        rhs: Var {
                            name: "six",
                        },
                    },
                },
                VariableDeclaration {
                    name: "eleven",
                    ty: Int,
                    init: Binary {
                        op: Subtract,
                        lhs: Constant {
                            constant: 16,
                        },
                        rhs: Var {
                            name: "five",
                        },
                    },
                },
                VariableDeclaration {
                    name: "twelve",
                    ty: Int,
                    init: Binary {
                        op: Add,
                        lhs: Var {
                            name: "six",
                        },
                        rhs: Var {
                            name: "six",
                        },
                    },
                },
                Expression(
                    FunctionCall {
                        function: Var {
                            name: "check_12_ints",
                        },
                        params: [
                            Var {
                                name: "one",
                            },
                            Var {
                                name: "two",
                            },
                            Var {
                                name: "three",
                            },
                            Var {
                                name: "four",
                            },
                            Var {
                                name: "five",
                            },
                            Var {
                                name: "six",
                            },
                            Var {
                                name: "seven",
                            },
                            Var {
                                name: "eight",
                            },
                            Var {
                                name: "nine",
                            },
                            Var {
                                name: "ten",
                            },
                            Var {
                                name: "eleven",
                            },
                            Var {
                                name: "twelve",
                            },
                            Constant {
                                constant: 1,
                            },
                        ],
                    },
                ),
                VariableDeclaration {
                    name: "thirteen",
                    ty: Int,
                    init: Binary {
                        op: Add,
                        lhs: Var {
                            name: "glob",
                        },
                        rhs: Constant {
                            constant: 8,
                        },
                    },
                },
                VariableDeclaration {
                    name: "fourteen",
                    ty: Int,
                    init: Binary {
                        op: Add,
                        lhs: Var {
                            name: "thirteen",
                        },
                        rhs: Constant {
                            constant: 1,
                        },
                    },
                },
                VariableDeclaration {
                    name: "fifteen",
                    ty: Int,
                    init: Binary {
                        op: Subtract,
                        lhs: Constant {
                            constant: 28,
                        },
                        rhs: Var {
                            name: "thirteen",
                        },
                    },
                },
                VariableDeclaration {
                    name: "sixteen",
                    ty: Int,
                    init: Binary {
                        op: Add,
                        lhs: Var {
                            name: "fourteen",
                        },
                        rhs: Constant {
                            constant: 2,
                        },
                    },
                },
                VariableDeclaration {
                    name: "seventeen",
                    ty: Int,
                    init: Binary {
                        op: Add,
                        lhs: Constant {
                            constant: 4,
                        },
                        rhs: Var {
                            name: "thirteen",
                        },
                    },
                },
                VariableDeclaration {
                    name: "eighteen",
                    ty: Int,
                    init: Binary {
                        op: Subtract,
                        lhs: Constant {
                            constant: 32,
                        },
                        rhs: Var {
                            name: "fourteen",
                        },
                    },
                },
                VariableDeclaration {
                    name: "nineteen",
                    ty: Int,
                    init: Binary {
                        op: Subtract,
                        lhs: Constant {
                            constant: 35,
                        },
                        rhs: Var {
                            name: "sixteen",
                        },
                    },
                },
                VariableDeclaration {
                    name: "twenty",
                    ty: Int,
                    init: Binary {
                        op: Add,
                        lhs: Var {
                            name: "fifteen",
                        },
                        rhs: Constant {
                            constant: 5,
                        },
                    },
                },
                VariableDeclaration {
                    name: "twenty_one",
                    ty: Int,
                    init: Binary {
                        op: Subtract,
                        lhs: Binary {
                            op: Multiply,
                            lhs: Var {
                                name: "thirteen",
                            },
                            rhs: Constant {
                                constant: 2,
                            },
                        },
                        rhs: Constant {
                            constant: 5,
                        },
                    },
                },
                VariableDeclaration {
                    name: "twenty_two",
                    ty: Int,
                    init: Binary {
                        op: Add,
                        lhs: Var {
                            name: "fifteen",
                        },
                        rhs: Constant {
                            constant: 7,
                        },
                    },
                },
                VariableDeclaration {
                    name: "twenty_three",
                    ty: Int,
                    init: Binary {
                        op: Add,
                        lhs: Constant {
                            constant: 6,
                        },
                        rhs: Var {
                            name: "seventeen",
                        },
                    },
                },
                VariableDeclaration {
                    name: "twenty_four",
                    ty: Int,
                    init: Binary {
                        op: Add,
                        lhs: Var {
                            name: "thirteen",
                        },
                        rhs: Constant {
                            constant: 11,
                        },
                    },
                },
                Expression(
                    FunctionCall {
                        function: Var {
                            name: "check_12_ints",
                        },
                        params: [
                            Var {
                                name: "thirteen",
                            },
                            Var {
                                name: "fourteen",
                            },
                            Var {
                                name: "fifteen",
                            },
                            Var {
                                name: "sixteen",
                            },
                            Var {
                                name: "seventeen",
                            },
                            Var {
                                name: "eighteen",
                            },
                            Var {
                                name: "nineteen",
                            },
                            Var {
                                name: "twenty",
                            },
                            Var {
                                name: "twenty_one",
                            },
                            Var {
                                name: "twenty_two",
                            },
                            Var {
                                name: "twenty_three",
                            },
                            Var {
                                name: "twenty_four",
                            },
                            Constant {
                                constant: 13,
                            },
                        ],
                    },
                ),
                If(
                    Binary {
                        op: NotEqual,
                        lhs: Var {
                            name: "should_spill",
                        },
                        rhs: Constant {
                            constant: 21474836535l,
                        },
                    },
                    Compound(
                        [
                            Return(
                                Unary {
                                    op: Minus,
                                    expr: Constant {
                                        constant: 1,
                                    },
                                },
                            ),
                        ],
                    ),
                    None,
                ),
                Return(
                    Constant {
                        constant: 0,
                    },
                ),
            ],
        },
        FunctionDeclaration {
            identifier: "check_12_ints",
            params: [
                (
                    Int,
                    "a",
                    SourceSpan {
                        offset: SourceOffset(
                            1333,
                        ),
                        length: 1,
                    },
                ),
                (
                    Int,
                    "b",
                    SourceSpan {
                        offset: SourceOffset(
                            1340,
                        ),
                        length: 1,
                    },
                ),
                (
                    Int,
                    "c",
                    SourceSpan {
                        offset: SourceOffset(
                            1347,
                        ),
                        length: 1,
                    },
                ),
                (
                    Int,
                    "d",
                    SourceSpan {
                        offset: SourceOffset(
                            1354,
                        ),
                        length: 1,
                    },
                ),
                (
                    Int,
                    "e",
                    SourceSpan {
                        offset: SourceOffset(
                            1361,
                        ),
                        length: 1,
                    },
                ),
                (
                    Int,
                    "f",
                    SourceSpan {
                        offset: SourceOffset(
                            1368,
                        ),
                        length: 1,
                    },
                ),
                (
                    Int,
                    "g",
                    SourceSpan {
                        offset: SourceOffset(
                            1375,
                        ),
                        length: 1,
                    },
                ),
                (
                    Int,
                    "h",
                    SourceSpan {
                        offset: SourceOffset(
                            1382,
                        ),
                        length: 1,
                    },
                ),
                (
                    Int,
                    "i",
                    SourceSpan {
                        offset: SourceOffset(
                            1389,
                        ),
                        length: 1,
                    },
                ),
                (
                    Int,
                    "j",
                    SourceSpan {
                        offset: SourceOffset(
                            1414,
                        ),
                        length: 1,
                    },
                ),
                (
                    Int,
                    "k",
                    SourceSpan {
                        offset: SourceOffset(
                            1421,
                        ),
                        length: 1,
                    },
                ),
                (
                    Int,
                    "l",
                    SourceSpan {
                        offset: SourceOffset(
                            1428,
                        ),
                        length: 1,
                    },
                ),
                (
                    Int,
                    "start",
                    SourceSpan {
                        offset: SourceOffset(
                            1435,
                        ),
                        length: 5,
                    },
                ),
            ],
            ret: Int,
            body: [
                VariableDeclaration {
                    name: "expected",
                    ty: Int,
                    init: Constant {
                        constant: 0,
                    },
                },
                Expression(
                    Assignment {
                        lhs: Var {
                            name: "expected",
                        },
                        rhs: Binary {
                            op: Add,
                            lhs: Var {
                                name: "start",
                            },
                            rhs: Constant {
                                constant: 0,
                            },
                        },
                    },
                ),
                If(
                    Binary {
                        op: NotEqual,
                        lhs: Var {
                            name: "a",
                        },
                        rhs: Var {
                            name: "expected",
                        },
                    },
                    Compound(
                        [
                            Return(
                                Var {
                                    name: "expected",
                                },
                            ),
                        ],
                    ),
                    None,
                ),
                Expression(
                    Assignment {
                        lhs: Var {
                            name: "expected",
                        },
                        rhs: Binary {
                            op: Add,
                            lhs: Var {
                                name: "start",
                            },
                            rhs: Constant {
                                constant: 1,
                            },
                        },
                    },
                ),
                If(
                    Binary {
                        op: NotEqual,
                        lhs: Var {
                            name: "b",
                        },
                        rhs: Var {
                            name: "expected",
                        },
                    },
                    Compound(
                        [
                            Return(
                                Var {
                                    name: "expected",
                                },
                            ),
                        ],
                    ),
                    None,
                ),
                Expression(
                    Assignment {
                        lhs: Var {
                            name: "expected",
                        },
                        rhs: Binary {
                            op: Add,
                            lhs: Var {
                                name: "start",
                            },
                            rhs: Constant {
                                constant: 2,
                            },
                        },
                    },
                ),
                If(
                    Binary {
                        op: NotEqual,
                        lhs: Var {
                            name: "c",
                        },
                        rhs: Var {
                            name: "expected",
                        },
                    },
                    Compound(
                        [
                            Return(
                                Var {
                                    name: "expected",
                                },
                            ),
                        ],
                    ),
                    None,
                ),
                Expression(
                    Assignment {
                        lhs: Var {
                            name: "expected",
                        },
                        rhs: Binary {
                            op: Add,
                            lhs: Var {
                                name: "start",
                            },
                            rhs: Constant {
                                constant: 3,
                            },
                        },
                    },
                ),
                If(
                    Binary {
                        op: NotEqual,
                        lhs: Var {
                            name: "d",
                        },
                        rhs: Var {
                            name: "expected",
                        },
                    },
                    Compound(
                        [
                            Return(
                                Var {
                                    name: "expected",
                                },
                            ),
                        ],
                    ),
                    None,
                ),
                Expression(
                    Assignment {
                        lhs: Var {
                            name: "expected",
                        },
                        rhs: Binary {
                            op: Add,
                            lhs: Var {
                                name: "start",
                            },
                            rhs: Constant {
                                constant: 4,
                            },
                        },
                    },
                ),
                If(
                    Binary {
                        op: NotEqual,
                        lhs: Var {
                            name: "e",
                        },
                        rhs: Var {
                            name: "expected",
                        },
                    },
                    Compound(
                        [
                            Return(
                                Var {
                                    name: "expected",
                                },
                            ),
                        ],
                    ),
                    None,
                ),
                Expression(
                    Assignment {
                        lhs: Var {
                            name: "expected",
                        },
                        rhs: Binary {
                            op: Add,
                            lhs: Var {
                                name: "start",
                            },
                            rhs: Constant {
                                constant: 5,
                            },
                        },
                    },
                ),
                If(
                    Binary {
                        op: NotEqual,
                        lhs: Var {
                            name: "f",
                        },
                        rhs: Var {
                            name: "expected",
                        },
                    },
                    Compound(
                        [
                            Return(
                                Var {
                                    name: "expected",
                                },
                            ),
                        ],
                    ),
                    None,
                ),
                Expression(
                    Assignment {
                        lhs: Var {
                            name: "expected",
                        },
                        rhs: Binary {
                            op: Add,
                            lhs: Var {
                                name: "start",
                            },
                            rhs: Constant {
                                constant: 6,
                            },
                        },
                    },
                ),
                If(
                    Binary {
                        op: NotEqual,
                        lhs: Var {
                            name: "g",
                        },
                        rhs: Var {
                            name: "expected",
                        },
                    },
                    Compound(
                        [
                            Return(
                                Var {
                                    name: "expected",
                                },
                            ),
                        ],
                    ),
                    None,
                ),
                Expression(
                    Assignment {
                        lhs: Var {
                            name: "expected",
                        },
                        rhs: Binary {
                            op: Add,
                            lhs: Var {
                                name: "start",
                            },
                            rhs: Constant {
                                constant: 7,
                            },
                        },
                    },
                ),
                If(
                    Binary {
                        op: NotEqual,
                        lhs: Var {
                            name: "h",
                        },
                        rhs: Var {
                            name: "expected",
                        },
                    },
                    Compound(
                        [
                            Return(
                                Var {
                                    name: "expected",
                                },
                            ),
                        ],
                    ),
                    None,
                ),
                Expression(
                    Assignment {
                        lhs: Var {
                            name: "expected",
                        },
                        rhs: Binary {
                            op: Add,
                            lhs: Var {
                                name: "start",
                            },
                            rhs: Constant {
                                constant: 8,
                            },
                        },
                    },
                ),
                If(
                    Binary {
                        op: NotEqual,
                        lhs: Var {
                            name: "i",
                        },
                        rhs: Var {
                            name: "expected",
                        },
                    },
                    Compound(
                        [
                            Return(
                                Var {
                                    name: "expected",
                                },
                            ),
                        ],
                    ),
                    None,
                ),
                Expression(
                    Assignment {
                        lhs: Var {
                            name: "expected",
                        },
                        rhs: Binary {
                            op: Add,
                            lhs: Var {
                                name: "start",
                            },
                            rhs: Constant {
                                constant: 9,
                            },
                        },
                    },
                ),
                If(
                    Binary {
                        op: NotEqual,
                        lhs: Var {
                            name: "j",
                        },
                        rhs: Var {
                            name: "expected",
                        },
                    },
                    Compound(
                        [
                            Return(
                                Var {
                                    name: "expected",
                                },
                            ),
                        ],
                    ),
                    None,
                ),
                Expression(
                    Assignment {
                        lhs: Var {
                            name: "expected",
                        },
                        rhs: Binary {
                            op: Add,
                            lhs: Var {
                                name: "start",
                            },
                            rhs: Constant {
                                constant: 10,
                            },
                        },
                    },
                ),
                If(
                    Binary {
                        op: NotEqual,
                        lhs: Var {
                            name: "k",
                        },
                        rhs: Var {
                            name: "expected",
                        },
                    },
                    Compound(
                        [
                            Return(
                                Var {
                                    name: "expected",
                                },
                            ),
                        ],
                    ),
                    None,
                ),
                Expression(
                    Assignment {
                        lhs: Var {
                            name: "expected",
                        },
                        rhs: Binary {
                            op: Add,
                            lhs: Var {
                                name: "start",
                            },
                            rhs: Constant {
                                constant: 11,
                            },
                        },
                    },
                ),
                If(
                    Binary {
                        op: NotEqual,
                        lhs: Var {
                            name: "l",
                        },
                        rhs: Var {
                            name: "expected",
                        },
                    },
                    Compound(
                        [
                            Return(
                                Var {
                                    name: "expected",
                                },
                            ),
                        ],
                    ),
                    None,
                ),
                Return(
                    Constant {
                        constant: 0,
                    },
                ),
            ],
        },
    ],
}