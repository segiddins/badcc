Program {
    static_variables: [],
    functions: [
        Function {
            identifier: "main",
            global: true,
            params: [],
            instructions: [
                Copy {
                    src: 1.0,
                    dst: Var("a.1", Double),
                },
                Copy {
                    src: 1.0,
                    dst: Var("b.2", Double),
                },
                Copy {
                    src: 1.0,
                    dst: Var("c.3", Double),
                },
                Copy {
                    src: 1.0,
                    dst: Var("d.4", Double),
                },
                Binary {
                    op: Equals,
                    lhs: Var("a.1", Double),
                    rhs: Var("b.2", Double),
                    dst: Var("main.tmp.2", Double),
                },
                JumpIfZero(
                    Var("main.tmp.2", Double),
                    "main.1.false",
                ),
                Binary {
                    op: Equals,
                    lhs: Var("a.1", Double),
                    rhs: Var("c.3", Double),
                    dst: Var("main.tmp.3", Double),
                },
                JumpIfZero(
                    Var("main.tmp.3", Double),
                    "main.1.false",
                ),
                Copy {
                    src: 1,
                    dst: Var("main.tmp.1", Int),
                },
                Jump(
                    "main.1.end",
                ),
                Label(
                    "main.1.false",
                ),
                Copy {
                    src: 0,
                    dst: Var("main.tmp.1", Int),
                },
                Label(
                    "main.1.end",
                ),
                JumpIfZero(
                    Var("main.tmp.1", Int),
                    "main.2.false",
                ),
                Binary {
                    op: Equals,
                    lhs: Var("a.1", Double),
                    rhs: Var("d.4", Double),
                    dst: Var("main.tmp.4", Double),
                },
                JumpIfZero(
                    Var("main.tmp.4", Double),
                    "main.2.false",
                ),
                Copy {
                    src: 1,
                    dst: Var("main.tmp.0", Int),
                },
                Jump(
                    "main.2.end",
                ),
                Label(
                    "main.2.false",
                ),
                Copy {
                    src: 0,
                    dst: Var("main.tmp.0", Int),
                },
                Label(
                    "main.2.end",
                ),
                Unary {
                    op: Not,
                    src: Var("main.tmp.0", Int),
                    dst: Var("main.tmp.5", Int),
                },
                JumpIfZero(
                    Var("main.tmp.5", Int),
                    "main.0.true",
                ),
                Return(
                    1,
                ),
                Jump(
                    "main.0.end",
                ),
                Label(
                    "main.0.true",
                ),
                Label(
                    "main.0.end",
                ),
                Binary {
                    op: Add,
                    lhs: Var("a.1", Double),
                    rhs: Var("b.2", Double),
                    dst: Var("main.tmp.6", Double),
                },
                Binary {
                    op: Add,
                    lhs: Var("main.tmp.6", Double),
                    rhs: Var("c.3", Double),
                    dst: Var("main.tmp.7", Double),
                },
                Binary {
                    op: Add,
                    lhs: Var("main.tmp.7", Double),
                    rhs: Var("d.4", Double),
                    dst: Var("main.tmp.8", Double),
                },
                Binary {
                    op: NotEqual,
                    lhs: Var("main.tmp.8", Double),
                    rhs: 4.0,
                    dst: Var("main.tmp.9", Double),
                },
                JumpIfZero(
                    Var("main.tmp.9", Double),
                    "main.3.true",
                ),
                Return(
                    2,
                ),
                Jump(
                    "main.3.end",
                ),
                Label(
                    "main.3.true",
                ),
                Label(
                    "main.3.end",
                ),
                Copy {
                    src: 0.125,
                    dst: Var("e.5", Double),
                },
                Copy {
                    src: 0.125,
                    dst: Var("f.6", Double),
                },
                Copy {
                    src: 0.125,
                    dst: Var("g.7", Double),
                },
                Copy {
                    src: 0.125,
                    dst: Var("h.8", Double),
                },
                Binary {
                    op: Equals,
                    lhs: Var("e.5", Double),
                    rhs: Var("f.6", Double),
                    dst: Var("main.tmp.12", Double),
                },
                JumpIfZero(
                    Var("main.tmp.12", Double),
                    "main.5.false",
                ),
                Binary {
                    op: Equals,
                    lhs: Var("e.5", Double),
                    rhs: Var("g.7", Double),
                    dst: Var("main.tmp.13", Double),
                },
                JumpIfZero(
                    Var("main.tmp.13", Double),
                    "main.5.false",
                ),
                Copy {
                    src: 1,
                    dst: Var("main.tmp.11", Int),
                },
                Jump(
                    "main.5.end",
                ),
                Label(
                    "main.5.false",
                ),
                Copy {
                    src: 0,
                    dst: Var("main.tmp.11", Int),
                },
                Label(
                    "main.5.end",
                ),
                JumpIfZero(
                    Var("main.tmp.11", Int),
                    "main.6.false",
                ),
                Binary {
                    op: Equals,
                    lhs: Var("e.5", Double),
                    rhs: Var("h.8", Double),
                    dst: Var("main.tmp.14", Double),
                },
                JumpIfZero(
                    Var("main.tmp.14", Double),
                    "main.6.false",
                ),
                Copy {
                    src: 1,
                    dst: Var("main.tmp.10", Int),
                },
                Jump(
                    "main.6.end",
                ),
                Label(
                    "main.6.false",
                ),
                Copy {
                    src: 0,
                    dst: Var("main.tmp.10", Int),
                },
                Label(
                    "main.6.end",
                ),
                Unary {
                    op: Not,
                    src: Var("main.tmp.10", Int),
                    dst: Var("main.tmp.15", Int),
                },
                JumpIfZero(
                    Var("main.tmp.15", Int),
                    "main.4.true",
                ),
                Return(
                    3,
                ),
                Jump(
                    "main.4.end",
                ),
                Label(
                    "main.4.true",
                ),
                Label(
                    "main.4.end",
                ),
                Binary {
                    op: Add,
                    lhs: Var("e.5", Double),
                    rhs: Var("f.6", Double),
                    dst: Var("main.tmp.16", Double),
                },
                Binary {
                    op: Add,
                    lhs: Var("main.tmp.16", Double),
                    rhs: Var("g.7", Double),
                    dst: Var("main.tmp.17", Double),
                },
                Binary {
                    op: Add,
                    lhs: Var("main.tmp.17", Double),
                    rhs: Var("h.8", Double),
                    dst: Var("main.tmp.18", Double),
                },
                Binary {
                    op: NotEqual,
                    lhs: Var("main.tmp.18", Double),
                    rhs: 0.5,
                    dst: Var("main.tmp.19", Double),
                },
                JumpIfZero(
                    Var("main.tmp.19", Double),
                    "main.7.true",
                ),
                Return(
                    4,
                ),
                Jump(
                    "main.7.end",
                ),
                Label(
                    "main.7.true",
                ),
                Label(
                    "main.7.end",
                ),
                Return(
                    0,
                ),
                Return(
                    0,
                ),
            ],
        },
    ],
}