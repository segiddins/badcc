Program {
    declarations: [
        FunctionDeclaration {
            identifier: "check_arguments",
            params: [
                (
                    Double,
                    "a",
                    SourceSpan {
                        offset: SourceOffset(
                            28,
                        ),
                        length: 1,
                    },
                ),
                (
                    Double,
                    "b",
                    SourceSpan {
                        offset: SourceOffset(
                            38,
                        ),
                        length: 1,
                    },
                ),
                (
                    Double,
                    "c",
                    SourceSpan {
                        offset: SourceOffset(
                            48,
                        ),
                        length: 1,
                    },
                ),
                (
                    Double,
                    "d",
                    SourceSpan {
                        offset: SourceOffset(
                            58,
                        ),
                        length: 1,
                    },
                ),
                (
                    Double,
                    "e",
                    SourceSpan {
                        offset: SourceOffset(
                            68,
                        ),
                        length: 1,
                    },
                ),
                (
                    Double,
                    "f",
                    SourceSpan {
                        offset: SourceOffset(
                            78,
                        ),
                        length: 1,
                    },
                ),
                (
                    Double,
                    "g",
                    SourceSpan {
                        offset: SourceOffset(
                            88,
                        ),
                        length: 1,
                    },
                ),
                (
                    Double,
                    "h",
                    SourceSpan {
                        offset: SourceOffset(
                            98,
                        ),
                        length: 1,
                    },
                ),
            ],
            ret: Int,
        },
        FunctionDeclaration {
            identifier: "main",
            params: [],
            ret: Int,
            body: [
                Return(
                    FunctionCall {
                        function: Var("check_arguments"),
                        params: [
                            Constant(1.0),
                            Constant(2.0),
                            Constant(3.0),
                            Constant(4.0),
                            Unary {
                                op: Minus,
                                expr: Constant(1.0),
                            },
                            Unary {
                                op: Minus,
                                expr: Constant(2.0),
                            },
                            Unary {
                                op: Minus,
                                expr: Constant(3.0),
                            },
                            Unary {
                                op: Minus,
                                expr: Constant(4.0),
                            },
                        ],
                    },
                ),
            ],
        },
        FunctionDeclaration {
            identifier: "check_arguments",
            params: [
                (
                    Double,
                    "a",
                    SourceSpan {
                        offset: SourceOffset(
                            220,
                        ),
                        length: 1,
                    },
                ),
                (
                    Double,
                    "b",
                    SourceSpan {
                        offset: SourceOffset(
                            230,
                        ),
                        length: 1,
                    },
                ),
                (
                    Double,
                    "c",
                    SourceSpan {
                        offset: SourceOffset(
                            240,
                        ),
                        length: 1,
                    },
                ),
                (
                    Double,
                    "d",
                    SourceSpan {
                        offset: SourceOffset(
                            250,
                        ),
                        length: 1,
                    },
                ),
                (
                    Double,
                    "e",
                    SourceSpan {
                        offset: SourceOffset(
                            260,
                        ),
                        length: 1,
                    },
                ),
                (
                    Double,
                    "f",
                    SourceSpan {
                        offset: SourceOffset(
                            270,
                        ),
                        length: 1,
                    },
                ),
                (
                    Double,
                    "g",
                    SourceSpan {
                        offset: SourceOffset(
                            280,
                        ),
                        length: 1,
                    },
                ),
                (
                    Double,
                    "h",
                    SourceSpan {
                        offset: SourceOffset(
                            290,
                        ),
                        length: 1,
                    },
                ),
            ],
            ret: Int,
            body: [
                If(
                    Binary {
                        op: NotEqual,
                        lhs: Var("a"),
                        rhs: Constant(1.0),
                    },
                    Compound(
                        [
                            Return(
                                Constant(1),
                            ),
                        ],
                    ),
                    None,
                ),
                If(
                    Binary {
                        op: NotEqual,
                        lhs: Var("b"),
                        rhs: Constant(2.0),
                    },
                    Compound(
                        [
                            Return(
                                Constant(2),
                            ),
                        ],
                    ),
                    None,
                ),
                If(
                    Binary {
                        op: NotEqual,
                        lhs: Var("c"),
                        rhs: Constant(3.0),
                    },
                    Compound(
                        [
                            Return(
                                Constant(3),
                            ),
                        ],
                    ),
                    None,
                ),
                If(
                    Binary {
                        op: NotEqual,
                        lhs: Var("d"),
                        rhs: Constant(4.0),
                    },
                    Compound(
                        [
                            Return(
                                Constant(4),
                            ),
                        ],
                    ),
                    None,
                ),
                If(
                    Binary {
                        op: NotEqual,
                        lhs: Var("e"),
                        rhs: Unary {
                            op: Minus,
                            expr: Constant(1.0),
                        },
                    },
                    Compound(
                        [
                            Return(
                                Constant(5),
                            ),
                        ],
                    ),
                    None,
                ),
                If(
                    Binary {
                        op: NotEqual,
                        lhs: Var("f"),
                        rhs: Unary {
                            op: Minus,
                            expr: Constant(2.0),
                        },
                    },
                    Compound(
                        [
                            Return(
                                Constant(6),
                            ),
                        ],
                    ),
                    None,
                ),
                If(
                    Binary {
                        op: NotEqual,
                        lhs: Var("g"),
                        rhs: Unary {
                            op: Minus,
                            expr: Constant(3.0),
                        },
                    },
                    Compound(
                        [
                            Return(
                                Constant(7),
                            ),
                        ],
                    ),
                    None,
                ),
                If(
                    Binary {
                        op: NotEqual,
                        lhs: Var("h"),
                        rhs: Unary {
                            op: Minus,
                            expr: Constant(4.0),
                        },
                    },
                    Compound(
                        [
                            Return(
                                Constant(8),
                            ),
                        ],
                    ),
                    None,
                ),
                Return(
                    Constant(0),
                ),
            ],
        },
    ],
}