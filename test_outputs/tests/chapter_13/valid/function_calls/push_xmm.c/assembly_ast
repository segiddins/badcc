Program {
    definitions: [
        Function {
            name: "callee",
            global: true,
            instructions: [
                AllocateStack(
                    192,
                ),
                Move {
                    asm_type: Double,
                    source: Register(XMM0, Eight),
                    destination: Stack(16, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Register(XMM1, Eight),
                    destination: Stack(24, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Register(XMM2, Eight),
                    destination: Stack(32, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Register(XMM3, Eight),
                    destination: Stack(40, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Register(XMM4, Eight),
                    destination: Stack(48, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Register(XMM5, Eight),
                    destination: Stack(56, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Register(XMM6, Eight),
                    destination: Stack(64, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Register(XMM7, Eight),
                    destination: Stack(72, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(-16, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Register(XMM14, Eight),
                    destination: Stack(80, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(-24, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Register(XMM14, Eight),
                    destination: Stack(88, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(-32, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Register(XMM14, Eight),
                    destination: Stack(96, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Immediate(0, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(16, Eight),
                    destination: Register(XMM15, Eight),
                },
                Cmp(
                    Double,
                    Register(XMM14, Eight),
                    Register(XMM15, Eight),
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(0, Eight),
                    destination: Stack(104, Eight),
                },
                SetCC(
                    NE,
                    Stack(104, Eight),
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(0, Four),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(104, Eight),
                    destination: Register(XMM15, Eight),
                },
                Cmp(
                    Double,
                    Register(XMM14, Eight),
                    Register(XMM15, Eight),
                ),
                JmpCC(
                    E,
                    "callee.0.true",
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(1, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "callee.0.end",
                ),
                Label(
                    "callee.0.true",
                ),
                Label(
                    "callee.0.end",
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(4607182418800017408, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(24, Eight),
                    destination: Register(XMM15, Eight),
                },
                Cmp(
                    Double,
                    Register(XMM14, Eight),
                    Register(XMM15, Eight),
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(0, Eight),
                    destination: Stack(112, Eight),
                },
                SetCC(
                    NE,
                    Stack(112, Eight),
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(0, Four),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(112, Eight),
                    destination: Register(XMM15, Eight),
                },
                Cmp(
                    Double,
                    Register(XMM14, Eight),
                    Register(XMM15, Eight),
                ),
                JmpCC(
                    E,
                    "callee.1.true",
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(2, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "callee.1.end",
                ),
                Label(
                    "callee.1.true",
                ),
                Label(
                    "callee.1.end",
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(4611686018427387904, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(32, Eight),
                    destination: Register(XMM15, Eight),
                },
                Cmp(
                    Double,
                    Register(XMM14, Eight),
                    Register(XMM15, Eight),
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(0, Eight),
                    destination: Stack(120, Eight),
                },
                SetCC(
                    NE,
                    Stack(120, Eight),
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(0, Four),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(120, Eight),
                    destination: Register(XMM15, Eight),
                },
                Cmp(
                    Double,
                    Register(XMM14, Eight),
                    Register(XMM15, Eight),
                ),
                JmpCC(
                    E,
                    "callee.2.true",
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(3, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "callee.2.end",
                ),
                Label(
                    "callee.2.true",
                ),
                Label(
                    "callee.2.end",
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(4613937818241073152, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(40, Eight),
                    destination: Register(XMM15, Eight),
                },
                Cmp(
                    Double,
                    Register(XMM14, Eight),
                    Register(XMM15, Eight),
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(0, Eight),
                    destination: Stack(128, Eight),
                },
                SetCC(
                    NE,
                    Stack(128, Eight),
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(0, Four),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(128, Eight),
                    destination: Register(XMM15, Eight),
                },
                Cmp(
                    Double,
                    Register(XMM14, Eight),
                    Register(XMM15, Eight),
                ),
                JmpCC(
                    E,
                    "callee.3.true",
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(4, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "callee.3.end",
                ),
                Label(
                    "callee.3.true",
                ),
                Label(
                    "callee.3.end",
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(4616189618054758400, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(48, Eight),
                    destination: Register(XMM15, Eight),
                },
                Cmp(
                    Double,
                    Register(XMM14, Eight),
                    Register(XMM15, Eight),
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(0, Eight),
                    destination: Stack(136, Eight),
                },
                SetCC(
                    NE,
                    Stack(136, Eight),
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(0, Four),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(136, Eight),
                    destination: Register(XMM15, Eight),
                },
                Cmp(
                    Double,
                    Register(XMM14, Eight),
                    Register(XMM15, Eight),
                ),
                JmpCC(
                    E,
                    "callee.4.true",
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(5, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "callee.4.end",
                ),
                Label(
                    "callee.4.true",
                ),
                Label(
                    "callee.4.end",
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(4617315517961601024, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(56, Eight),
                    destination: Register(XMM15, Eight),
                },
                Cmp(
                    Double,
                    Register(XMM14, Eight),
                    Register(XMM15, Eight),
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(0, Eight),
                    destination: Stack(144, Eight),
                },
                SetCC(
                    NE,
                    Stack(144, Eight),
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(0, Four),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(144, Eight),
                    destination: Register(XMM15, Eight),
                },
                Cmp(
                    Double,
                    Register(XMM14, Eight),
                    Register(XMM15, Eight),
                ),
                JmpCC(
                    E,
                    "callee.5.true",
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(6, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "callee.5.end",
                ),
                Label(
                    "callee.5.true",
                ),
                Label(
                    "callee.5.end",
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(4618441417868443648, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(64, Eight),
                    destination: Register(XMM15, Eight),
                },
                Cmp(
                    Double,
                    Register(XMM14, Eight),
                    Register(XMM15, Eight),
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(0, Eight),
                    destination: Stack(152, Eight),
                },
                SetCC(
                    NE,
                    Stack(152, Eight),
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(0, Four),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(152, Eight),
                    destination: Register(XMM15, Eight),
                },
                Cmp(
                    Double,
                    Register(XMM14, Eight),
                    Register(XMM15, Eight),
                ),
                JmpCC(
                    E,
                    "callee.6.true",
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(7, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "callee.6.end",
                ),
                Label(
                    "callee.6.true",
                ),
                Label(
                    "callee.6.end",
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(4619567317775286272, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(72, Eight),
                    destination: Register(XMM15, Eight),
                },
                Cmp(
                    Double,
                    Register(XMM14, Eight),
                    Register(XMM15, Eight),
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(0, Eight),
                    destination: Stack(160, Eight),
                },
                SetCC(
                    NE,
                    Stack(160, Eight),
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(0, Four),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(160, Eight),
                    destination: Register(XMM15, Eight),
                },
                Cmp(
                    Double,
                    Register(XMM14, Eight),
                    Register(XMM15, Eight),
                ),
                JmpCC(
                    E,
                    "callee.7.true",
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(8, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "callee.7.end",
                ),
                Label(
                    "callee.7.true",
                ),
                Label(
                    "callee.7.end",
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(4620693217682128896, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(80, Eight),
                    destination: Register(XMM15, Eight),
                },
                Cmp(
                    Double,
                    Register(XMM14, Eight),
                    Register(XMM15, Eight),
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(0, Eight),
                    destination: Stack(168, Eight),
                },
                SetCC(
                    NE,
                    Stack(168, Eight),
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(0, Four),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(168, Eight),
                    destination: Register(XMM15, Eight),
                },
                Cmp(
                    Double,
                    Register(XMM14, Eight),
                    Register(XMM15, Eight),
                ),
                JmpCC(
                    E,
                    "callee.8.true",
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(9, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "callee.8.end",
                ),
                Label(
                    "callee.8.true",
                ),
                Label(
                    "callee.8.end",
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(4621256167635550208, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(88, Eight),
                    destination: Register(XMM15, Eight),
                },
                Cmp(
                    Double,
                    Register(XMM14, Eight),
                    Register(XMM15, Eight),
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(0, Eight),
                    destination: Stack(176, Eight),
                },
                SetCC(
                    NE,
                    Stack(176, Eight),
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(0, Four),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(176, Eight),
                    destination: Register(XMM15, Eight),
                },
                Cmp(
                    Double,
                    Register(XMM14, Eight),
                    Register(XMM15, Eight),
                ),
                JmpCC(
                    E,
                    "callee.9.true",
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(10, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "callee.9.end",
                ),
                Label(
                    "callee.9.true",
                ),
                Label(
                    "callee.9.end",
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(4621819117588971520, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(96, Eight),
                    destination: Register(XMM15, Eight),
                },
                Cmp(
                    Double,
                    Register(XMM14, Eight),
                    Register(XMM15, Eight),
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(0, Eight),
                    destination: Stack(184, Eight),
                },
                SetCC(
                    NE,
                    Stack(184, Eight),
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(0, Four),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(184, Eight),
                    destination: Register(XMM15, Eight),
                },
                Cmp(
                    Double,
                    Register(XMM14, Eight),
                    Register(XMM15, Eight),
                ),
                JmpCC(
                    E,
                    "callee.10.true",
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(11, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "callee.10.end",
                ),
                Label(
                    "callee.10.true",
                ),
                Label(
                    "callee.10.end",
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(0, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Move {
                    asm_type: Longword,
                    source: Immediate(0, Four),
                    destination: Register(AX, Four),
                },
                Ret,
            ],
        },
        Function {
            name: "target",
            global: true,
            instructions: [
                AllocateStack(
                    112,
                ),
                Move {
                    asm_type: Longword,
                    source: Register(DI, Four),
                    destination: Stack(12, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(SI, Four),
                    destination: Stack(16, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(DX, Four),
                    destination: Stack(20, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(CX, Four),
                    destination: Stack(24, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R8, Four),
                    destination: Stack(28, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(28, Four),
                    destination: Register(R10, Four),
                },
                Cvtsi2sd {
                    src_type: Longword,
                    src: Register(R10, Four),
                    dst: Register(XMM15, Eight),
                },
                Move {
                    asm_type: Longword,
                    source: Register(XMM15, Eight),
                    destination: Stack(36, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(36, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Register(XMM14, Eight),
                    destination: Stack(44, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(44, Eight),
                    destination: Register(XMM15, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Immediate(4607182418800017408, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM14, Eight),
                },
                Binary(
                    Double,
                    Add,
                    Register(XMM14, Eight),
                    Register(XMM15, Eight),
                ),
                Move {
                    asm_type: Double,
                    source: Register(XMM15, Eight),
                    destination: Stack(44, Eight),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(24, Four),
                    destination: Register(R10, Four),
                },
                Cvtsi2sd {
                    src_type: Longword,
                    src: Register(R10, Four),
                    dst: Register(XMM15, Eight),
                },
                Move {
                    asm_type: Longword,
                    source: Register(XMM15, Eight),
                    destination: Stack(52, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(52, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Register(XMM14, Eight),
                    destination: Stack(60, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(60, Eight),
                    destination: Register(XMM15, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Immediate(4613937818241073152, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM14, Eight),
                },
                Binary(
                    Double,
                    Add,
                    Register(XMM14, Eight),
                    Register(XMM15, Eight),
                ),
                Move {
                    asm_type: Double,
                    source: Register(XMM15, Eight),
                    destination: Stack(60, Eight),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(20, Four),
                    destination: Register(R10, Four),
                },
                Cvtsi2sd {
                    src_type: Longword,
                    src: Register(R10, Four),
                    dst: Register(XMM15, Eight),
                },
                Move {
                    asm_type: Longword,
                    source: Register(XMM15, Eight),
                    destination: Stack(68, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(68, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Register(XMM14, Eight),
                    destination: Stack(76, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(76, Eight),
                    destination: Register(XMM15, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Immediate(4617315517961601024, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM14, Eight),
                },
                Binary(
                    Double,
                    Add,
                    Register(XMM14, Eight),
                    Register(XMM15, Eight),
                ),
                Move {
                    asm_type: Double,
                    source: Register(XMM15, Eight),
                    destination: Stack(76, Eight),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(16, Four),
                    destination: Register(R10, Four),
                },
                Cvtsi2sd {
                    src_type: Longword,
                    src: Register(R10, Four),
                    dst: Register(XMM15, Eight),
                },
                Move {
                    asm_type: Longword,
                    source: Register(XMM15, Eight),
                    destination: Stack(84, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(84, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Register(XMM14, Eight),
                    destination: Stack(92, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(92, Eight),
                    destination: Register(XMM15, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Immediate(4619567317775286272, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM14, Eight),
                },
                Binary(
                    Double,
                    Add,
                    Register(XMM14, Eight),
                    Register(XMM15, Eight),
                ),
                Move {
                    asm_type: Double,
                    source: Register(XMM15, Eight),
                    destination: Stack(92, Eight),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(12, Four),
                    destination: Register(R10, Four),
                },
                Cvtsi2sd {
                    src_type: Longword,
                    src: Register(R10, Four),
                    dst: Register(XMM15, Eight),
                },
                Move {
                    asm_type: Longword,
                    source: Register(XMM15, Eight),
                    destination: Stack(100, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(100, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Register(XMM14, Eight),
                    destination: Stack(108, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(108, Eight),
                    destination: Register(XMM15, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Immediate(4621256167635550208, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM14, Eight),
                },
                Binary(
                    Double,
                    Add,
                    Register(XMM14, Eight),
                    Register(XMM15, Eight),
                ),
                Move {
                    asm_type: Double,
                    source: Register(XMM15, Eight),
                    destination: Stack(108, Eight),
                },
                AllocateStack(
                    8,
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(0, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM0, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Immediate(4607182418800017408, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM1, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Immediate(4611686018427387904, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM2, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Immediate(4613937818241073152, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM3, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Immediate(4616189618054758400, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM4, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Immediate(4617315517961601024, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM5, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(44, Eight),
                    destination: Register(XMM6, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(60, Eight),
                    destination: Register(XMM7, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(108, Eight),
                    destination: Register(AX, Eight),
                },
                Push(
                    Register(AX, Eight),
                ),
                Move {
                    asm_type: Double,
                    source: Stack(92, Eight),
                    destination: Register(AX, Eight),
                },
                Push(
                    Register(AX, Eight),
                ),
                Move {
                    asm_type: Double,
                    source: Stack(76, Eight),
                    destination: Register(AX, Eight),
                },
                Push(
                    Register(AX, Eight),
                ),
                Call(
                    "callee",
                ),
                DeallocateStack(
                    32,
                ),
                Move {
                    asm_type: Longword,
                    source: Register(AX, Four),
                    destination: Stack(112, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(112, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Move {
                    asm_type: Longword,
                    source: Immediate(0, Four),
                    destination: Register(AX, Four),
                },
                Ret,
            ],
        },
        Function {
            name: "main",
            global: true,
            instructions: [
                AllocateStack(
                    16,
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(1, Four),
                    destination: Register(DI, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Immediate(2, Four),
                    destination: Register(SI, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Immediate(3, Four),
                    destination: Register(DX, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Immediate(4, Four),
                    destination: Register(CX, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Immediate(5, Four),
                    destination: Register(R8, Four),
                },
                Call(
                    "target",
                ),
                Move {
                    asm_type: Longword,
                    source: Register(AX, Four),
                    destination: Stack(12, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(12, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Move {
                    asm_type: Longword,
                    source: Immediate(0, Four),
                    destination: Register(AX, Four),
                },
                Ret,
            ],
        },
    ],
    static_variables: [],
    static_constants: [],
}