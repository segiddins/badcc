Program {
    static_variables: [],
    functions: [
        Function {
            identifier: "callee",
            global: true,
            params: [
                Var("a.1", Double),
                Var("b.2", Double),
                Var("c.3", Double),
                Var("d.4", Double),
                Var("e.5", Double),
                Var("f.6", Double),
                Var("g.7", Double),
                Var("h.8", Double),
                Var("i.9", Double),
                Var("j.10", Double),
                Var("k.11", Double),
            ],
            instructions: [
                Binary {
                    op: NotEqual,
                    lhs: Var("a.1", Double),
                    rhs: 0.0,
                    dst: Var("callee.tmp.0", Double),
                },
                JumpIfZero(
                    Var("callee.tmp.0", Double),
                    "callee.0.true",
                ),
                Return(
                    1,
                ),
                Jump(
                    "callee.0.end",
                ),
                Label(
                    "callee.0.true",
                ),
                Label(
                    "callee.0.end",
                ),
                Binary {
                    op: NotEqual,
                    lhs: Var("b.2", Double),
                    rhs: 1.0,
                    dst: Var("callee.tmp.1", Double),
                },
                JumpIfZero(
                    Var("callee.tmp.1", Double),
                    "callee.1.true",
                ),
                Return(
                    2,
                ),
                Jump(
                    "callee.1.end",
                ),
                Label(
                    "callee.1.true",
                ),
                Label(
                    "callee.1.end",
                ),
                Binary {
                    op: NotEqual,
                    lhs: Var("c.3", Double),
                    rhs: 2.0,
                    dst: Var("callee.tmp.2", Double),
                },
                JumpIfZero(
                    Var("callee.tmp.2", Double),
                    "callee.2.true",
                ),
                Return(
                    3,
                ),
                Jump(
                    "callee.2.end",
                ),
                Label(
                    "callee.2.true",
                ),
                Label(
                    "callee.2.end",
                ),
                Binary {
                    op: NotEqual,
                    lhs: Var("d.4", Double),
                    rhs: 3.0,
                    dst: Var("callee.tmp.3", Double),
                },
                JumpIfZero(
                    Var("callee.tmp.3", Double),
                    "callee.3.true",
                ),
                Return(
                    4,
                ),
                Jump(
                    "callee.3.end",
                ),
                Label(
                    "callee.3.true",
                ),
                Label(
                    "callee.3.end",
                ),
                Binary {
                    op: NotEqual,
                    lhs: Var("e.5", Double),
                    rhs: 4.0,
                    dst: Var("callee.tmp.4", Double),
                },
                JumpIfZero(
                    Var("callee.tmp.4", Double),
                    "callee.4.true",
                ),
                Return(
                    5,
                ),
                Jump(
                    "callee.4.end",
                ),
                Label(
                    "callee.4.true",
                ),
                Label(
                    "callee.4.end",
                ),
                Binary {
                    op: NotEqual,
                    lhs: Var("f.6", Double),
                    rhs: 5.0,
                    dst: Var("callee.tmp.5", Double),
                },
                JumpIfZero(
                    Var("callee.tmp.5", Double),
                    "callee.5.true",
                ),
                Return(
                    6,
                ),
                Jump(
                    "callee.5.end",
                ),
                Label(
                    "callee.5.true",
                ),
                Label(
                    "callee.5.end",
                ),
                Binary {
                    op: NotEqual,
                    lhs: Var("g.7", Double),
                    rhs: 6.0,
                    dst: Var("callee.tmp.6", Double),
                },
                JumpIfZero(
                    Var("callee.tmp.6", Double),
                    "callee.6.true",
                ),
                Return(
                    7,
                ),
                Jump(
                    "callee.6.end",
                ),
                Label(
                    "callee.6.true",
                ),
                Label(
                    "callee.6.end",
                ),
                Binary {
                    op: NotEqual,
                    lhs: Var("h.8", Double),
                    rhs: 7.0,
                    dst: Var("callee.tmp.7", Double),
                },
                JumpIfZero(
                    Var("callee.tmp.7", Double),
                    "callee.7.true",
                ),
                Return(
                    8,
                ),
                Jump(
                    "callee.7.end",
                ),
                Label(
                    "callee.7.true",
                ),
                Label(
                    "callee.7.end",
                ),
                Binary {
                    op: NotEqual,
                    lhs: Var("i.9", Double),
                    rhs: 8.0,
                    dst: Var("callee.tmp.8", Double),
                },
                JumpIfZero(
                    Var("callee.tmp.8", Double),
                    "callee.8.true",
                ),
                Return(
                    9,
                ),
                Jump(
                    "callee.8.end",
                ),
                Label(
                    "callee.8.true",
                ),
                Label(
                    "callee.8.end",
                ),
                Binary {
                    op: NotEqual,
                    lhs: Var("j.10", Double),
                    rhs: 9.0,
                    dst: Var("callee.tmp.9", Double),
                },
                JumpIfZero(
                    Var("callee.tmp.9", Double),
                    "callee.9.true",
                ),
                Return(
                    10,
                ),
                Jump(
                    "callee.9.end",
                ),
                Label(
                    "callee.9.true",
                ),
                Label(
                    "callee.9.end",
                ),
                Binary {
                    op: NotEqual,
                    lhs: Var("k.11", Double),
                    rhs: 10.0,
                    dst: Var("callee.tmp.10", Double),
                },
                JumpIfZero(
                    Var("callee.tmp.10", Double),
                    "callee.10.true",
                ),
                Return(
                    11,
                ),
                Jump(
                    "callee.10.end",
                ),
                Label(
                    "callee.10.true",
                ),
                Label(
                    "callee.10.end",
                ),
                Return(
                    0,
                ),
                Return(
                    0,
                ),
            ],
        },
        Function {
            identifier: "target",
            global: true,
            params: [
                Var("a.13", Int),
                Var("b.14", Int),
                Var("c.15", Int),
                Var("d.16", Int),
                Var("e.17", Int),
            ],
            instructions: [
                IntToDouble {
                    src: Var("e.17", Int),
                    dst: Var("target.tmp.0", Double),
                },
                Binary {
                    op: Add,
                    lhs: Var("target.tmp.0", Double),
                    rhs: 1.0,
                    dst: Var("target.tmp.1", Double),
                },
                IntToDouble {
                    src: Var("d.16", Int),
                    dst: Var("target.tmp.2", Double),
                },
                Binary {
                    op: Add,
                    lhs: Var("target.tmp.2", Double),
                    rhs: 3.0,
                    dst: Var("target.tmp.3", Double),
                },
                IntToDouble {
                    src: Var("c.15", Int),
                    dst: Var("target.tmp.4", Double),
                },
                Binary {
                    op: Add,
                    lhs: Var("target.tmp.4", Double),
                    rhs: 5.0,
                    dst: Var("target.tmp.5", Double),
                },
                IntToDouble {
                    src: Var("b.14", Int),
                    dst: Var("target.tmp.6", Double),
                },
                Binary {
                    op: Add,
                    lhs: Var("target.tmp.6", Double),
                    rhs: 7.0,
                    dst: Var("target.tmp.7", Double),
                },
                IntToDouble {
                    src: Var("a.13", Int),
                    dst: Var("target.tmp.8", Double),
                },
                Binary {
                    op: Add,
                    lhs: Var("target.tmp.8", Double),
                    rhs: 9.0,
                    dst: Var("target.tmp.9", Double),
                },
                Call(
                    "callee",
                    [
                        0.0,
                        1.0,
                        2.0,
                        3.0,
                        4.0,
                        5.0,
                        Var("target.tmp.1", Double),
                        Var("target.tmp.3", Double),
                        Var("target.tmp.5", Double),
                        Var("target.tmp.7", Double),
                        Var("target.tmp.9", Double),
                    ],
                    Var("target.tmp.10", Int),
                ),
                Return(
                    Var("target.tmp.10", Int),
                ),
                Return(
                    0,
                ),
            ],
        },
        Function {
            identifier: "main",
            global: true,
            params: [],
            instructions: [
                Call(
                    "target",
                    [
                        1,
                        2,
                        3,
                        4,
                        5,
                    ],
                    Var("main.tmp.0", Int),
                ),
                Return(
                    Var("main.tmp.0", Int),
                ),
                Return(
                    0,
                ),
            ],
        },
    ],
}