Program {
    static_variables: [],
    functions: [
        Function {
            identifier: "check_arguments",
            global: true,
            params: [
                Var("d1.1", Double),
                Var("d2.2", Double),
                Var("i1.3", Int),
                Var("d3.4", Double),
                Var("d4.5", Double),
                Var("i2.6", Int),
                Var("i3.7", Int),
                Var("i4.8", Int),
                Var("d5.9", Double),
                Var("d6.10", Double),
                Var("d7.11", Double),
                Var("i5.12", Int),
                Var("d8.13", Double),
            ],
            instructions: [
                Binary {
                    op: NotEqual,
                    lhs: Var("d1.1", Double),
                    rhs: 1.0,
                    dst: Var("check_arguments.tmp.0", Double),
                },
                JumpIfZero(
                    Var("check_arguments.tmp.0", Double),
                    "check_arguments.0.true",
                ),
                Return(
                    1,
                ),
                Jump(
                    "check_arguments.0.end",
                ),
                Label(
                    "check_arguments.0.true",
                ),
                Label(
                    "check_arguments.0.end",
                ),
                Binary {
                    op: NotEqual,
                    lhs: Var("d2.2", Double),
                    rhs: 2.0,
                    dst: Var("check_arguments.tmp.1", Double),
                },
                JumpIfZero(
                    Var("check_arguments.tmp.1", Double),
                    "check_arguments.1.true",
                ),
                Return(
                    2,
                ),
                Jump(
                    "check_arguments.1.end",
                ),
                Label(
                    "check_arguments.1.true",
                ),
                Label(
                    "check_arguments.1.end",
                ),
                Binary {
                    op: NotEqual,
                    lhs: Var("d3.4", Double),
                    rhs: 3.0,
                    dst: Var("check_arguments.tmp.2", Double),
                },
                JumpIfZero(
                    Var("check_arguments.tmp.2", Double),
                    "check_arguments.2.true",
                ),
                Return(
                    3,
                ),
                Jump(
                    "check_arguments.2.end",
                ),
                Label(
                    "check_arguments.2.true",
                ),
                Label(
                    "check_arguments.2.end",
                ),
                Binary {
                    op: NotEqual,
                    lhs: Var("d4.5", Double),
                    rhs: 4.0,
                    dst: Var("check_arguments.tmp.3", Double),
                },
                JumpIfZero(
                    Var("check_arguments.tmp.3", Double),
                    "check_arguments.3.true",
                ),
                Return(
                    4,
                ),
                Jump(
                    "check_arguments.3.end",
                ),
                Label(
                    "check_arguments.3.true",
                ),
                Label(
                    "check_arguments.3.end",
                ),
                Binary {
                    op: NotEqual,
                    lhs: Var("d5.9", Double),
                    rhs: 5.0,
                    dst: Var("check_arguments.tmp.4", Double),
                },
                JumpIfZero(
                    Var("check_arguments.tmp.4", Double),
                    "check_arguments.4.true",
                ),
                Return(
                    5,
                ),
                Jump(
                    "check_arguments.4.end",
                ),
                Label(
                    "check_arguments.4.true",
                ),
                Label(
                    "check_arguments.4.end",
                ),
                Binary {
                    op: NotEqual,
                    lhs: Var("d6.10", Double),
                    rhs: 6.0,
                    dst: Var("check_arguments.tmp.5", Double),
                },
                JumpIfZero(
                    Var("check_arguments.tmp.5", Double),
                    "check_arguments.5.true",
                ),
                Return(
                    6,
                ),
                Jump(
                    "check_arguments.5.end",
                ),
                Label(
                    "check_arguments.5.true",
                ),
                Label(
                    "check_arguments.5.end",
                ),
                Binary {
                    op: NotEqual,
                    lhs: Var("d7.11", Double),
                    rhs: 7.0,
                    dst: Var("check_arguments.tmp.6", Double),
                },
                JumpIfZero(
                    Var("check_arguments.tmp.6", Double),
                    "check_arguments.6.true",
                ),
                Return(
                    7,
                ),
                Jump(
                    "check_arguments.6.end",
                ),
                Label(
                    "check_arguments.6.true",
                ),
                Label(
                    "check_arguments.6.end",
                ),
                Binary {
                    op: NotEqual,
                    lhs: Var("d8.13", Double),
                    rhs: 8.0,
                    dst: Var("check_arguments.tmp.7", Double),
                },
                JumpIfZero(
                    Var("check_arguments.tmp.7", Double),
                    "check_arguments.7.true",
                ),
                Return(
                    8,
                ),
                Jump(
                    "check_arguments.7.end",
                ),
                Label(
                    "check_arguments.7.true",
                ),
                Label(
                    "check_arguments.7.end",
                ),
                Binary {
                    op: NotEqual,
                    lhs: Var("i1.3", Int),
                    rhs: 101,
                    dst: Var("check_arguments.tmp.8", Int),
                },
                JumpIfZero(
                    Var("check_arguments.tmp.8", Int),
                    "check_arguments.8.true",
                ),
                Return(
                    9,
                ),
                Jump(
                    "check_arguments.8.end",
                ),
                Label(
                    "check_arguments.8.true",
                ),
                Label(
                    "check_arguments.8.end",
                ),
                Binary {
                    op: NotEqual,
                    lhs: Var("i2.6", Int),
                    rhs: 102,
                    dst: Var("check_arguments.tmp.9", Int),
                },
                JumpIfZero(
                    Var("check_arguments.tmp.9", Int),
                    "check_arguments.9.true",
                ),
                Return(
                    10,
                ),
                Jump(
                    "check_arguments.9.end",
                ),
                Label(
                    "check_arguments.9.true",
                ),
                Label(
                    "check_arguments.9.end",
                ),
                Binary {
                    op: NotEqual,
                    lhs: Var("i3.7", Int),
                    rhs: 103,
                    dst: Var("check_arguments.tmp.10", Int),
                },
                JumpIfZero(
                    Var("check_arguments.tmp.10", Int),
                    "check_arguments.10.true",
                ),
                Return(
                    11,
                ),
                Jump(
                    "check_arguments.10.end",
                ),
                Label(
                    "check_arguments.10.true",
                ),
                Label(
                    "check_arguments.10.end",
                ),
                Binary {
                    op: NotEqual,
                    lhs: Var("i4.8", Int),
                    rhs: 104,
                    dst: Var("check_arguments.tmp.11", Int),
                },
                JumpIfZero(
                    Var("check_arguments.tmp.11", Int),
                    "check_arguments.11.true",
                ),
                Return(
                    12,
                ),
                Jump(
                    "check_arguments.11.end",
                ),
                Label(
                    "check_arguments.11.true",
                ),
                Label(
                    "check_arguments.11.end",
                ),
                Binary {
                    op: NotEqual,
                    lhs: Var("i5.12", Int),
                    rhs: 105,
                    dst: Var("check_arguments.tmp.12", Int),
                },
                JumpIfZero(
                    Var("check_arguments.tmp.12", Int),
                    "check_arguments.12.true",
                ),
                Return(
                    13,
                ),
                Jump(
                    "check_arguments.12.end",
                ),
                Label(
                    "check_arguments.12.true",
                ),
                Label(
                    "check_arguments.12.end",
                ),
                Return(
                    0,
                ),
                Return(
                    0,
                ),
            ],
        },
        Function {
            identifier: "main",
            global: true,
            params: [],
            instructions: [
                Call(
                    "check_arguments",
                    [
                        1.0,
                        2.0,
                        101,
                        3.0,
                        4.0,
                        102,
                        103,
                        104,
                        5.0,
                        6.0,
                        7.0,
                        105,
                        8.0,
                    ],
                    Var("main.tmp.0", Int),
                ),
                Return(
                    Var("main.tmp.0", Int),
                ),
                Return(
                    0,
                ),
            ],
        },
    ],
}