Program {
    definitions: [
        Function {
            name: "check_arguments",
            global: true,
            instructions: [
                AllocateStack(
                    176,
                ),
                Move {
                    asm_type: Longword,
                    source: Register(DI, Four),
                    destination: Stack(12, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(SI, Four),
                    destination: Stack(16, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(DX, Four),
                    destination: Stack(20, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(CX, Four),
                    destination: Stack(24, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R8, Four),
                    destination: Stack(28, Four),
                },
                Move {
                    asm_type: Double,
                    source: Register(XMM0, Eight),
                    destination: Stack(36, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Register(XMM1, Eight),
                    destination: Stack(44, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Register(XMM2, Eight),
                    destination: Stack(52, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Register(XMM3, Eight),
                    destination: Stack(60, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Register(XMM4, Eight),
                    destination: Stack(68, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Register(XMM5, Eight),
                    destination: Stack(76, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Register(XMM6, Eight),
                    destination: Stack(84, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Register(XMM7, Eight),
                    destination: Stack(92, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Immediate(4607182418800017408, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(36, Eight),
                    destination: Register(XMM15, Eight),
                },
                Cmp(
                    Double,
                    Register(XMM14, Eight),
                    Register(XMM15, Eight),
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(0, Eight),
                    destination: Stack(100, Eight),
                },
                SetCC(
                    NE,
                    Stack(100, Eight),
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(0, Four),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(100, Eight),
                    destination: Register(XMM15, Eight),
                },
                Cmp(
                    Double,
                    Register(XMM14, Eight),
                    Register(XMM15, Eight),
                ),
                JmpCC(
                    E,
                    "check_arguments.0.true",
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(1, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "check_arguments.0.end",
                ),
                Label(
                    "check_arguments.0.true",
                ),
                Label(
                    "check_arguments.0.end",
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(4611686018427387904, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(44, Eight),
                    destination: Register(XMM15, Eight),
                },
                Cmp(
                    Double,
                    Register(XMM14, Eight),
                    Register(XMM15, Eight),
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(0, Eight),
                    destination: Stack(108, Eight),
                },
                SetCC(
                    NE,
                    Stack(108, Eight),
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(0, Four),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(108, Eight),
                    destination: Register(XMM15, Eight),
                },
                Cmp(
                    Double,
                    Register(XMM14, Eight),
                    Register(XMM15, Eight),
                ),
                JmpCC(
                    E,
                    "check_arguments.1.true",
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(2, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "check_arguments.1.end",
                ),
                Label(
                    "check_arguments.1.true",
                ),
                Label(
                    "check_arguments.1.end",
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(4613937818241073152, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(52, Eight),
                    destination: Register(XMM15, Eight),
                },
                Cmp(
                    Double,
                    Register(XMM14, Eight),
                    Register(XMM15, Eight),
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(0, Eight),
                    destination: Stack(116, Eight),
                },
                SetCC(
                    NE,
                    Stack(116, Eight),
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(0, Four),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(116, Eight),
                    destination: Register(XMM15, Eight),
                },
                Cmp(
                    Double,
                    Register(XMM14, Eight),
                    Register(XMM15, Eight),
                ),
                JmpCC(
                    E,
                    "check_arguments.2.true",
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(3, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "check_arguments.2.end",
                ),
                Label(
                    "check_arguments.2.true",
                ),
                Label(
                    "check_arguments.2.end",
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(4616189618054758400, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(60, Eight),
                    destination: Register(XMM15, Eight),
                },
                Cmp(
                    Double,
                    Register(XMM14, Eight),
                    Register(XMM15, Eight),
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(0, Eight),
                    destination: Stack(124, Eight),
                },
                SetCC(
                    NE,
                    Stack(124, Eight),
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(0, Four),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(124, Eight),
                    destination: Register(XMM15, Eight),
                },
                Cmp(
                    Double,
                    Register(XMM14, Eight),
                    Register(XMM15, Eight),
                ),
                JmpCC(
                    E,
                    "check_arguments.3.true",
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(4, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "check_arguments.3.end",
                ),
                Label(
                    "check_arguments.3.true",
                ),
                Label(
                    "check_arguments.3.end",
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(4617315517961601024, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(68, Eight),
                    destination: Register(XMM15, Eight),
                },
                Cmp(
                    Double,
                    Register(XMM14, Eight),
                    Register(XMM15, Eight),
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(0, Eight),
                    destination: Stack(132, Eight),
                },
                SetCC(
                    NE,
                    Stack(132, Eight),
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(0, Four),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(132, Eight),
                    destination: Register(XMM15, Eight),
                },
                Cmp(
                    Double,
                    Register(XMM14, Eight),
                    Register(XMM15, Eight),
                ),
                JmpCC(
                    E,
                    "check_arguments.4.true",
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(5, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "check_arguments.4.end",
                ),
                Label(
                    "check_arguments.4.true",
                ),
                Label(
                    "check_arguments.4.end",
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(4618441417868443648, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(76, Eight),
                    destination: Register(XMM15, Eight),
                },
                Cmp(
                    Double,
                    Register(XMM14, Eight),
                    Register(XMM15, Eight),
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(0, Eight),
                    destination: Stack(140, Eight),
                },
                SetCC(
                    NE,
                    Stack(140, Eight),
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(0, Four),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(140, Eight),
                    destination: Register(XMM15, Eight),
                },
                Cmp(
                    Double,
                    Register(XMM14, Eight),
                    Register(XMM15, Eight),
                ),
                JmpCC(
                    E,
                    "check_arguments.5.true",
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(6, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "check_arguments.5.end",
                ),
                Label(
                    "check_arguments.5.true",
                ),
                Label(
                    "check_arguments.5.end",
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(4619567317775286272, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(84, Eight),
                    destination: Register(XMM15, Eight),
                },
                Cmp(
                    Double,
                    Register(XMM14, Eight),
                    Register(XMM15, Eight),
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(0, Eight),
                    destination: Stack(148, Eight),
                },
                SetCC(
                    NE,
                    Stack(148, Eight),
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(0, Four),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(148, Eight),
                    destination: Register(XMM15, Eight),
                },
                Cmp(
                    Double,
                    Register(XMM14, Eight),
                    Register(XMM15, Eight),
                ),
                JmpCC(
                    E,
                    "check_arguments.6.true",
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(7, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "check_arguments.6.end",
                ),
                Label(
                    "check_arguments.6.true",
                ),
                Label(
                    "check_arguments.6.end",
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(4620693217682128896, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(92, Eight),
                    destination: Register(XMM15, Eight),
                },
                Cmp(
                    Double,
                    Register(XMM14, Eight),
                    Register(XMM15, Eight),
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(0, Eight),
                    destination: Stack(156, Eight),
                },
                SetCC(
                    NE,
                    Stack(156, Eight),
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(0, Four),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(156, Eight),
                    destination: Register(XMM15, Eight),
                },
                Cmp(
                    Double,
                    Register(XMM14, Eight),
                    Register(XMM15, Eight),
                ),
                JmpCC(
                    E,
                    "check_arguments.7.true",
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(8, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "check_arguments.7.end",
                ),
                Label(
                    "check_arguments.7.true",
                ),
                Label(
                    "check_arguments.7.end",
                ),
                Cmp(
                    Longword,
                    Immediate(101, Four),
                    Stack(12, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(0, Four),
                    destination: Stack(160, Four),
                },
                SetCC(
                    NE,
                    Stack(160, Four),
                ),
                Cmp(
                    Longword,
                    Immediate(0, Four),
                    Stack(160, Four),
                ),
                JmpCC(
                    E,
                    "check_arguments.8.true",
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(9, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "check_arguments.8.end",
                ),
                Label(
                    "check_arguments.8.true",
                ),
                Label(
                    "check_arguments.8.end",
                ),
                Cmp(
                    Longword,
                    Immediate(102, Four),
                    Stack(16, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(0, Four),
                    destination: Stack(164, Four),
                },
                SetCC(
                    NE,
                    Stack(164, Four),
                ),
                Cmp(
                    Longword,
                    Immediate(0, Four),
                    Stack(164, Four),
                ),
                JmpCC(
                    E,
                    "check_arguments.9.true",
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(10, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "check_arguments.9.end",
                ),
                Label(
                    "check_arguments.9.true",
                ),
                Label(
                    "check_arguments.9.end",
                ),
                Cmp(
                    Longword,
                    Immediate(103, Four),
                    Stack(20, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(0, Four),
                    destination: Stack(168, Four),
                },
                SetCC(
                    NE,
                    Stack(168, Four),
                ),
                Cmp(
                    Longword,
                    Immediate(0, Four),
                    Stack(168, Four),
                ),
                JmpCC(
                    E,
                    "check_arguments.10.true",
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(11, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "check_arguments.10.end",
                ),
                Label(
                    "check_arguments.10.true",
                ),
                Label(
                    "check_arguments.10.end",
                ),
                Cmp(
                    Longword,
                    Immediate(104, Four),
                    Stack(24, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(0, Four),
                    destination: Stack(172, Four),
                },
                SetCC(
                    NE,
                    Stack(172, Four),
                ),
                Cmp(
                    Longword,
                    Immediate(0, Four),
                    Stack(172, Four),
                ),
                JmpCC(
                    E,
                    "check_arguments.11.true",
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(12, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "check_arguments.11.end",
                ),
                Label(
                    "check_arguments.11.true",
                ),
                Label(
                    "check_arguments.11.end",
                ),
                Cmp(
                    Longword,
                    Immediate(105, Four),
                    Stack(28, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(0, Four),
                    destination: Stack(176, Four),
                },
                SetCC(
                    NE,
                    Stack(176, Four),
                ),
                Cmp(
                    Longword,
                    Immediate(0, Four),
                    Stack(176, Four),
                ),
                JmpCC(
                    E,
                    "check_arguments.12.true",
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(13, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "check_arguments.12.end",
                ),
                Label(
                    "check_arguments.12.true",
                ),
                Label(
                    "check_arguments.12.end",
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(0, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Move {
                    asm_type: Longword,
                    source: Immediate(0, Four),
                    destination: Register(AX, Four),
                },
                Ret,
            ],
        },
        Function {
            name: "main",
            global: true,
            instructions: [
                AllocateStack(
                    16,
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(101, Four),
                    destination: Register(DI, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Immediate(102, Four),
                    destination: Register(SI, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Immediate(103, Four),
                    destination: Register(DX, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Immediate(104, Four),
                    destination: Register(CX, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Immediate(105, Four),
                    destination: Register(R8, Four),
                },
                Move {
                    asm_type: Quadword,
                    source: Immediate(4607182418800017408, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM0, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Immediate(4611686018427387904, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM1, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Immediate(4613937818241073152, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM2, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Immediate(4616189618054758400, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM3, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Immediate(4617315517961601024, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM4, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Immediate(4618441417868443648, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM5, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Immediate(4619567317775286272, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM6, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Immediate(4620693217682128896, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM7, Eight),
                },
                Call(
                    "check_arguments",
                ),
                Move {
                    asm_type: Longword,
                    source: Register(AX, Four),
                    destination: Stack(12, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(12, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Move {
                    asm_type: Longword,
                    source: Immediate(0, Four),
                    destination: Register(AX, Four),
                },
                Ret,
            ],
        },
    ],
    static_variables: [],
    static_constants: [],
}