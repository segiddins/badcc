Program {
    definitions: [
        Function {
            name: "main",
            global: true,
            instructions: [
                AllocateStack(
                    48,
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(4621819117588971520, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Stack(16, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(16, Eight),
                    destination: Register(AX, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Immediate(0, Eight),
                    destination: Register(DX, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Immediate(4616189618054758400, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(R10, Eight),
                },
                Div(
                    Double,
                    Register(R10, Eight),
                ),
                Move {
                    asm_type: Quadword,
                    source: Register(AX, Eight),
                    destination: Stack(24, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(24, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Register(XMM14, Eight),
                    destination: Stack(16, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Immediate(4612811918334230528, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(16, Eight),
                    destination: Register(XMM15, Eight),
                },
                Cmp(
                    Double,
                    Register(XMM14, Eight),
                    Register(XMM15, Eight),
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(0, Eight),
                    destination: Stack(32, Eight),
                },
                SetCC(
                    NE,
                    Stack(32, Eight),
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(0, Four),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(32, Eight),
                    destination: Register(XMM15, Eight),
                },
                Cmp(
                    Double,
                    Register(XMM14, Eight),
                    Register(XMM15, Eight),
                ),
                JmpCC(
                    E,
                    "main.0.true",
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(1, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "main.0.end",
                ),
                Label(
                    "main.0.true",
                ),
                Label(
                    "main.0.end",
                ),
                Move {
                    asm_type: Double,
                    source: Stack(16, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Register(XMM14, Eight),
                    destination: Stack(40, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(40, Eight),
                    destination: Register(XMM15, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Immediate(4666723172467343360, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM14, Eight),
                },
                Binary(
                    Double,
                    Mult,
                    Register(XMM14, Eight),
                    Register(XMM15, Eight),
                ),
                Move {
                    asm_type: Double,
                    source: Register(XMM15, Eight),
                    destination: Stack(40, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(40, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Register(XMM14, Eight),
                    destination: Stack(16, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Immediate(4672601161629433856, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(16, Eight),
                    destination: Register(XMM15, Eight),
                },
                Cmp(
                    Double,
                    Register(XMM14, Eight),
                    Register(XMM15, Eight),
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(0, Eight),
                    destination: Stack(48, Eight),
                },
                SetCC(
                    NE,
                    Stack(48, Eight),
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(0, Four),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(48, Eight),
                    destination: Register(XMM15, Eight),
                },
                Cmp(
                    Double,
                    Register(XMM14, Eight),
                    Register(XMM15, Eight),
                ),
                JmpCC(
                    E,
                    "main.1.true",
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(2, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "main.1.end",
                ),
                Label(
                    "main.1.true",
                ),
                Label(
                    "main.1.end",
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(0, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Move {
                    asm_type: Longword,
                    source: Immediate(0, Four),
                    destination: Register(AX, Four),
                },
                Ret,
            ],
        },
    ],
    static_variables: [],
    static_constants: [],
}