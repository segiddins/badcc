Program {
    declarations: [
        FunctionDeclaration {
            identifier: "copysign",
            params: [
                (
                    Double,
                    "x.1",
                    SourceSpan {
                        offset: SourceOffset(
                            23,
                        ),
                        length: 1,
                    },
                ),
                (
                    Double,
                    "y.2",
                    SourceSpan {
                        offset: SourceOffset(
                            33,
                        ),
                        length: 1,
                    },
                ),
            ],
            ret: Double,
        },
        VariableDeclaration {
            name: "zero",
            ty: Double,
            init: Constant(0.0),
        },
        FunctionDeclaration {
            identifier: "main",
            params: [],
            ret: Int,
            body: [
                VariableDeclaration {
                    name: "negative_zero.5",
                    ty: Double,
                    init: Unary {
                        op: Minus,
                        expr: Var("zero"),
                    },
                },
                If(
                    Binary {
                        op: NotEqual,
                        lhs: Var("negative_zero.5"),
                        rhs: Constant(0.0),
                    },
                    Return(
                        Constant(1),
                    ),
                    None,
                ),
                If(
                    Binary {
                        op: NotEqual,
                        lhs: Binary {
                            op: Divide,
                            lhs: Constant(1.0),
                            rhs: Var("negative_zero.5"),
                        },
                        rhs: Unary {
                            op: Minus,
                            expr: Constant(inf),
                        },
                    },
                    Return(
                        Constant(2),
                    ),
                    None,
                ),
                If(
                    Binary {
                        op: NotEqual,
                        lhs: Binary {
                            op: Divide,
                            lhs: Cast {
                                to: Double,
                                expr: Unary {
                                    op: Minus,
                                    expr: Constant(10),
                                },
                            },
                            rhs: Var("negative_zero.5"),
                        },
                        rhs: Constant(inf),
                    },
                    Return(
                        Constant(3),
                    ),
                    None,
                ),
                VariableDeclaration {
                    name: "fail.6",
                    ty: Int,
                    init: Constant(0),
                },
                Expression(
                    Binary {
                        op: And,
                        lhs: Var("negative_zero.5"),
                        rhs: Cast {
                            to: Double,
                            expr: Assignment {
                                lhs: Var("fail.6"),
                                rhs: Constant(1),
                            },
                        },
                    },
                ),
                If(
                    Var("fail.6"),
                    Return(
                        Constant(4),
                    ),
                    None,
                ),
                If(
                    Var("negative_zero.5"),
                    Compound(
                        [
                            Return(
                                Constant(5),
                            ),
                        ],
                    ),
                    None,
                ),
                If(
                    Binary {
                        op: NotEqual,
                        lhs: Var("zero"),
                        rhs: Unary {
                            op: Minus,
                            expr: Constant(0.0),
                        },
                    },
                    Compound(
                        [
                            Return(
                                Constant(6),
                            ),
                        ],
                    ),
                    None,
                ),
                VariableDeclaration {
                    name: "negated.7",
                    ty: Double,
                    init: FunctionCall {
                        function: Var("copysign"),
                        params: [
                            Constant(4.0),
                            Unary {
                                op: Minus,
                                expr: Constant(0.0),
                            },
                        ],
                    },
                },
                VariableDeclaration {
                    name: "positive.8",
                    ty: Double,
                    init: FunctionCall {
                        function: Var("copysign"),
                        params: [
                            Unary {
                                op: Minus,
                                expr: Constant(5.0),
                            },
                            Constant(0.0),
                        ],
                    },
                },
                If(
                    Binary {
                        op: NotEqual,
                        lhs: Var("negated.7"),
                        rhs: Unary {
                            op: Minus,
                            expr: Constant(4.0),
                        },
                    },
                    Compound(
                        [
                            Return(
                                Constant(7),
                            ),
                        ],
                    ),
                    None,
                ),
                If(
                    Binary {
                        op: NotEqual,
                        lhs: Var("positive.8"),
                        rhs: Constant(5.0),
                    },
                    Compound(
                        [
                            Return(
                                Constant(8),
                            ),
                        ],
                    ),
                    None,
                ),
                Return(
                    Constant(0),
                ),
            ],
        },
    ],
}