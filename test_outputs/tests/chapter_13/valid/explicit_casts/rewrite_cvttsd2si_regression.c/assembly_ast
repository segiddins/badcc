Program {
    definitions: [
        Function {
            name: "main",
            global: true,
            instructions: [
                AllocateStack(
                    256,
                ),
                Cvttsd2si {
                    dst_type: Quadword,
                    src: Data("glob", Eight),
                    dst: Register(R11, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R11, Eight),
                    destination: Stack(16, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Stack(16, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Stack(24, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Data("glob", Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Register(XMM14, Eight),
                    destination: Stack(32, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(32, Eight),
                    destination: Register(XMM15, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Immediate(4662218473328345088, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM14, Eight),
                },
                Binary(
                    Double,
                    Sub,
                    Register(XMM14, Eight),
                    Register(XMM15, Eight),
                ),
                Move {
                    asm_type: Double,
                    source: Register(XMM15, Eight),
                    destination: Stack(32, Eight),
                },
                Cvttsd2si {
                    dst_type: Longword,
                    src: Stack(32, Eight),
                    dst: Register(R11, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R11, Four),
                    destination: Stack(36, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(36, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(40, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(40, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(44, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(40, Four),
                    destination: Register(R10, Four),
                },
                Binary(
                    Longword,
                    Add,
                    Register(R10, Four),
                    Stack(44, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(44, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(48, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Immediate(2, Four),
                    destination: Stack(52, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(40, Four),
                    destination: Register(R10, Four),
                },
                Binary(
                    Longword,
                    Add,
                    Register(R10, Four),
                    Stack(52, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(52, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(56, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(48, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(60, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(60, Four),
                    destination: Register(R11, Four),
                },
                Binary(
                    Longword,
                    Mult,
                    Stack(48, Four),
                    Register(R11, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Register(R11, Four),
                    destination: Stack(60, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(60, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(64, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Immediate(6, Four),
                    destination: Stack(68, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(40, Four),
                    destination: Register(R10, Four),
                },
                Binary(
                    Longword,
                    Sub,
                    Register(R10, Four),
                    Stack(68, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(68, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(72, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(48, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(76, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(76, Four),
                    destination: Register(R11, Four),
                },
                Binary(
                    Longword,
                    Mult,
                    Stack(56, Four),
                    Register(R11, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Register(R11, Four),
                    destination: Stack(76, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(76, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(80, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(40, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(84, Four),
                },
                Binary(
                    Longword,
                    Add,
                    Immediate(6, Four),
                    Stack(84, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(84, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(88, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(48, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(92, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(92, Four),
                    destination: Register(R11, Four),
                },
                Binary(
                    Longword,
                    Mult,
                    Immediate(4, Four),
                    Register(R11, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Register(R11, Four),
                    destination: Stack(92, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(92, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(96, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(56, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(100, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(100, Four),
                    destination: Register(R11, Four),
                },
                Binary(
                    Longword,
                    Mult,
                    Stack(56, Four),
                    Register(R11, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Register(R11, Four),
                    destination: Stack(100, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(100, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(104, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(64, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(108, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(80, Four),
                    destination: Register(R10, Four),
                },
                Binary(
                    Longword,
                    Add,
                    Register(R10, Four),
                    Stack(108, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(108, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(112, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Immediate(16, Four),
                    destination: Stack(116, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(72, Four),
                    destination: Register(R10, Four),
                },
                Binary(
                    Longword,
                    Sub,
                    Register(R10, Four),
                    Stack(116, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(116, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(120, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(80, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(124, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(80, Four),
                    destination: Register(R10, Four),
                },
                Binary(
                    Longword,
                    Add,
                    Register(R10, Four),
                    Stack(124, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(124, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(128, Four),
                },
                AllocateStack(
                    8,
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(40, Four),
                    destination: Register(DI, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(48, Four),
                    destination: Register(SI, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(56, Four),
                    destination: Register(DX, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(64, Four),
                    destination: Register(CX, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(72, Four),
                    destination: Register(R8, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(80, Four),
                    destination: Register(R9, Four),
                },
                Push(
                    Immediate(1, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(128, Four),
                    destination: Register(AX, Four),
                },
                Push(
                    Register(AX, Eight),
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(120, Four),
                    destination: Register(AX, Four),
                },
                Push(
                    Register(AX, Eight),
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(112, Four),
                    destination: Register(AX, Four),
                },
                Push(
                    Register(AX, Eight),
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(104, Four),
                    destination: Register(AX, Four),
                },
                Push(
                    Register(AX, Eight),
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(96, Four),
                    destination: Register(AX, Four),
                },
                Push(
                    Register(AX, Eight),
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(88, Four),
                    destination: Register(AX, Four),
                },
                Push(
                    Register(AX, Eight),
                ),
                Call(
                    "check_12_ints",
                ),
                DeallocateStack(
                    64,
                ),
                Move {
                    asm_type: Longword,
                    source: Register(AX, Four),
                    destination: Stack(132, Four),
                },
                Move {
                    asm_type: Double,
                    source: Data("glob", Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Register(XMM14, Eight),
                    destination: Stack(140, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(140, Eight),
                    destination: Register(XMM15, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Immediate(4662205279188811776, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM14, Eight),
                },
                Binary(
                    Double,
                    Sub,
                    Register(XMM14, Eight),
                    Register(XMM15, Eight),
                ),
                Move {
                    asm_type: Double,
                    source: Register(XMM15, Eight),
                    destination: Stack(140, Eight),
                },
                Cvttsd2si {
                    dst_type: Longword,
                    src: Stack(140, Eight),
                    dst: Register(R11, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R11, Four),
                    destination: Stack(144, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(144, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(148, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(148, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(152, Four),
                },
                Binary(
                    Longword,
                    Add,
                    Immediate(1, Four),
                    Stack(152, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(152, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(156, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Immediate(28, Four),
                    destination: Stack(160, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(148, Four),
                    destination: Register(R10, Four),
                },
                Binary(
                    Longword,
                    Sub,
                    Register(R10, Four),
                    Stack(160, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(160, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(164, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(156, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(168, Four),
                },
                Binary(
                    Longword,
                    Add,
                    Immediate(2, Four),
                    Stack(168, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(168, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(172, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Immediate(4, Four),
                    destination: Stack(176, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(148, Four),
                    destination: Register(R10, Four),
                },
                Binary(
                    Longword,
                    Add,
                    Register(R10, Four),
                    Stack(176, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(176, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(180, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Immediate(32, Four),
                    destination: Stack(184, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(156, Four),
                    destination: Register(R10, Four),
                },
                Binary(
                    Longword,
                    Sub,
                    Register(R10, Four),
                    Stack(184, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(184, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(188, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Immediate(35, Four),
                    destination: Stack(192, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(172, Four),
                    destination: Register(R10, Four),
                },
                Binary(
                    Longword,
                    Sub,
                    Register(R10, Four),
                    Stack(192, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(192, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(196, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(164, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(200, Four),
                },
                Binary(
                    Longword,
                    Add,
                    Immediate(5, Four),
                    Stack(200, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(200, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(204, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(148, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(208, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(208, Four),
                    destination: Register(R11, Four),
                },
                Binary(
                    Longword,
                    Mult,
                    Immediate(2, Four),
                    Register(R11, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Register(R11, Four),
                    destination: Stack(208, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(208, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(212, Four),
                },
                Binary(
                    Longword,
                    Sub,
                    Immediate(5, Four),
                    Stack(212, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(212, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(216, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(164, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(220, Four),
                },
                Binary(
                    Longword,
                    Add,
                    Immediate(7, Four),
                    Stack(220, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(220, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(224, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Immediate(6, Four),
                    destination: Stack(228, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(180, Four),
                    destination: Register(R10, Four),
                },
                Binary(
                    Longword,
                    Add,
                    Register(R10, Four),
                    Stack(228, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(228, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(232, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(148, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(236, Four),
                },
                Binary(
                    Longword,
                    Add,
                    Immediate(11, Four),
                    Stack(236, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(236, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(240, Four),
                },
                AllocateStack(
                    8,
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(148, Four),
                    destination: Register(DI, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(156, Four),
                    destination: Register(SI, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(164, Four),
                    destination: Register(DX, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(172, Four),
                    destination: Register(CX, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(180, Four),
                    destination: Register(R8, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(188, Four),
                    destination: Register(R9, Four),
                },
                Push(
                    Immediate(13, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(240, Four),
                    destination: Register(AX, Four),
                },
                Push(
                    Register(AX, Eight),
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(232, Four),
                    destination: Register(AX, Four),
                },
                Push(
                    Register(AX, Eight),
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(224, Four),
                    destination: Register(AX, Four),
                },
                Push(
                    Register(AX, Eight),
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(216, Four),
                    destination: Register(AX, Four),
                },
                Push(
                    Register(AX, Eight),
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(204, Four),
                    destination: Register(AX, Four),
                },
                Push(
                    Register(AX, Eight),
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(196, Four),
                    destination: Register(AX, Four),
                },
                Push(
                    Register(AX, Eight),
                ),
                Call(
                    "check_12_ints",
                ),
                DeallocateStack(
                    64,
                ),
                Move {
                    asm_type: Longword,
                    source: Register(AX, Four),
                    destination: Stack(244, Four),
                },
                Cmp(
                    Quadword,
                    Immediate(5000, Eight),
                    Stack(24, Eight),
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(0, Eight),
                    destination: Stack(252, Eight),
                },
                SetCC(
                    NE,
                    Stack(252, Eight),
                ),
                Cmp(
                    Quadword,
                    Immediate(0, Four),
                    Stack(252, Eight),
                ),
                JmpCC(
                    E,
                    "main.0.true",
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(1, Four),
                    destination: Stack(256, Four),
                },
                Unary(
                    Longword,
                    Neg,
                    Stack(256, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(256, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "main.0.end",
                ),
                Label(
                    "main.0.true",
                ),
                Label(
                    "main.0.end",
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(0, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Move {
                    asm_type: Longword,
                    source: Immediate(0, Four),
                    destination: Register(AX, Four),
                },
                Ret,
            ],
        },
        Function {
            name: "check_12_ints",
            global: true,
            instructions: [
                AllocateStack(
                    160,
                ),
                Move {
                    asm_type: Longword,
                    source: Register(DI, Four),
                    destination: Stack(12, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(SI, Four),
                    destination: Stack(16, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(DX, Four),
                    destination: Stack(20, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(CX, Four),
                    destination: Stack(24, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R8, Four),
                    destination: Stack(28, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R9, Four),
                    destination: Stack(32, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(-16, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(36, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(-24, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(40, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(-32, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(44, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(-40, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(48, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(-48, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(52, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(-56, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(56, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(-64, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(60, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Immediate(0, Four),
                    destination: Stack(64, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(60, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(68, Four),
                },
                Binary(
                    Longword,
                    Add,
                    Immediate(0, Four),
                    Stack(68, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(68, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(64, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(64, Four),
                    destination: Register(R10, Four),
                },
                Cmp(
                    Longword,
                    Register(R10, Four),
                    Stack(12, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(0, Four),
                    destination: Stack(72, Four),
                },
                SetCC(
                    NE,
                    Stack(72, Four),
                ),
                Cmp(
                    Longword,
                    Immediate(0, Four),
                    Stack(72, Four),
                ),
                JmpCC(
                    E,
                    "check_12_ints.0.true",
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(64, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "check_12_ints.0.end",
                ),
                Label(
                    "check_12_ints.0.true",
                ),
                Label(
                    "check_12_ints.0.end",
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(60, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(76, Four),
                },
                Binary(
                    Longword,
                    Add,
                    Immediate(1, Four),
                    Stack(76, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(76, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(64, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(64, Four),
                    destination: Register(R10, Four),
                },
                Cmp(
                    Longword,
                    Register(R10, Four),
                    Stack(16, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(0, Four),
                    destination: Stack(80, Four),
                },
                SetCC(
                    NE,
                    Stack(80, Four),
                ),
                Cmp(
                    Longword,
                    Immediate(0, Four),
                    Stack(80, Four),
                ),
                JmpCC(
                    E,
                    "check_12_ints.1.true",
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(64, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "check_12_ints.1.end",
                ),
                Label(
                    "check_12_ints.1.true",
                ),
                Label(
                    "check_12_ints.1.end",
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(60, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(84, Four),
                },
                Binary(
                    Longword,
                    Add,
                    Immediate(2, Four),
                    Stack(84, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(84, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(64, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(64, Four),
                    destination: Register(R10, Four),
                },
                Cmp(
                    Longword,
                    Register(R10, Four),
                    Stack(20, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(0, Four),
                    destination: Stack(88, Four),
                },
                SetCC(
                    NE,
                    Stack(88, Four),
                ),
                Cmp(
                    Longword,
                    Immediate(0, Four),
                    Stack(88, Four),
                ),
                JmpCC(
                    E,
                    "check_12_ints.2.true",
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(64, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "check_12_ints.2.end",
                ),
                Label(
                    "check_12_ints.2.true",
                ),
                Label(
                    "check_12_ints.2.end",
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(60, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(92, Four),
                },
                Binary(
                    Longword,
                    Add,
                    Immediate(3, Four),
                    Stack(92, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(92, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(64, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(64, Four),
                    destination: Register(R10, Four),
                },
                Cmp(
                    Longword,
                    Register(R10, Four),
                    Stack(24, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(0, Four),
                    destination: Stack(96, Four),
                },
                SetCC(
                    NE,
                    Stack(96, Four),
                ),
                Cmp(
                    Longword,
                    Immediate(0, Four),
                    Stack(96, Four),
                ),
                JmpCC(
                    E,
                    "check_12_ints.3.true",
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(64, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "check_12_ints.3.end",
                ),
                Label(
                    "check_12_ints.3.true",
                ),
                Label(
                    "check_12_ints.3.end",
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(60, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(100, Four),
                },
                Binary(
                    Longword,
                    Add,
                    Immediate(4, Four),
                    Stack(100, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(100, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(64, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(64, Four),
                    destination: Register(R10, Four),
                },
                Cmp(
                    Longword,
                    Register(R10, Four),
                    Stack(28, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(0, Four),
                    destination: Stack(104, Four),
                },
                SetCC(
                    NE,
                    Stack(104, Four),
                ),
                Cmp(
                    Longword,
                    Immediate(0, Four),
                    Stack(104, Four),
                ),
                JmpCC(
                    E,
                    "check_12_ints.4.true",
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(64, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "check_12_ints.4.end",
                ),
                Label(
                    "check_12_ints.4.true",
                ),
                Label(
                    "check_12_ints.4.end",
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(60, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(108, Four),
                },
                Binary(
                    Longword,
                    Add,
                    Immediate(5, Four),
                    Stack(108, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(108, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(64, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(64, Four),
                    destination: Register(R10, Four),
                },
                Cmp(
                    Longword,
                    Register(R10, Four),
                    Stack(32, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(0, Four),
                    destination: Stack(112, Four),
                },
                SetCC(
                    NE,
                    Stack(112, Four),
                ),
                Cmp(
                    Longword,
                    Immediate(0, Four),
                    Stack(112, Four),
                ),
                JmpCC(
                    E,
                    "check_12_ints.5.true",
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(64, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "check_12_ints.5.end",
                ),
                Label(
                    "check_12_ints.5.true",
                ),
                Label(
                    "check_12_ints.5.end",
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(60, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(116, Four),
                },
                Binary(
                    Longword,
                    Add,
                    Immediate(6, Four),
                    Stack(116, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(116, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(64, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(64, Four),
                    destination: Register(R10, Four),
                },
                Cmp(
                    Longword,
                    Register(R10, Four),
                    Stack(36, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(0, Four),
                    destination: Stack(120, Four),
                },
                SetCC(
                    NE,
                    Stack(120, Four),
                ),
                Cmp(
                    Longword,
                    Immediate(0, Four),
                    Stack(120, Four),
                ),
                JmpCC(
                    E,
                    "check_12_ints.6.true",
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(64, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "check_12_ints.6.end",
                ),
                Label(
                    "check_12_ints.6.true",
                ),
                Label(
                    "check_12_ints.6.end",
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(60, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(124, Four),
                },
                Binary(
                    Longword,
                    Add,
                    Immediate(7, Four),
                    Stack(124, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(124, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(64, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(64, Four),
                    destination: Register(R10, Four),
                },
                Cmp(
                    Longword,
                    Register(R10, Four),
                    Stack(40, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(0, Four),
                    destination: Stack(128, Four),
                },
                SetCC(
                    NE,
                    Stack(128, Four),
                ),
                Cmp(
                    Longword,
                    Immediate(0, Four),
                    Stack(128, Four),
                ),
                JmpCC(
                    E,
                    "check_12_ints.7.true",
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(64, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "check_12_ints.7.end",
                ),
                Label(
                    "check_12_ints.7.true",
                ),
                Label(
                    "check_12_ints.7.end",
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(60, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(132, Four),
                },
                Binary(
                    Longword,
                    Add,
                    Immediate(8, Four),
                    Stack(132, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(132, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(64, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(64, Four),
                    destination: Register(R10, Four),
                },
                Cmp(
                    Longword,
                    Register(R10, Four),
                    Stack(44, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(0, Four),
                    destination: Stack(136, Four),
                },
                SetCC(
                    NE,
                    Stack(136, Four),
                ),
                Cmp(
                    Longword,
                    Immediate(0, Four),
                    Stack(136, Four),
                ),
                JmpCC(
                    E,
                    "check_12_ints.8.true",
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(64, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "check_12_ints.8.end",
                ),
                Label(
                    "check_12_ints.8.true",
                ),
                Label(
                    "check_12_ints.8.end",
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(60, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(140, Four),
                },
                Binary(
                    Longword,
                    Add,
                    Immediate(9, Four),
                    Stack(140, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(140, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(64, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(64, Four),
                    destination: Register(R10, Four),
                },
                Cmp(
                    Longword,
                    Register(R10, Four),
                    Stack(48, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(0, Four),
                    destination: Stack(144, Four),
                },
                SetCC(
                    NE,
                    Stack(144, Four),
                ),
                Cmp(
                    Longword,
                    Immediate(0, Four),
                    Stack(144, Four),
                ),
                JmpCC(
                    E,
                    "check_12_ints.9.true",
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(64, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "check_12_ints.9.end",
                ),
                Label(
                    "check_12_ints.9.true",
                ),
                Label(
                    "check_12_ints.9.end",
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(60, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(148, Four),
                },
                Binary(
                    Longword,
                    Add,
                    Immediate(10, Four),
                    Stack(148, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(148, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(64, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(64, Four),
                    destination: Register(R10, Four),
                },
                Cmp(
                    Longword,
                    Register(R10, Four),
                    Stack(52, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(0, Four),
                    destination: Stack(152, Four),
                },
                SetCC(
                    NE,
                    Stack(152, Four),
                ),
                Cmp(
                    Longword,
                    Immediate(0, Four),
                    Stack(152, Four),
                ),
                JmpCC(
                    E,
                    "check_12_ints.10.true",
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(64, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "check_12_ints.10.end",
                ),
                Label(
                    "check_12_ints.10.true",
                ),
                Label(
                    "check_12_ints.10.end",
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(60, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(156, Four),
                },
                Binary(
                    Longword,
                    Add,
                    Immediate(11, Four),
                    Stack(156, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(156, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(64, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(64, Four),
                    destination: Register(R10, Four),
                },
                Cmp(
                    Longword,
                    Register(R10, Four),
                    Stack(56, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(0, Four),
                    destination: Stack(160, Four),
                },
                SetCC(
                    NE,
                    Stack(160, Four),
                ),
                Cmp(
                    Longword,
                    Immediate(0, Four),
                    Stack(160, Four),
                ),
                JmpCC(
                    E,
                    "check_12_ints.11.true",
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(64, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "check_12_ints.11.end",
                ),
                Label(
                    "check_12_ints.11.true",
                ),
                Label(
                    "check_12_ints.11.end",
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(0, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Move {
                    asm_type: Longword,
                    source: Immediate(0, Four),
                    destination: Register(AX, Four),
                },
                Ret,
            ],
        },
    ],
    static_variables: [
        StaticVariable {
            global: true,
            name: "glob",
            value: 5000.0,
            alignment: 8,
        },
    ],
    static_constants: [],
}