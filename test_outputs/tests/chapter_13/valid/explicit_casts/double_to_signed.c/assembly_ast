Program {
    definitions: [
        Function {
            name: "double_to_int",
            global: true,
            instructions: [
                AllocateStack(
                    32,
                ),
                Move {
                    asm_type: Double,
                    source: Register(XMM0, Eight),
                    destination: Stack(16, Eight),
                },
                Cvttsd2si {
                    dst_type: Longword,
                    src: Stack(16, Eight),
                    dst: Register(R11, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R11, Four),
                    destination: Stack(20, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(20, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Move {
                    asm_type: Longword,
                    source: Immediate(0, Four),
                    destination: Register(AX, Four),
                },
                Ret,
            ],
        },
        Function {
            name: "double_to_long",
            global: true,
            instructions: [
                AllocateStack(
                    32,
                ),
                Move {
                    asm_type: Double,
                    source: Register(XMM0, Eight),
                    destination: Stack(16, Eight),
                },
                Cvttsd2si {
                    dst_type: Quadword,
                    src: Stack(16, Eight),
                    dst: Register(R11, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R11, Eight),
                    destination: Stack(24, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Stack(24, Eight),
                    destination: Register(AX, Eight),
                },
                Ret,
                Move {
                    asm_type: Quadword,
                    source: Immediate(0, Eight),
                    destination: Register(AX, Eight),
                },
                Ret,
            ],
        },
        Function {
            name: "main",
            global: true,
            instructions: [
                AllocateStack(
                    64,
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(4746795990003587482, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM0, Eight),
                },
                Call(
                    "double_to_long",
                ),
                Move {
                    asm_type: Quadword,
                    source: Register(AX, Eight),
                    destination: Stack(16, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Stack(16, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Stack(24, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Immediate(2148429099, Eight),
                    destination: Register(R10, Eight),
                },
                Cmp(
                    Quadword,
                    Register(R10, Eight),
                    Stack(24, Eight),
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(0, Eight),
                    destination: Stack(32, Eight),
                },
                SetCC(
                    NE,
                    Stack(32, Eight),
                ),
                Cmp(
                    Quadword,
                    Immediate(0, Four),
                    Stack(32, Eight),
                ),
                JmpCC(
                    E,
                    "main.0.true",
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(1, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "main.0.end",
                ),
                Label(
                    "main.0.true",
                ),
                Label(
                    "main.0.end",
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(4686111994867847738, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Stack(40, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Immediate(-9223372036854775808, Eight),
                    destination: Register(R10, Eight),
                },
                Binary(
                    Quadword,
                    Xor,
                    Register(R10, Eight),
                    Stack(40, Eight),
                ),
                Move {
                    asm_type: Double,
                    source: Stack(40, Eight),
                    destination: Register(XMM0, Eight),
                },
                Call(
                    "double_to_int",
                ),
                Move {
                    asm_type: Longword,
                    source: Register(AX, Four),
                    destination: Stack(44, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(44, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(48, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Immediate(200000, Four),
                    destination: Stack(52, Four),
                },
                Unary(
                    Longword,
                    Neg,
                    Stack(52, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(52, Four),
                    destination: Register(R10, Four),
                },
                Cmp(
                    Longword,
                    Register(R10, Four),
                    Stack(48, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(0, Four),
                    destination: Stack(56, Four),
                },
                SetCC(
                    NE,
                    Stack(56, Four),
                ),
                Cmp(
                    Longword,
                    Immediate(0, Four),
                    Stack(56, Four),
                ),
                JmpCC(
                    E,
                    "main.1.true",
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(2, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "main.1.end",
                ),
                Label(
                    "main.1.true",
                ),
                Label(
                    "main.1.end",
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(0, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Move {
                    asm_type: Longword,
                    source: Immediate(0, Four),
                    destination: Register(AX, Four),
                },
                Ret,
            ],
        },
    ],
    static_variables: [],
    static_constants: [],
}