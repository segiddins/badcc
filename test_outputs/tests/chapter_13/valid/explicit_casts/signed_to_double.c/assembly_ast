Program {
    definitions: [
        Function {
            name: "int_to_double",
            global: true,
            instructions: [
                AllocateStack(
                    32,
                ),
                Move {
                    asm_type: Longword,
                    source: Register(DI, Four),
                    destination: Stack(12, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(12, Four),
                    destination: Register(R10, Four),
                },
                Cvtsi2sd {
                    src_type: Longword,
                    src: Register(R10, Four),
                    dst: Register(XMM15, Eight),
                },
                Move {
                    asm_type: Longword,
                    source: Register(XMM15, Eight),
                    destination: Stack(20, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(20, Eight),
                    destination: Register(XMM0, Eight),
                },
                Ret,
                Move {
                    asm_type: Quadword,
                    source: Immediate(0, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM0, Eight),
                },
                Ret,
            ],
        },
        Function {
            name: "long_to_double",
            global: true,
            instructions: [
                AllocateStack(
                    32,
                ),
                Move {
                    asm_type: Quadword,
                    source: Register(DI, Eight),
                    destination: Stack(16, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Stack(16, Eight),
                    destination: Register(R10, Eight),
                },
                Cvtsi2sd {
                    src_type: Quadword,
                    src: Register(R10, Eight),
                    dst: Register(XMM15, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(XMM15, Eight),
                    destination: Stack(24, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(24, Eight),
                    destination: Register(XMM0, Eight),
                },
                Ret,
                Move {
                    asm_type: Quadword,
                    source: Immediate(0, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM0, Eight),
                },
                Ret,
            ],
        },
        Function {
            name: "main",
            global: true,
            instructions: [
                AllocateStack(
                    96,
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(100000, Four),
                    destination: Stack(12, Four),
                },
                Unary(
                    Longword,
                    Neg,
                    Stack(12, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(12, Four),
                    destination: Register(DI, Four),
                },
                Call(
                    "int_to_double",
                ),
                Move {
                    asm_type: Double,
                    source: Register(XMM0, Eight),
                    destination: Stack(20, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Immediate(4681608360884174848, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Stack(28, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Immediate(-9223372036854775808, Eight),
                    destination: Register(R10, Eight),
                },
                Binary(
                    Quadword,
                    Xor,
                    Register(R10, Eight),
                    Stack(28, Eight),
                ),
                Move {
                    asm_type: Double,
                    source: Stack(28, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(20, Eight),
                    destination: Register(XMM15, Eight),
                },
                Cmp(
                    Double,
                    Register(XMM14, Eight),
                    Register(XMM15, Eight),
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(0, Eight),
                    destination: Stack(36, Eight),
                },
                SetCC(
                    NE,
                    Stack(36, Eight),
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(0, Four),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(36, Eight),
                    destination: Register(XMM15, Eight),
                },
                Cmp(
                    Double,
                    Register(XMM14, Eight),
                    Register(XMM15, Eight),
                ),
                JmpCC(
                    E,
                    "main.0.true",
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(1, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "main.0.end",
                ),
                Label(
                    "main.0.true",
                ),
                Label(
                    "main.0.end",
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(9007199254751227, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Stack(44, Eight),
                },
                Unary(
                    Quadword,
                    Neg,
                    Stack(44, Eight),
                ),
                Move {
                    asm_type: Quadword,
                    source: Stack(44, Eight),
                    destination: Register(DI, Eight),
                },
                Call(
                    "long_to_double",
                ),
                Move {
                    asm_type: Double,
                    source: Register(XMM0, Eight),
                    destination: Stack(52, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Immediate(4845873199050658814, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Stack(60, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Immediate(-9223372036854775808, Eight),
                    destination: Register(R10, Eight),
                },
                Binary(
                    Quadword,
                    Xor,
                    Register(R10, Eight),
                    Stack(60, Eight),
                ),
                Move {
                    asm_type: Double,
                    source: Stack(60, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(52, Eight),
                    destination: Register(XMM15, Eight),
                },
                Cmp(
                    Double,
                    Register(XMM14, Eight),
                    Register(XMM15, Eight),
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(0, Eight),
                    destination: Stack(68, Eight),
                },
                SetCC(
                    NE,
                    Stack(68, Eight),
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(0, Four),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(68, Eight),
                    destination: Register(XMM15, Eight),
                },
                Cmp(
                    Double,
                    Register(XMM14, Eight),
                    Register(XMM15, Eight),
                ),
                JmpCC(
                    E,
                    "main.1.true",
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(2, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "main.1.end",
                ),
                Label(
                    "main.1.true",
                ),
                Label(
                    "main.1.end",
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(1152921504606846977, Eight),
                    destination: Register(R10, Eight),
                },
                Cvtsi2sd {
                    src_type: Quadword,
                    src: Register(R10, Eight),
                    dst: Register(XMM15, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(XMM15, Eight),
                    destination: Stack(76, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(76, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Register(XMM14, Eight),
                    destination: Stack(84, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Immediate(4877398396442247168, Eight),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(84, Eight),
                    destination: Register(XMM15, Eight),
                },
                Cmp(
                    Double,
                    Register(XMM14, Eight),
                    Register(XMM15, Eight),
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(0, Eight),
                    destination: Stack(92, Eight),
                },
                SetCC(
                    NE,
                    Stack(92, Eight),
                ),
                Move {
                    asm_type: Quadword,
                    source: Immediate(0, Four),
                    destination: Register(R10, Eight),
                },
                Move {
                    asm_type: Quadword,
                    source: Register(R10, Eight),
                    destination: Register(XMM14, Eight),
                },
                Move {
                    asm_type: Double,
                    source: Stack(92, Eight),
                    destination: Register(XMM15, Eight),
                },
                Cmp(
                    Double,
                    Register(XMM14, Eight),
                    Register(XMM15, Eight),
                ),
                JmpCC(
                    E,
                    "main.2.true",
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(3, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "main.2.end",
                ),
                Label(
                    "main.2.true",
                ),
                Label(
                    "main.2.end",
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(0, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Move {
                    asm_type: Longword,
                    source: Immediate(0, Four),
                    destination: Register(AX, Four),
                },
                Ret,
            ],
        },
    ],
    static_variables: [],
    static_constants: [],
}