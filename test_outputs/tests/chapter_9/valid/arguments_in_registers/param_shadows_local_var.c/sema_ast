Program {
    declarations: [
        FunctionDeclaration {
            identifier: "main",
            params: [],
            ret: Int,
            body: [
                VariableDeclaration {
                    name: "a.1",
                    ty: Int,
                    init: Constant {
                        constant: 10,
                    },
                },
                FunctionDeclaration {
                    identifier: "f",
                    params: [
                        (
                            Int,
                            "a.3",
                            SourceSpan {
                                offset: SourceOffset(
                                    47,
                                ),
                                length: 1,
                            },
                        ),
                    ],
                    ret: Int,
                },
                Return(
                    FunctionCall {
                        function: Var {
                            name: "f",
                        },
                        params: [
                            Var {
                                name: "a.1",
                            },
                        ],
                    },
                ),
            ],
        },
        FunctionDeclaration {
            identifier: "f",
            params: [
                (
                    Int,
                    "a.5",
                    SourceSpan {
                        offset: SourceOffset(
                            80,
                        ),
                        length: 1,
                    },
                ),
            ],
            ret: Int,
            body: [
                Return(
                    Binary {
                        op: Multiply,
                        lhs: Var {
                            name: "a.5",
                        },
                        rhs: Constant {
                            constant: 2,
                        },
                    },
                ),
            ],
        },
    ],
}