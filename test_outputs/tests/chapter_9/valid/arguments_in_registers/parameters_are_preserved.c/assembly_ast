Program {
    definitions: [
        Function {
            name: "g",
            global: true,
            instructions: [
                AllocateStack(
                    64,
                ),
                Move {
                    source: Register(DI, Four),
                    destination: Stack(12, Four),
                },
                Move {
                    source: Register(SI, Four),
                    destination: Stack(16, Four),
                },
                Move {
                    source: Register(DX, Four),
                    destination: Stack(20, Four),
                },
                Move {
                    source: Register(CX, Four),
                    destination: Stack(24, Four),
                },
                Cmp(
                    Immediate(2, Four),
                    Stack(12, Four),
                ),
                Move {
                    source: Immediate(0, Four),
                    destination: Stack(28, Four),
                },
                SetCC(
                    E,
                    Stack(28, Four),
                ),
                Cmp(
                    Immediate(0, Four),
                    Stack(28, Four),
                ),
                JmpCC(
                    E,
                    "g.1.false",
                ),
                Cmp(
                    Immediate(4, Four),
                    Stack(16, Four),
                ),
                Move {
                    source: Immediate(0, Four),
                    destination: Stack(32, Four),
                },
                SetCC(
                    E,
                    Stack(32, Four),
                ),
                Cmp(
                    Immediate(0, Four),
                    Stack(32, Four),
                ),
                JmpCC(
                    E,
                    "g.1.false",
                ),
                Move {
                    source: Immediate(1, Four),
                    destination: Stack(36, Four),
                },
                Jmp(
                    "g.1.end",
                ),
                Label(
                    "g.1.false",
                ),
                Move {
                    source: Immediate(0, Four),
                    destination: Stack(36, Four),
                },
                Label(
                    "g.1.end",
                ),
                Cmp(
                    Immediate(0, Four),
                    Stack(36, Four),
                ),
                JmpCC(
                    E,
                    "g.2.false",
                ),
                Cmp(
                    Immediate(6, Four),
                    Stack(20, Four),
                ),
                Move {
                    source: Immediate(0, Four),
                    destination: Stack(40, Four),
                },
                SetCC(
                    E,
                    Stack(40, Four),
                ),
                Cmp(
                    Immediate(0, Four),
                    Stack(40, Four),
                ),
                JmpCC(
                    E,
                    "g.2.false",
                ),
                Move {
                    source: Immediate(1, Four),
                    destination: Stack(44, Four),
                },
                Jmp(
                    "g.2.end",
                ),
                Label(
                    "g.2.false",
                ),
                Move {
                    source: Immediate(0, Four),
                    destination: Stack(44, Four),
                },
                Label(
                    "g.2.end",
                ),
                Cmp(
                    Immediate(0, Four),
                    Stack(44, Four),
                ),
                JmpCC(
                    E,
                    "g.3.false",
                ),
                Cmp(
                    Immediate(8, Four),
                    Stack(24, Four),
                ),
                Move {
                    source: Immediate(0, Four),
                    destination: Stack(48, Four),
                },
                SetCC(
                    E,
                    Stack(48, Four),
                ),
                Cmp(
                    Immediate(0, Four),
                    Stack(48, Four),
                ),
                JmpCC(
                    E,
                    "g.3.false",
                ),
                Move {
                    source: Immediate(1, Four),
                    destination: Stack(52, Four),
                },
                Jmp(
                    "g.3.end",
                ),
                Label(
                    "g.3.false",
                ),
                Move {
                    source: Immediate(0, Four),
                    destination: Stack(52, Four),
                },
                Label(
                    "g.3.end",
                ),
                Cmp(
                    Immediate(0, Four),
                    Stack(52, Four),
                ),
                JmpCC(
                    E,
                    "g.0.true",
                ),
                Move {
                    source: Immediate(1, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Jmp(
                    "g.0.end",
                ),
                Label(
                    "g.0.true",
                ),
                Label(
                    "g.0.end",
                ),
                Move {
                    source: Immediate(0, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Move {
                    source: Immediate(0, Four),
                    destination: Register(AX, Four),
                },
                Ret,
            ],
        },
        Function {
            name: "f",
            global: true,
            instructions: [
                AllocateStack(
                    96,
                ),
                Move {
                    source: Register(DI, Four),
                    destination: Stack(12, Four),
                },
                Move {
                    source: Register(SI, Four),
                    destination: Stack(16, Four),
                },
                Move {
                    source: Register(DX, Four),
                    destination: Stack(20, Four),
                },
                Move {
                    source: Register(CX, Four),
                    destination: Stack(24, Four),
                },
                Move {
                    source: Stack(12, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    source: Register(R10, Four),
                    destination: Stack(28, Four),
                },
                Move {
                    source: Stack(28, Four),
                    destination: Register(R11, Four),
                },
                Binary(
                    Mult,
                    Immediate(2, Four),
                    Register(R11, Four),
                ),
                Move {
                    source: Register(R11, Four),
                    destination: Stack(28, Four),
                },
                Move {
                    source: Stack(16, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    source: Register(R10, Four),
                    destination: Stack(32, Four),
                },
                Move {
                    source: Stack(32, Four),
                    destination: Register(R11, Four),
                },
                Binary(
                    Mult,
                    Immediate(2, Four),
                    Register(R11, Four),
                ),
                Move {
                    source: Register(R11, Four),
                    destination: Stack(32, Four),
                },
                Move {
                    source: Stack(20, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    source: Register(R10, Four),
                    destination: Stack(36, Four),
                },
                Move {
                    source: Stack(36, Four),
                    destination: Register(R11, Four),
                },
                Binary(
                    Mult,
                    Immediate(2, Four),
                    Register(R11, Four),
                ),
                Move {
                    source: Register(R11, Four),
                    destination: Stack(36, Four),
                },
                Move {
                    source: Stack(24, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    source: Register(R10, Four),
                    destination: Stack(40, Four),
                },
                Move {
                    source: Stack(40, Four),
                    destination: Register(R11, Four),
                },
                Binary(
                    Mult,
                    Immediate(2, Four),
                    Register(R11, Four),
                ),
                Move {
                    source: Register(R11, Four),
                    destination: Stack(40, Four),
                },
                Move {
                    source: Stack(28, Four),
                    destination: Register(DI, Four),
                },
                Move {
                    source: Stack(32, Four),
                    destination: Register(SI, Four),
                },
                Move {
                    source: Stack(36, Four),
                    destination: Register(DX, Four),
                },
                Move {
                    source: Stack(40, Four),
                    destination: Register(CX, Four),
                },
                Call(
                    "g",
                ),
                Move {
                    source: Register(AX, Four),
                    destination: Stack(44, Four),
                },
                Move {
                    source: Stack(44, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    source: Register(R10, Four),
                    destination: Stack(48, Four),
                },
                Cmp(
                    Immediate(1, Four),
                    Stack(48, Four),
                ),
                Move {
                    source: Immediate(0, Four),
                    destination: Stack(52, Four),
                },
                SetCC(
                    E,
                    Stack(52, Four),
                ),
                Cmp(
                    Immediate(0, Four),
                    Stack(52, Four),
                ),
                JmpCC(
                    E,
                    "f.0.false",
                ),
                Cmp(
                    Immediate(1, Four),
                    Stack(12, Four),
                ),
                Move {
                    source: Immediate(0, Four),
                    destination: Stack(56, Four),
                },
                SetCC(
                    E,
                    Stack(56, Four),
                ),
                Cmp(
                    Immediate(0, Four),
                    Stack(56, Four),
                ),
                JmpCC(
                    E,
                    "f.0.false",
                ),
                Move {
                    source: Immediate(1, Four),
                    destination: Stack(60, Four),
                },
                Jmp(
                    "f.0.end",
                ),
                Label(
                    "f.0.false",
                ),
                Move {
                    source: Immediate(0, Four),
                    destination: Stack(60, Four),
                },
                Label(
                    "f.0.end",
                ),
                Cmp(
                    Immediate(0, Four),
                    Stack(60, Four),
                ),
                JmpCC(
                    E,
                    "f.1.false",
                ),
                Cmp(
                    Immediate(2, Four),
                    Stack(16, Four),
                ),
                Move {
                    source: Immediate(0, Four),
                    destination: Stack(64, Four),
                },
                SetCC(
                    E,
                    Stack(64, Four),
                ),
                Cmp(
                    Immediate(0, Four),
                    Stack(64, Four),
                ),
                JmpCC(
                    E,
                    "f.1.false",
                ),
                Move {
                    source: Immediate(1, Four),
                    destination: Stack(68, Four),
                },
                Jmp(
                    "f.1.end",
                ),
                Label(
                    "f.1.false",
                ),
                Move {
                    source: Immediate(0, Four),
                    destination: Stack(68, Four),
                },
                Label(
                    "f.1.end",
                ),
                Cmp(
                    Immediate(0, Four),
                    Stack(68, Four),
                ),
                JmpCC(
                    E,
                    "f.2.false",
                ),
                Cmp(
                    Immediate(3, Four),
                    Stack(20, Four),
                ),
                Move {
                    source: Immediate(0, Four),
                    destination: Stack(72, Four),
                },
                SetCC(
                    E,
                    Stack(72, Four),
                ),
                Cmp(
                    Immediate(0, Four),
                    Stack(72, Four),
                ),
                JmpCC(
                    E,
                    "f.2.false",
                ),
                Move {
                    source: Immediate(1, Four),
                    destination: Stack(76, Four),
                },
                Jmp(
                    "f.2.end",
                ),
                Label(
                    "f.2.false",
                ),
                Move {
                    source: Immediate(0, Four),
                    destination: Stack(76, Four),
                },
                Label(
                    "f.2.end",
                ),
                Cmp(
                    Immediate(0, Four),
                    Stack(76, Four),
                ),
                JmpCC(
                    E,
                    "f.3.false",
                ),
                Cmp(
                    Immediate(4, Four),
                    Stack(24, Four),
                ),
                Move {
                    source: Immediate(0, Four),
                    destination: Stack(80, Four),
                },
                SetCC(
                    E,
                    Stack(80, Four),
                ),
                Cmp(
                    Immediate(0, Four),
                    Stack(80, Four),
                ),
                JmpCC(
                    E,
                    "f.3.false",
                ),
                Move {
                    source: Immediate(1, Four),
                    destination: Stack(84, Four),
                },
                Jmp(
                    "f.3.end",
                ),
                Label(
                    "f.3.false",
                ),
                Move {
                    source: Immediate(0, Four),
                    destination: Stack(84, Four),
                },
                Label(
                    "f.3.end",
                ),
                Move {
                    source: Stack(84, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Move {
                    source: Immediate(0, Four),
                    destination: Register(AX, Four),
                },
                Ret,
            ],
        },
        Function {
            name: "main",
            global: true,
            instructions: [
                AllocateStack(
                    16,
                ),
                Move {
                    source: Immediate(1, Four),
                    destination: Register(DI, Four),
                },
                Move {
                    source: Immediate(2, Four),
                    destination: Register(SI, Four),
                },
                Move {
                    source: Immediate(3, Four),
                    destination: Register(DX, Four),
                },
                Move {
                    source: Immediate(4, Four),
                    destination: Register(CX, Four),
                },
                Call(
                    "f",
                ),
                Move {
                    source: Register(AX, Four),
                    destination: Stack(12, Four),
                },
                Move {
                    source: Stack(12, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Move {
                    source: Immediate(0, Four),
                    destination: Register(AX, Four),
                },
                Ret,
            ],
        },
    ],
    static_variables: [],
}