Program {
    declarations: [
        FunctionDeclaration {
            identifier: "main",
            params: [],
            ret: Int,
            body: [
                VariableDeclaration {
                    name: "foo",
                    ty: Int,
                    init: Constant(3),
                },
                VariableDeclaration {
                    name: "bar",
                    ty: Int,
                    init: Constant(4),
                },
                If(
                    Binary {
                        op: GreaterThan,
                        lhs: Binary {
                            op: Add,
                            lhs: Var("foo"),
                            rhs: Var("bar"),
                        },
                        rhs: Constant(0),
                    },
                    Compound(
                        [
                            FunctionDeclaration {
                                identifier: "foo",
                                params: [],
                                ret: Int,
                            },
                            Expression(
                                Assignment {
                                    lhs: Var("bar"),
                                    rhs: FunctionCall {
                                        function: Var("foo"),
                                    },
                                },
                            ),
                        ],
                    ),
                    None,
                ),
                Return(
                    Binary {
                        op: Add,
                        lhs: Var("foo"),
                        rhs: Var("bar"),
                    },
                ),
            ],
        },
        FunctionDeclaration {
            identifier: "foo",
            params: [],
            ret: Int,
            body: [
                Return(
                    Constant(8),
                ),
            ],
        },
    ],
}