Program {
    declarations: [
        FunctionDeclaration {
            identifier: "main",
            params: [],
            ret: Int,
            body: [
                FunctionDeclaration {
                    identifier: "foo",
                    params: [],
                    ret: Int,
                },
                VariableDeclaration {
                    name: "x",
                    ty: Int,
                    init: FunctionCall {
                        function: Var("foo"),
                    },
                },
                If(
                    Binary {
                        op: GreaterThan,
                        lhs: Var("x"),
                        rhs: Constant(0),
                    },
                    Compound(
                        [
                            VariableDeclaration {
                                name: "foo",
                                ty: Int,
                                init: Constant(3),
                            },
                            Expression(
                                Assignment {
                                    lhs: Var("x"),
                                    rhs: Binary {
                                        op: Add,
                                        lhs: Var("x"),
                                        rhs: Var("foo"),
                                    },
                                },
                            ),
                        ],
                    ),
                    None,
                ),
                Return(
                    Var("x"),
                ),
            ],
        },
        FunctionDeclaration {
            identifier: "foo",
            params: [],
            ret: Int,
            body: [
                Return(
                    Constant(4),
                ),
            ],
        },
    ],
}