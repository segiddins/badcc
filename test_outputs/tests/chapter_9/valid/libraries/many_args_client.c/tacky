Program {
    static_variables: [],
    functions: [
        Function {
            identifier: "main",
            global: true,
            params: [],
            instructions: [
                Call(
                    "fib",
                    [
                        4,
                    ],
                    Var("main.tmp.0", Int),
                ),
                Copy {
                    src: Var("main.tmp.0", Int),
                    dst: Var("x.12", Int),
                },
                Copy {
                    src: 7,
                    dst: Var("seven.13", Int),
                },
                Call(
                    "fib",
                    [
                        6,
                    ],
                    Var("main.tmp.1", Int),
                ),
                Copy {
                    src: Var("main.tmp.1", Int),
                    dst: Var("eight.14", Int),
                },
                Call(
                    "multiply_many_args",
                    [
                        Var("x.12", Int),
                        2,
                        3,
                        4,
                        5,
                        6,
                        Var("seven.13", Int),
                        Var("eight.14", Int),
                    ],
                    Var("main.tmp.2", Int),
                ),
                Copy {
                    src: Var("main.tmp.2", Int),
                    dst: Var("y.15", Int),
                },
                Binary {
                    op: NotEqual,
                    lhs: Var("x.12", Int),
                    rhs: 3,
                    dst: Var("main.tmp.3", Int),
                },
                JumpIfZero(
                    Var("main.tmp.3", Int),
                    "main.0.true",
                ),
                Return(
                    1,
                ),
                Jump(
                    "main.0.end",
                ),
                Label(
                    "main.0.true",
                ),
                Label(
                    "main.0.end",
                ),
                Binary {
                    op: NotEqual,
                    lhs: Var("y.15", Int),
                    rhs: 589680,
                    dst: Var("main.tmp.4", Int),
                },
                JumpIfZero(
                    Var("main.tmp.4", Int),
                    "main.1.true",
                ),
                Return(
                    2,
                ),
                Jump(
                    "main.1.end",
                ),
                Label(
                    "main.1.true",
                ),
                Label(
                    "main.1.end",
                ),
                Binary {
                    op: Remainder,
                    lhs: Var("y.15", Int),
                    rhs: 256,
                    dst: Var("main.tmp.5", Int),
                },
                Binary {
                    op: Add,
                    lhs: Var("x.12", Int),
                    rhs: Var("main.tmp.5", Int),
                    dst: Var("main.tmp.6", Int),
                },
                Return(
                    Var("main.tmp.6", Int),
                ),
                Return(
                    0,
                ),
            ],
        },
    ],
}