[
    Int,
    Identifier(
        "f",
    ),
    LParen,
    Int,
    Identifier(
        "reg1",
    ),
    Comma,
    Int,
    Identifier(
        "reg2",
    ),
    Comma,
    Int,
    Identifier(
        "reg3",
    ),
    Comma,
    Int,
    Identifier(
        "reg4",
    ),
    Comma,
    Int,
    Identifier(
        "reg5",
    ),
    Comma,
    Int,
    Identifier(
        "reg6",
    ),
    Comma,
    Int,
    Identifier(
        "stack1",
    ),
    Comma,
    Int,
    Identifier(
        "stack2",
    ),
    Comma,
    Int,
    Identifier(
        "stack3",
    ),
    RParen,
    LBrace,
    Int,
    Identifier(
        "x",
    ),
    Equals,
    Constant(
        "10",
    ),
    Semicolon,
    If,
    LParen,
    Identifier(
        "reg1",
    ),
    DoubleEquals,
    Constant(
        "1",
    ),
    DoubleAnd,
    Identifier(
        "reg2",
    ),
    DoubleEquals,
    Constant(
        "2",
    ),
    DoubleAnd,
    Identifier(
        "reg3",
    ),
    DoubleEquals,
    Constant(
        "3",
    ),
    DoubleAnd,
    Identifier(
        "reg4",
    ),
    DoubleEquals,
    Constant(
        "4",
    ),
    DoubleAnd,
    Identifier(
        "reg5",
    ),
    DoubleEquals,
    Constant(
        "5",
    ),
    DoubleAnd,
    Identifier(
        "reg6",
    ),
    DoubleEquals,
    Constant(
        "6",
    ),
    DoubleAnd,
    Identifier(
        "stack1",
    ),
    DoubleEquals,
    Hypen,
    Constant(
        "1",
    ),
    DoubleAnd,
    Identifier(
        "stack2",
    ),
    DoubleEquals,
    Hypen,
    Constant(
        "2",
    ),
    DoubleAnd,
    Identifier(
        "stack3",
    ),
    DoubleEquals,
    Hypen,
    Constant(
        "3",
    ),
    DoubleAnd,
    Identifier(
        "x",
    ),
    DoubleEquals,
    Constant(
        "10",
    ),
    RParen,
    LBrace,
    Identifier(
        "stack2",
    ),
    Equals,
    Constant(
        "100",
    ),
    Semicolon,
    Return,
    Identifier(
        "stack2",
    ),
    Semicolon,
    RBrace,
    Return,
    Constant(
        "0",
    ),
    Semicolon,
    RBrace,
]