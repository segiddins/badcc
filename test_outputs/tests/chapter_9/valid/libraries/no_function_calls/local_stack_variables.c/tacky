Program {
    static_variables: [],
    functions: [
        Function {
            identifier: "f",
            global: true,
            params: [
                Var("reg1.1", Int),
                Var("reg2.2", Int),
                Var("reg3.3", Int),
                Var("reg4.4", Int),
                Var("reg5.5", Int),
                Var("reg6.6", Int),
                Var("stack1.7", Int),
                Var("stack2.8", Int),
                Var("stack3.9", Int),
            ],
            instructions: [
                Copy {
                    src: 10,
                    dst: Var("x.10", Int),
                },
                Binary {
                    op: Equals,
                    lhs: Var("reg1.1", Int),
                    rhs: 1,
                    dst: Var("f.tmp.9", Int),
                },
                JumpIfZero(
                    Var("f.tmp.9", Int),
                    "f.1.false",
                ),
                Binary {
                    op: Equals,
                    lhs: Var("reg2.2", Int),
                    rhs: 2,
                    dst: Var("f.tmp.10", Int),
                },
                JumpIfZero(
                    Var("f.tmp.10", Int),
                    "f.1.false",
                ),
                Copy {
                    src: 1,
                    dst: Var("f.tmp.8", Int),
                },
                Jump(
                    "f.1.end",
                ),
                Label(
                    "f.1.false",
                ),
                Copy {
                    src: 0,
                    dst: Var("f.tmp.8", Int),
                },
                Label(
                    "f.1.end",
                ),
                JumpIfZero(
                    Var("f.tmp.8", Int),
                    "f.2.false",
                ),
                Binary {
                    op: Equals,
                    lhs: Var("reg3.3", Int),
                    rhs: 3,
                    dst: Var("f.tmp.11", Int),
                },
                JumpIfZero(
                    Var("f.tmp.11", Int),
                    "f.2.false",
                ),
                Copy {
                    src: 1,
                    dst: Var("f.tmp.7", Int),
                },
                Jump(
                    "f.2.end",
                ),
                Label(
                    "f.2.false",
                ),
                Copy {
                    src: 0,
                    dst: Var("f.tmp.7", Int),
                },
                Label(
                    "f.2.end",
                ),
                JumpIfZero(
                    Var("f.tmp.7", Int),
                    "f.3.false",
                ),
                Binary {
                    op: Equals,
                    lhs: Var("reg4.4", Int),
                    rhs: 4,
                    dst: Var("f.tmp.12", Int),
                },
                JumpIfZero(
                    Var("f.tmp.12", Int),
                    "f.3.false",
                ),
                Copy {
                    src: 1,
                    dst: Var("f.tmp.6", Int),
                },
                Jump(
                    "f.3.end",
                ),
                Label(
                    "f.3.false",
                ),
                Copy {
                    src: 0,
                    dst: Var("f.tmp.6", Int),
                },
                Label(
                    "f.3.end",
                ),
                JumpIfZero(
                    Var("f.tmp.6", Int),
                    "f.4.false",
                ),
                Binary {
                    op: Equals,
                    lhs: Var("reg5.5", Int),
                    rhs: 5,
                    dst: Var("f.tmp.13", Int),
                },
                JumpIfZero(
                    Var("f.tmp.13", Int),
                    "f.4.false",
                ),
                Copy {
                    src: 1,
                    dst: Var("f.tmp.5", Int),
                },
                Jump(
                    "f.4.end",
                ),
                Label(
                    "f.4.false",
                ),
                Copy {
                    src: 0,
                    dst: Var("f.tmp.5", Int),
                },
                Label(
                    "f.4.end",
                ),
                JumpIfZero(
                    Var("f.tmp.5", Int),
                    "f.5.false",
                ),
                Binary {
                    op: Equals,
                    lhs: Var("reg6.6", Int),
                    rhs: 6,
                    dst: Var("f.tmp.14", Int),
                },
                JumpIfZero(
                    Var("f.tmp.14", Int),
                    "f.5.false",
                ),
                Copy {
                    src: 1,
                    dst: Var("f.tmp.4", Int),
                },
                Jump(
                    "f.5.end",
                ),
                Label(
                    "f.5.false",
                ),
                Copy {
                    src: 0,
                    dst: Var("f.tmp.4", Int),
                },
                Label(
                    "f.5.end",
                ),
                JumpIfZero(
                    Var("f.tmp.4", Int),
                    "f.6.false",
                ),
                Unary {
                    op: Negate,
                    src: 1,
                    dst: Var("f.tmp.15", Int),
                },
                Binary {
                    op: Equals,
                    lhs: Var("stack1.7", Int),
                    rhs: Var("f.tmp.15", Int),
                    dst: Var("f.tmp.16", Int),
                },
                JumpIfZero(
                    Var("f.tmp.16", Int),
                    "f.6.false",
                ),
                Copy {
                    src: 1,
                    dst: Var("f.tmp.3", Int),
                },
                Jump(
                    "f.6.end",
                ),
                Label(
                    "f.6.false",
                ),
                Copy {
                    src: 0,
                    dst: Var("f.tmp.3", Int),
                },
                Label(
                    "f.6.end",
                ),
                JumpIfZero(
                    Var("f.tmp.3", Int),
                    "f.7.false",
                ),
                Unary {
                    op: Negate,
                    src: 2,
                    dst: Var("f.tmp.17", Int),
                },
                Binary {
                    op: Equals,
                    lhs: Var("stack2.8", Int),
                    rhs: Var("f.tmp.17", Int),
                    dst: Var("f.tmp.18", Int),
                },
                JumpIfZero(
                    Var("f.tmp.18", Int),
                    "f.7.false",
                ),
                Copy {
                    src: 1,
                    dst: Var("f.tmp.2", Int),
                },
                Jump(
                    "f.7.end",
                ),
                Label(
                    "f.7.false",
                ),
                Copy {
                    src: 0,
                    dst: Var("f.tmp.2", Int),
                },
                Label(
                    "f.7.end",
                ),
                JumpIfZero(
                    Var("f.tmp.2", Int),
                    "f.8.false",
                ),
                Unary {
                    op: Negate,
                    src: 3,
                    dst: Var("f.tmp.19", Int),
                },
                Binary {
                    op: Equals,
                    lhs: Var("stack3.9", Int),
                    rhs: Var("f.tmp.19", Int),
                    dst: Var("f.tmp.20", Int),
                },
                JumpIfZero(
                    Var("f.tmp.20", Int),
                    "f.8.false",
                ),
                Copy {
                    src: 1,
                    dst: Var("f.tmp.1", Int),
                },
                Jump(
                    "f.8.end",
                ),
                Label(
                    "f.8.false",
                ),
                Copy {
                    src: 0,
                    dst: Var("f.tmp.1", Int),
                },
                Label(
                    "f.8.end",
                ),
                JumpIfZero(
                    Var("f.tmp.1", Int),
                    "f.9.false",
                ),
                Binary {
                    op: Equals,
                    lhs: Var("x.10", Int),
                    rhs: 10,
                    dst: Var("f.tmp.21", Int),
                },
                JumpIfZero(
                    Var("f.tmp.21", Int),
                    "f.9.false",
                ),
                Copy {
                    src: 1,
                    dst: Var("f.tmp.0", Int),
                },
                Jump(
                    "f.9.end",
                ),
                Label(
                    "f.9.false",
                ),
                Copy {
                    src: 0,
                    dst: Var("f.tmp.0", Int),
                },
                Label(
                    "f.9.end",
                ),
                JumpIfZero(
                    Var("f.tmp.0", Int),
                    "f.0.true",
                ),
                Copy {
                    src: 100,
                    dst: Var("stack2.8", Int),
                },
                Return(
                    Var("stack2.8", Int),
                ),
                Jump(
                    "f.0.end",
                ),
                Label(
                    "f.0.true",
                ),
                Label(
                    "f.0.end",
                ),
                Return(
                    0,
                ),
                Return(
                    0,
                ),
            ],
        },
    ],
}