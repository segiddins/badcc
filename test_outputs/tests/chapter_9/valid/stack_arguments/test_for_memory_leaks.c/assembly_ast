Program {
    definitions: [
        Function {
            name: "lots_of_args",
            global: true,
            instructions: [
                AllocateStack(
                    80,
                ),
                Move {
                    asm_type: Longword,
                    source: Register(DI, Four),
                    destination: Stack(12, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(SI, Four),
                    destination: Stack(16, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(DX, Four),
                    destination: Stack(20, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(CX, Four),
                    destination: Stack(24, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R8, Four),
                    destination: Stack(28, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R9, Four),
                    destination: Stack(32, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(-16, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(36, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(-24, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(40, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(-32, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(44, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(-40, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(48, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(-48, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(52, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(-56, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(56, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(-64, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(60, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(-72, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(64, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(-80, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(68, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(56, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(72, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(68, Four),
                    destination: Register(R10, Four),
                },
                Binary(
                    Longword,
                    Add,
                    Register(R10, Four),
                    Stack(72, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(72, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Move {
                    asm_type: Longword,
                    source: Immediate(0, Four),
                    destination: Register(AX, Four),
                },
                Ret,
            ],
        },
        Function {
            name: "main",
            global: true,
            instructions: [
                AllocateStack(
                    32,
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(0, Four),
                    destination: Stack(12, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Immediate(0, Four),
                    destination: Stack(16, Four),
                },
                Label(
                    "loop.0.cond",
                ),
                Cmp(
                    Longword,
                    Immediate(10000000, Four),
                    Stack(16, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(0, Four),
                    destination: Stack(20, Four),
                },
                SetCC(
                    L,
                    Stack(20, Four),
                ),
                Cmp(
                    Longword,
                    Immediate(0, Four),
                    Stack(20, Four),
                ),
                JmpCC(
                    E,
                    "loop.0",
                ),
                AllocateStack(
                    8,
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(1, Four),
                    destination: Register(DI, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Immediate(2, Four),
                    destination: Register(SI, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Immediate(3, Four),
                    destination: Register(DX, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Immediate(4, Four),
                    destination: Register(CX, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Immediate(5, Four),
                    destination: Register(R8, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Immediate(6, Four),
                    destination: Register(R9, Four),
                },
                Push(
                    Immediate(15, Four),
                ),
                Push(
                    Immediate(14, Four),
                ),
                Push(
                    Immediate(13, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(12, Four),
                    destination: Register(AX, Four),
                },
                Push(
                    Register(AX, Eight),
                ),
                Push(
                    Immediate(11, Four),
                ),
                Push(
                    Immediate(10, Four),
                ),
                Push(
                    Immediate(9, Four),
                ),
                Push(
                    Immediate(8, Four),
                ),
                Push(
                    Immediate(7, Four),
                ),
                Call(
                    "lots_of_args",
                ),
                DeallocateStack(
                    80,
                ),
                Move {
                    asm_type: Longword,
                    source: Register(AX, Four),
                    destination: Stack(24, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Stack(24, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(12, Four),
                },
                Label(
                    "loop.0.start",
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(16, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(28, Four),
                },
                Binary(
                    Longword,
                    Add,
                    Immediate(1, Four),
                    Stack(28, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(28, Four),
                    destination: Register(R10, Four),
                },
                Move {
                    asm_type: Longword,
                    source: Register(R10, Four),
                    destination: Stack(16, Four),
                },
                Jmp(
                    "loop.0.cond",
                ),
                Label(
                    "loop.0",
                ),
                Cmp(
                    Longword,
                    Immediate(150000000, Four),
                    Stack(12, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Immediate(0, Four),
                    destination: Stack(32, Four),
                },
                SetCC(
                    E,
                    Stack(32, Four),
                ),
                Move {
                    asm_type: Longword,
                    source: Stack(32, Four),
                    destination: Register(AX, Four),
                },
                Ret,
                Move {
                    asm_type: Longword,
                    source: Immediate(0, Four),
                    destination: Register(AX, Four),
                },
                Ret,
            ],
        },
    ],
    static_variables: [],
    static_constants: [],
}