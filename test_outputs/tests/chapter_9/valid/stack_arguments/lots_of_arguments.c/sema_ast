Program {
    declarations: [
        FunctionDeclaration {
            identifier: "foo",
            params: [
                (
                    Int,
                    "a.1",
                    SourceSpan {
                        offset: SourceOffset(
                            12,
                        ),
                        length: 1,
                    },
                ),
                (
                    Int,
                    "b.2",
                    SourceSpan {
                        offset: SourceOffset(
                            19,
                        ),
                        length: 1,
                    },
                ),
                (
                    Int,
                    "c.3",
                    SourceSpan {
                        offset: SourceOffset(
                            26,
                        ),
                        length: 1,
                    },
                ),
                (
                    Int,
                    "d.4",
                    SourceSpan {
                        offset: SourceOffset(
                            33,
                        ),
                        length: 1,
                    },
                ),
                (
                    Int,
                    "e.5",
                    SourceSpan {
                        offset: SourceOffset(
                            40,
                        ),
                        length: 1,
                    },
                ),
                (
                    Int,
                    "f.6",
                    SourceSpan {
                        offset: SourceOffset(
                            47,
                        ),
                        length: 1,
                    },
                ),
                (
                    Int,
                    "g.7",
                    SourceSpan {
                        offset: SourceOffset(
                            54,
                        ),
                        length: 1,
                    },
                ),
                (
                    Int,
                    "h.8",
                    SourceSpan {
                        offset: SourceOffset(
                            61,
                        ),
                        length: 1,
                    },
                ),
            ],
            ret: Int,
            body: [
                Return(
                    Binary {
                        op: And,
                        lhs: Binary {
                            op: And,
                            lhs: Binary {
                                op: And,
                                lhs: Binary {
                                    op: And,
                                    lhs: Binary {
                                        op: And,
                                        lhs: Binary {
                                            op: And,
                                            lhs: Binary {
                                                op: And,
                                                lhs: Binary {
                                                    op: Equals,
                                                    lhs: Var("a.1"),
                                                    rhs: Constant(1),
                                                },
                                                rhs: Binary {
                                                    op: Equals,
                                                    lhs: Var("b.2"),
                                                    rhs: Constant(2),
                                                },
                                            },
                                            rhs: Binary {
                                                op: Equals,
                                                lhs: Var("c.3"),
                                                rhs: Constant(3),
                                            },
                                        },
                                        rhs: Binary {
                                            op: Equals,
                                            lhs: Var("d.4"),
                                            rhs: Constant(4),
                                        },
                                    },
                                    rhs: Binary {
                                        op: Equals,
                                        lhs: Var("e.5"),
                                        rhs: Constant(5),
                                    },
                                },
                                rhs: Binary {
                                    op: Equals,
                                    lhs: Var("f.6"),
                                    rhs: Constant(6),
                                },
                            },
                            rhs: Binary {
                                op: Equals,
                                lhs: Var("g.7"),
                                rhs: Constant(7),
                            },
                        },
                        rhs: Binary {
                            op: Equals,
                            lhs: Var("h.8"),
                            rhs: Constant(8),
                        },
                    },
                ),
            ],
        },
        FunctionDeclaration {
            identifier: "main",
            params: [],
            ret: Int,
            body: [
                Return(
                    FunctionCall {
                        function: Var("foo"),
                        params: [
                            Constant(1),
                            Constant(2),
                            Constant(3),
                            Constant(4),
                            Constant(5),
                            Constant(6),
                            Constant(7),
                            Constant(8),
                        ],
                    },
                ),
            ],
        },
    ],
}